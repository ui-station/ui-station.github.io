{"pageProps":{"post":{"title":"GSoC 2024  OpenMRS 5주차  환자 생성 및 리소스 동기화","description":"","date":"2024-06-30 19:30","slug":"2024-06-30-GSoC2024OpenMRSWeek5PatientCreationSyncedResources","content":"\n\n안녕하세요 여러분! 🌟\n\n모두가 멋진 하루를 보내고 계시길 바랍니다! 이번 주는 몇 가지 중요한 발전이 있는 흥미로운 여정이었습니다. 강조할만한 부분을 알아보도록 하죠!\n\n![이미지](/assets/img/2024-06-30-GSoC2024OpenMRSWeek5PatientCreationSyncedResources_0.png)\n\n# OpenMRS에서 FHIR 엔드포인트를 활용한 환자 생성 🏥\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n환자를 만드는 도전에 도전 중이었어요. 특히 FHIR 엔드포인트를 사용하는 것이 너무 어려웠어요. 이유는 Patient 리소스에 고유한 환자 식별자를 제공해야 했기 때문이에요. 저희의 여정을 간략히 소개할게요:\n\n# 시도한 방법:\n\n- Idgen 엔드포인트 방법: 이 방법은 idgen 엔드포인트를 호출하여 고유한 ID를 생성하고 이를 환자 리소스 페이로드와 함께 포함하는 방법이었어요. 웹 앱에선 간단하지만 오프라인 우선 애플리케이션에는 최적이 아니었어요.\n- HSU ID 방법: 이 방법은 요청 페이로드에 위치 ID를 사용하여 엔드포인트를 호출하여 세션 ID를 가져오는 것을 요구했어요. 이 세션 ID에는 사용자의 위치 정보가 포함되어 있어 쿠키로 전달되어야 했어요. 그러나 RESTful API에 대한 세션 유지는 이상적이지 않았어요.\n- Legacy-ID 식별자 솔루션: 마침내 legacy-id 식별자를 사용하기로 결정했어요. 이 방법은 값만 필요로 하기 때문에 UUID를 제공하여 고유성을 보장할 수 있어요. 연간 약 10만 명의 사용자에게 안전한 방법이에요.\n\n# 예시 FHIR 환자 리소스:\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n엔드포인트:\n\n![img](/assets/img/2024-06-30-GSoC2024OpenMRSWeek5PatientCreationSyncedResources_1.png)\n\n리소스:\n\n```js\n{\n  \"resourceType\": \"Patient\",\n  \"meta\": {\n    \"versionId\": \"1\"\n  },\n  \"name\": [\n    {\n      \"use\": \"official\",\n      \"family\": \"Jane Doe\",\n      \"given\": [\n        \"10000032\"\n      ]\n    }\n  ],\n  \"gender\": \"female\",\n  \"birthDate\": \"1928-05-06\",\n  \"identifier\": [\n    {\n      \"use\": \"official\",\n      \"type\": {\n        \"text\": \"Legacy ID\"\n      },\n      \"value\": \"dd1819e6-b0b7-4286-8941-a82a0a0fceb0\"\n    }\n  ],\n  \"address\": [\n    {\n      \"use\": \"home\",\n      \"city\": \"Unknown City\",\n      \"state\": \"Unknown State\",\n      \"postalCode\": \"Unknown PostalCode\",\n      \"country\": \"Unknown Country\"\n    }\n  ],\n  \"active\": true,\n  \"deceasedBoolean\": false\n}\n```\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 동기화된 자원 기능 🔄\n\n저희 애플리케이션에서 환자가 등록되면 로컬에 저장됩니다. 사용자가 서버와 동기화할 때만 환자가 업로드됩니다. 데이터 손실을 피하기 위해 사용자가 환자 데이터가 동기화되었는지 알 수 있어야 합니다.\n\n![이미지](/assets/img/2024-06-30-GSoC2024OpenMRSWeek5PatientCreationSyncedResources_2.png)\n\n# 구현 단계:\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- Unsynced 환자 식별: 저는 FhirEngine의 localChanges API를 사용하여 동기화되지 않은 환자를 식별하기 위한 로직을 개발했습니다. 이 API는 FHIR 자원에 적용된 로컬 변경 목록을 반환합니다. 환자 목록을 가져온 후에는 각 환자에 대한 로컬 변경 목록이 비어 있는지 확인하여(동기화된 자원을 나타냄) 이 정보를 PatientItem의 isSynced 플래그로 저장합니다.\n- UI 업데이트: 이 데이터를 사용하여 UI가 동기화 상태를 적절하게 반영합니다.\n\n# PR 링크:\n\n여기서 구현 상세 내용을 확인하세요.\n\n# 다음 주 계획 🔧\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 환자 생성 테스트 및 통합: 환자 생성 프로세스가 매끄럽게 작동하는지 확인합니다.\n- 환자 편집 기능: 환자 편집 기능을 추가 및 개선합니다.\n- UI 업데이트: 더 많은 화면에서 사용자 인터페이스를 개선하여 더 나은 사용자 경험을 제공합니다.\n\n더 많은 업데이트를 기대해주시고, 이 흥미진진한 여정을 따라와 주셔서 감사합니다! 🎉\n\n독자 여러분, 읽어 주셔서 감사합니다! 저에게 문의할 사항이 있으시면 언제든지 연락해주세요! 특히 헬스케어, 풀스택 개발, FHIR, OpenMRS Android, Open Health Stack, 노래 추천 등이라면 더욱 환영합니다. 🎵\n\nLinkedIn이나 OpenMRS Talk에서 저를 찾아보시고 GitHub에서 제 프로젝트를 확인해보세요.","ogImage":{"url":"/assets/img/2024-06-30-GSoC2024OpenMRSWeek5PatientCreationSyncedResources_0.png"},"coverImage":"/assets/img/2024-06-30-GSoC2024OpenMRSWeek5PatientCreationSyncedResources_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>안녕하세요 여러분! 🌟</p>\n<p>모두가 멋진 하루를 보내고 계시길 바랍니다! 이번 주는 몇 가지 중요한 발전이 있는 흥미로운 여정이었습니다. 강조할만한 부분을 알아보도록 하죠!</p>\n<p><img src=\"/assets/img/2024-06-30-GSoC2024OpenMRSWeek5PatientCreationSyncedResources_0.png\" alt=\"이미지\"></p>\n<h1>OpenMRS에서 FHIR 엔드포인트를 활용한 환자 생성 🏥</h1>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>환자를 만드는 도전에 도전 중이었어요. 특히 FHIR 엔드포인트를 사용하는 것이 너무 어려웠어요. 이유는 Patient 리소스에 고유한 환자 식별자를 제공해야 했기 때문이에요. 저희의 여정을 간략히 소개할게요:</p>\n<h1>시도한 방법:</h1>\n<ul>\n<li>Idgen 엔드포인트 방법: 이 방법은 idgen 엔드포인트를 호출하여 고유한 ID를 생성하고 이를 환자 리소스 페이로드와 함께 포함하는 방법이었어요. 웹 앱에선 간단하지만 오프라인 우선 애플리케이션에는 최적이 아니었어요.</li>\n<li>HSU ID 방법: 이 방법은 요청 페이로드에 위치 ID를 사용하여 엔드포인트를 호출하여 세션 ID를 가져오는 것을 요구했어요. 이 세션 ID에는 사용자의 위치 정보가 포함되어 있어 쿠키로 전달되어야 했어요. 그러나 RESTful API에 대한 세션 유지는 이상적이지 않았어요.</li>\n<li>Legacy-ID 식별자 솔루션: 마침내 legacy-id 식별자를 사용하기로 결정했어요. 이 방법은 값만 필요로 하기 때문에 UUID를 제공하여 고유성을 보장할 수 있어요. 연간 약 10만 명의 사용자에게 안전한 방법이에요.</li>\n</ul>\n<h1>예시 FHIR 환자 리소스:</h1>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>엔드포인트:</p>\n<p><img src=\"/assets/img/2024-06-30-GSoC2024OpenMRSWeek5PatientCreationSyncedResources_1.png\" alt=\"img\"></p>\n<p>리소스:</p>\n<pre><code class=\"hljs language-js\">{\n  <span class=\"hljs-string\">\"resourceType\"</span>: <span class=\"hljs-string\">\"Patient\"</span>,\n  <span class=\"hljs-string\">\"meta\"</span>: {\n    <span class=\"hljs-string\">\"versionId\"</span>: <span class=\"hljs-string\">\"1\"</span>\n  },\n  <span class=\"hljs-string\">\"name\"</span>: [\n    {\n      <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"official\"</span>,\n      <span class=\"hljs-string\">\"family\"</span>: <span class=\"hljs-string\">\"Jane Doe\"</span>,\n      <span class=\"hljs-string\">\"given\"</span>: [\n        <span class=\"hljs-string\">\"10000032\"</span>\n      ]\n    }\n  ],\n  <span class=\"hljs-string\">\"gender\"</span>: <span class=\"hljs-string\">\"female\"</span>,\n  <span class=\"hljs-string\">\"birthDate\"</span>: <span class=\"hljs-string\">\"1928-05-06\"</span>,\n  <span class=\"hljs-string\">\"identifier\"</span>: [\n    {\n      <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"official\"</span>,\n      <span class=\"hljs-string\">\"type\"</span>: {\n        <span class=\"hljs-string\">\"text\"</span>: <span class=\"hljs-string\">\"Legacy ID\"</span>\n      },\n      <span class=\"hljs-string\">\"value\"</span>: <span class=\"hljs-string\">\"dd1819e6-b0b7-4286-8941-a82a0a0fceb0\"</span>\n    }\n  ],\n  <span class=\"hljs-string\">\"address\"</span>: [\n    {\n      <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"home\"</span>,\n      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"Unknown City\"</span>,\n      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"Unknown State\"</span>,\n      <span class=\"hljs-string\">\"postalCode\"</span>: <span class=\"hljs-string\">\"Unknown PostalCode\"</span>,\n      <span class=\"hljs-string\">\"country\"</span>: <span class=\"hljs-string\">\"Unknown Country\"</span>\n    }\n  ],\n  <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-string\">\"deceasedBoolean\"</span>: <span class=\"hljs-literal\">false</span>\n}\n</code></pre>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>동기화된 자원 기능 🔄</h1>\n<p>저희 애플리케이션에서 환자가 등록되면 로컬에 저장됩니다. 사용자가 서버와 동기화할 때만 환자가 업로드됩니다. 데이터 손실을 피하기 위해 사용자가 환자 데이터가 동기화되었는지 알 수 있어야 합니다.</p>\n<p><img src=\"/assets/img/2024-06-30-GSoC2024OpenMRSWeek5PatientCreationSyncedResources_2.png\" alt=\"이미지\"></p>\n<h1>구현 단계:</h1>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<ul>\n<li>Unsynced 환자 식별: 저는 FhirEngine의 localChanges API를 사용하여 동기화되지 않은 환자를 식별하기 위한 로직을 개발했습니다. 이 API는 FHIR 자원에 적용된 로컬 변경 목록을 반환합니다. 환자 목록을 가져온 후에는 각 환자에 대한 로컬 변경 목록이 비어 있는지 확인하여(동기화된 자원을 나타냄) 이 정보를 PatientItem의 isSynced 플래그로 저장합니다.</li>\n<li>UI 업데이트: 이 데이터를 사용하여 UI가 동기화 상태를 적절하게 반영합니다.</li>\n</ul>\n<h1>PR 링크:</h1>\n<p>여기서 구현 상세 내용을 확인하세요.</p>\n<h1>다음 주 계획 🔧</h1>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<ul>\n<li>환자 생성 테스트 및 통합: 환자 생성 프로세스가 매끄럽게 작동하는지 확인합니다.</li>\n<li>환자 편집 기능: 환자 편집 기능을 추가 및 개선합니다.</li>\n<li>UI 업데이트: 더 많은 화면에서 사용자 인터페이스를 개선하여 더 나은 사용자 경험을 제공합니다.</li>\n</ul>\n<p>더 많은 업데이트를 기대해주시고, 이 흥미진진한 여정을 따라와 주셔서 감사합니다! 🎉</p>\n<p>독자 여러분, 읽어 주셔서 감사합니다! 저에게 문의할 사항이 있으시면 언제든지 연락해주세요! 특히 헬스케어, 풀스택 개발, FHIR, OpenMRS Android, Open Health Stack, 노래 추천 등이라면 더욱 환영합니다. 🎵</p>\n<p>LinkedIn이나 OpenMRS Talk에서 저를 찾아보시고 GitHub에서 제 프로젝트를 확인해보세요.</p>\n</body>\n</html>\n"},"__N_SSG":true}
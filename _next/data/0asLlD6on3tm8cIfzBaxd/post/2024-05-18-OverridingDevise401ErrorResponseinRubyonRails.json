{"pageProps":{"post":{"title":"루비 온 레일즈에서 Devise 401 오류 응답 덮어쓰기","description":"","date":"2024-05-18 15:16","slug":"2024-05-18-OverridingDevise401ErrorResponseinRubyonRails","content":"\n\n```\n![Image](/assets/img/2024-05-18-OverridingDevise401ErrorResponseinRubyonRails_0.png)\n\n안녕하세요, 여러분! 오늘은 루비 온 레일즈 앱에서 뷰와 엔드포인트를 동시에 가지고 있을 때 Devise 401 에러 응답을 어떻게 오버라이딩하는지 이야기하려고 해요. 우선, 제 문제를 소개하고 해결책에 대해 논의하려고 해요. 다른 해결책이 있다면 제게 공유해주세요.\n\n제 User 모델에 Devise 메서드가 있어요:\n\n```ruby\ndevise :registerable,\n  :recoverable, :rememberable, :lockable, :trackable,\n  :omniauthable\n\ndef active_for_authentication?\n  super and is_active?\nend\n```\n\n<div class=\"content-ad\"></div>\n\n해당 메서드는 사용자가 활성화되어 있는지 여부를 확인합니다. 사용자가 활성화되어 있지 않으면 Devise가 세션을 생성하는 것을 허용하지 않습니다.\n\n세션 컨트롤러가 있습니다:\n\n```js\nclass Api::V2::SessionsController < Devise::SessionsController\n  respond_to :json\n\n  def create\n    # 여러분의 코드\n  end\nend\n```\n\n우리는 Devise::SessionsController에서 Api::V2::SessionsController의 create 메서드를 오버라이드합니다. 하지만 active_for_authentication? 메서드의 응답 키나 값을 오버라이드할 수 없습니다. 일반적으로 응답은 아래와 같습니다:\n\n<div class=\"content-ad\"></div>\n\n```js\n{\n    \"error\": \"Your account is not activated yet.\"\n}\n```\n\n위 응답은 원하는 형식이 아닙니다. 아래처럼 덮어쓰기해야 합니다:\n\n```js\n{\n    \"success\": false,\n    \"status\": 401,\n    \"message\": \"Your account is not activated yet.\",\n    \"errors\": [\n        {\n            \"field_name\": \"inactive_user\",\n            \"messages\": [\n                \"Your account is not activated yet.\"\n            ]\n        }\n    ]\n}\n```\n\n## 이를 수정하는 데는 2단계가 필요합니다.```\n\n<div class=\"content-ad\"></div>\n\n- 새로운 관심사를 만들기\n\n```js\nclass CustomFailureApp < Devise::FailureApp\n  def http_auth_body\n    if request.controller_class == Api::V2::SessionsController && request.format == :json\n      json_error_response\n    else\n      super\n    end\n  end\n\n  def json_error_response\n    self.status = 401\n    self.content_type = \"application/json\"\n    self.response_body =\n      {\n        success: false,\n        status: 401,\n        message: I18n.t('devise.failure.inactive'),\n        \"errors\": [\n          {\n            \"field_name\": \"inactive_user\",\n            \"messages\": [\n              I18n.t('devise.failure.inactive')\n            ]\n          }\n        ]\n      }.to_json\n  end\nend\n```\n\n2. Devise 구성 추가\n\n```js\n config.warden do |manager|\n    manager.failure_app = CustomAuthFailure\n  end \n```\n\n<div class=\"content-ad\"></div>\n\nThe Links:\n\n- [https://gist.github.com/emilsoman/5604254#file-custom_auth_failure_app-rb](https://gist.github.com/emilsoman/5604254#file-custom_auth_failure_app-rb)\n- [https://stackoverflow.com/questions/7297183/custom-devise-401-unauthorized-response/35299936#35299936](https://stackoverflow.com/questions/7297183/custom-devise-401-unauthorized-response/35299936#35299936)\n- [https://github.com/heartcombo/devise/blob/main/app/controllers/devise/sessions_controller.rb](https://github.com/heartcombo/devise/blob/main/app/controllers/devise/sessions_controller.rb)\n- [https://github.com/heartcombo/devise/blob/main/lib/devise/failure_app.rb#L197](https://github.com/heartcombo/devise/blob/main/lib/devise/failure_app.rb#L197)","ogImage":{"url":"/assets/img/2024-05-18-OverridingDevise401ErrorResponseinRubyonRails_0.png"},"coverImage":"/assets/img/2024-05-18-OverridingDevise401ErrorResponseinRubyonRails_0.png","tag":["Tech"],"readingTime":3},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    pre: \"pre\",\n    code: \"code\",\n    p: \"p\",\n    span: \"span\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"![Image](/assets/img/2024-05-18-OverridingDevise401ErrorResponseinRubyonRails_0.png)\\n\\n안녕하세요, 여러분! 오늘은 루비 온 레일즈 앱에서 뷰와 엔드포인트를 동시에 가지고 있을 때 Devise 401 에러 응답을 어떻게 오버라이딩하는지 이야기하려고 해요. 우선, 제 문제를 소개하고 해결책에 대해 논의하려고 해요. 다른 해결책이 있다면 제게 공유해주세요.\\n\\n제 User 모델에 Devise 메서드가 있어요:\\n\\n```ruby\\ndevise :registerable,\\n  :recoverable, :rememberable, :lockable, :trackable,\\n  :omniauthable\\n\\ndef active_for_authentication?\\n  super and is_active?\\nend\\n\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"해당 메서드는 사용자가 활성화되어 있는지 여부를 확인합니다. 사용자가 활성화되어 있지 않으면 Devise가 세션을 생성하는 것을 허용하지 않습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"세션 컨트롤러가 있습니다:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Api\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"V2\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"SessionsController\"\n        }), \" < \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Devise\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"SessionsController\"\n        }), \"\\n  respond_to :json\\n\\n  def create\\n    # 여러분의 코드\\n  end\\nend\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"우리는 Devise::SessionsController에서 Api::V2::SessionsController의 create 메서드를 오버라이드합니다. 하지만 active_for_authentication? 메서드의 응답 키나 값을 오버라이드할 수 없습니다. 일반적으로 응답은 아래와 같습니다:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"{\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"error\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Your account is not activated yet.\\\"\"\n        }), \"\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"위 응답은 원하는 형식이 아닙니다. 아래처럼 덮어쓰기해야 합니다:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"{\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"success\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"status\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"401\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"message\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Your account is not activated yet.\\\"\"\n        }), \",\\n    \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"errors\\\"\"\n        }), \": [\\n        {\\n            \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"field_name\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"inactive_user\\\"\"\n        }), \",\\n            \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"messages\\\"\"\n        }), \": [\\n                \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Your account is not activated yet.\\\"\"\n        }), \"\\n            ]\\n        }\\n    ]\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"이를 수정하는 데는 2단계가 필요합니다.```\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"새로운 관심사를 만들기\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomFailureApp\"\n        }), \" < \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Devise\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"FailureApp\"\n        }), \"\\n  def http_auth_body\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" request.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"controller_class\"\n        }), \" == \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Api\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"V2\"\n        }), \"::\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"SessionsController\"\n        }), \" && request.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"format\"\n        }), \" == :json\\n      json_error_response\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"else\"\n        }), \"\\n      \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"super\"\n        }), \"\\n    end\\n  end\\n\\n  def json_error_response\\n    self.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"status\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"401\"\n        }), \"\\n    self.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"content_type\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"application/json\\\"\"\n        }), \"\\n    self.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"response_body\"\n        }), \" =\\n      {\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"success\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \",\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"status\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"401\"\n        }), \",\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"message\"\n        }), \": I18n.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"t\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'devise.failure.inactive'\"\n        }), \"),\\n        \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"errors\\\"\"\n        }), \": [\\n          {\\n            \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"field_name\\\"\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"inactive_user\\\"\"\n        }), \",\\n            \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"messages\\\"\"\n        }), \": [\\n              I18n.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"t\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'devise.failure.inactive'\"\n        }), \")\\n            ]\\n          }\\n        ]\\n      }.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"to_json\"\n        }), \"\\n  end\\nend\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Devise 구성 추가\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\" config.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"warden\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"do\"\n        }), \" |manager|\\n    manager.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"failure_app\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAuthFailure\"\n        }), \"\\n  end \\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The Links:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://gist.github.com/emilsoman/5604254#file-custom_auth_failure_app-rb\",\n          children: \"https://gist.github.com/emilsoman/5604254#file-custom_auth_failure_app-rb\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://stackoverflow.com/questions/7297183/custom-devise-401-unauthorized-response/35299936#35299936\",\n          children: \"https://stackoverflow.com/questions/7297183/custom-devise-401-unauthorized-response/35299936#35299936\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/heartcombo/devise/blob/main/app/controllers/devise/sessions_controller.rb\",\n          children: \"https://github.com/heartcombo/devise/blob/main/app/controllers/devise/sessions_controller.rb\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/heartcombo/devise/blob/main/lib/devise/failure_app.rb#L197\",\n          children: \"https://github.com/heartcombo/devise/blob/main/lib/devise/failure_app.rb#L197\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}
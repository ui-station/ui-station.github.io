{"pageProps":{"post":{"title":"SwiftUI 모양으로 하는 심장 애니메이션","description":"","date":"2024-05-20 16:14","slug":"2024-05-20-SwiftUIHeartanimationwithshape","content":"\n![Heart Shape](/assets/img/2024-05-20-SwiftUIHeartanimationwithshape_0.png)\n\n사각형, 둥근 사각형, 원 및 캡슐은 SwiftUI에서 사용할 수 있지만 하트 모양은 제공되지 않으므로 저는 Shape Protocol을 사용하여 직접 만들었습니다.\n\n# 하트 만들기\n\n```swift\nstruct HeartShape: Shape {\n    let minX = 10\n    let centerX = 55\n    let maxX = 100\n    let minY = 10\n    let maxY = 100\n\n    func path(in rect: CGRect) -> Path {\n        Path { path in\n            path.move(to: CGPoint(x: centerX, y: maxY))\n            path.addQuadCurve(to: CGPoint(x: minX, y: 50), control: CGPoint(x: minX, y: 70))\n            path.addQuadCurve(to: CGPoint(x: centerX, y: 30), control: CGPoint(x: minX, y: minY))\n            path.addQuadCurve(to: CGPoint(x: maxX, y: 50), control: CGPoint(x: maxX, y: minY))\n            path.addQuadCurve(to: CGPoint(x: centerX, y: maxY), control: CGPoint(x: maxX, y: 70))\n            path.closeSubpath()\n        }\n    }\n}\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이곳에서 도형에 대해 더 많이 배워보세요\n\n# 애니메이션 추가\n\n```js\nimport SwiftUI\n\nstruct HeartAnimation: View {\n\n    // MARK: - Properties\n    @State private var to:CGFloat = 0\n\n    // MARK: - Body\n    var body: some View {\n        HeartShape()\n            .trim(from: 0, to: to)\n            .stroke(Color.pink, style: StrokeStyle(lineWidth: 5, lineCap: .round))\n            .frame(width: 110, height: 110)\n            .onAppear {\n                withAnimation(\n                    Animation\n                        .easeInOut(duration: 0.7)\n                        .repeatForever(autoreverses: false)) {\n                            to = 1\n                        }\n            }\n    }\n}\n```\n\n![이동](https://miro.medium.com/v2/resize:fit:590/1*_RXEvVkvqCafU2ke7Fe17Q.gif)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n감사합니다!\n","ogImage":{"url":"/assets/img/2024-05-20-SwiftUIHeartanimationwithshape_0.png"},"coverImage":"/assets/img/2024-05-20-SwiftUIHeartanimationwithshape_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-05-20-SwiftUIHeartanimationwithshape_0.png\" alt=\"Heart Shape\"></p>\n<p>사각형, 둥근 사각형, 원 및 캡슐은 SwiftUI에서 사용할 수 있지만 하트 모양은 제공되지 않으므로 저는 Shape Protocol을 사용하여 직접 만들었습니다.</p>\n<h1>하트 만들기</h1>\n<pre><code class=\"hljs language-swift\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">HeartShape</span>: <span class=\"hljs-title class_\">Shape</span> {\n    <span class=\"hljs-keyword\">let</span> minX <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">10</span>\n    <span class=\"hljs-keyword\">let</span> centerX <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">55</span>\n    <span class=\"hljs-keyword\">let</span> maxX <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">100</span>\n    <span class=\"hljs-keyword\">let</span> minY <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">10</span>\n    <span class=\"hljs-keyword\">let</span> maxY <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">100</span>\n\n    <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">path</span>(<span class=\"hljs-params\">in</span> <span class=\"hljs-params\">rect</span>: <span class=\"hljs-type\">CGRect</span>) -> <span class=\"hljs-type\">Path</span> {\n        <span class=\"hljs-type\">Path</span> { path <span class=\"hljs-keyword\">in</span>\n            path.move(to: <span class=\"hljs-type\">CGPoint</span>(x: centerX, y: maxY))\n            path.addQuadCurve(to: <span class=\"hljs-type\">CGPoint</span>(x: minX, y: <span class=\"hljs-number\">50</span>), control: <span class=\"hljs-type\">CGPoint</span>(x: minX, y: <span class=\"hljs-number\">70</span>))\n            path.addQuadCurve(to: <span class=\"hljs-type\">CGPoint</span>(x: centerX, y: <span class=\"hljs-number\">30</span>), control: <span class=\"hljs-type\">CGPoint</span>(x: minX, y: minY))\n            path.addQuadCurve(to: <span class=\"hljs-type\">CGPoint</span>(x: maxX, y: <span class=\"hljs-number\">50</span>), control: <span class=\"hljs-type\">CGPoint</span>(x: maxX, y: minY))\n            path.addQuadCurve(to: <span class=\"hljs-type\">CGPoint</span>(x: centerX, y: maxY), control: <span class=\"hljs-type\">CGPoint</span>(x: maxX, y: <span class=\"hljs-number\">70</span>))\n            path.closeSubpath()\n        }\n    }\n}\n</code></pre>\n<p></p>\n<p>이곳에서 도형에 대해 더 많이 배워보세요</p>\n<h1>애니메이션 추가</h1>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">SwiftUI</span>\n\nstruct <span class=\"hljs-title class_\">HeartAnimation</span>: <span class=\"hljs-title class_\">View</span> {\n\n    <span class=\"hljs-comment\">// MARK: - Properties</span>\n    @<span class=\"hljs-title class_\">State</span> private <span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">to</span>:<span class=\"hljs-title class_\">CGFloat</span> = <span class=\"hljs-number\">0</span>\n\n    <span class=\"hljs-comment\">// MARK: - Body</span>\n    <span class=\"hljs-keyword\">var</span> <span class=\"hljs-attr\">body</span>: some <span class=\"hljs-title class_\">View</span> {\n        <span class=\"hljs-title class_\">HeartShape</span>()\n            .<span class=\"hljs-title function_\">trim</span>(<span class=\"hljs-attr\">from</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">to</span>: to)\n            .<span class=\"hljs-title function_\">stroke</span>(<span class=\"hljs-title class_\">Color</span>.<span class=\"hljs-property\">pink</span>, <span class=\"hljs-attr\">style</span>: <span class=\"hljs-title class_\">StrokeStyle</span>(<span class=\"hljs-attr\">lineWidth</span>: <span class=\"hljs-number\">5</span>, <span class=\"hljs-attr\">lineCap</span>: .<span class=\"hljs-property\">round</span>))\n            .<span class=\"hljs-title function_\">frame</span>(<span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">110</span>, <span class=\"hljs-attr\">height</span>: <span class=\"hljs-number\">110</span>)\n            .<span class=\"hljs-property\">onAppear</span> {\n                <span class=\"hljs-title function_\">withAnimation</span>(<span class=\"hljs-params\">\n                    Animation\n                        .easeInOut(duration: <span class=\"hljs-number\">0.7</span>)\n                        .repeatForever(autoreverses: <span class=\"hljs-literal\">false</span>)</span>) {\n                            to = <span class=\"hljs-number\">1</span>\n                        }\n            }\n    }\n}\n</code></pre>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:590/1*_RXEvVkvqCafU2ke7Fe17Q.gif\" alt=\"이동\"></p>\n<p></p>\n<p>감사합니다!</p>\n</body>\n</html>\n"},"__N_SSG":true}
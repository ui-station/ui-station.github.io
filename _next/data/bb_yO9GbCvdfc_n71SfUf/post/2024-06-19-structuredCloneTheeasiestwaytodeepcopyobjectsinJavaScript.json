{"pageProps":{"post":{"title":"구조화된 복제 JavaScript에서 객체를 깊은 복사하는 가장 쉬운 방법","description":"","date":"2024-06-19 11:33","slug":"2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript","content":"\n깊은 복사는 데이터를 전달하거나 저장하기 위한 정기적인 프로그래밍 작업입니다.\n\n- Shallow copy: 객체의 첫 번째 수준만 복사합니다.\n- Deep copy: 객체의 모든 수준을 복사합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n하지만 이 시간 동안 완벽한 객체 깊은 복사를 위한 내장 방법이 없었고, 신경 써야 했어요.\n\n우리는 항상 서드파티 라이브러리를 의존하여 깊은 복사와 순환 참조를 유지해야 했어요.\n\n지금은 새로운 structuredClone()을 통해 모든 객체를 깊은 복사할 수 있는 쉽고 효율적인 방법이 생겼어요.\n\n![image](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_2.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n쉽게 순환 참조를 복제하고 있어요:\n\n![이미지](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_3.png)\n\nJSON stringify/parse 트릭으로는 할 수 없었던 작업이예요:\n\n![이미지](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_4.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n깊게 들어가 보세요:\n\n![image](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_5.png)\n\n## 알아야 할 제한 사항\n\nstructuredClone()은 매우 강력하지만 알아야 할 중요한 약점이 있습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 함수나 메소드를 복제할 수 없어요\n\n![이미지](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_6.png)\n\n사용하는 특별한 알고리즘 덕분이에요.\n\n![이미지](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_7.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# DOM 요소를 클론할 수 없어요\n\n![이미지1](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_8.png)\n\n![이미지2](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_9.png)\n\n![이미지3](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_10.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# RegExp의 lastIndex 속성을 보존하지 않음\n\n말 그대로, 누가 정규식을 복제하겠어요. 하지만 하나 주목할 점은:\n\n![이미지](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_11.png)\n\n# 다른 제한 사항\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n함수를 사용할 때 예기치 않은 동작을 피하기 위해 그것들을 인지하는 것이 중요합니다.\n\n## 일부 복제하고 이동하기\n\n이것은 좀 더 복잡한 것입니다.\n\n원본에서 클론으로 내부 객체를 복사하는 대신 이동시킵니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n해석 결과에 더 이상 수정할 내용이 없습니다. 해당 내용은 다음과 같습니다:\n\n![image](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_12.png)\n\nstructuredClone()는 JavaScript 개발자의 도구상자에 속한 귀중한 요소로, 객체 복제를 이전보다 쉽게 만들어줍니다.\n","ogImage":{"url":"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_0.png"},"coverImage":"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_0.png","tag":["Tech"],"readingTime":5},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>깊은 복사는 데이터를 전달하거나 저장하기 위한 정기적인 프로그래밍 작업입니다.</p>\n<ul>\n<li>Shallow copy: 객체의 첫 번째 수준만 복사합니다.</li>\n<li>Deep copy: 객체의 모든 수준을 복사합니다.</li>\n</ul>\n<p></p>\n<p>하지만 이 시간 동안 완벽한 객체 깊은 복사를 위한 내장 방법이 없었고, 신경 써야 했어요.</p>\n<p>우리는 항상 서드파티 라이브러리를 의존하여 깊은 복사와 순환 참조를 유지해야 했어요.</p>\n<p>지금은 새로운 structuredClone()을 통해 모든 객체를 깊은 복사할 수 있는 쉽고 효율적인 방법이 생겼어요.</p>\n<p><img src=\"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_2.png\" alt=\"image\"></p>\n<p></p>\n<p>쉽게 순환 참조를 복제하고 있어요:</p>\n<p><img src=\"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_3.png\" alt=\"이미지\"></p>\n<p>JSON stringify/parse 트릭으로는 할 수 없었던 작업이예요:</p>\n<p><img src=\"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_4.png\" alt=\"이미지\"></p>\n<p></p>\n<p>깊게 들어가 보세요:</p>\n<p><img src=\"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_5.png\" alt=\"image\"></p>\n<h2>알아야 할 제한 사항</h2>\n<p>structuredClone()은 매우 강력하지만 알아야 할 중요한 약점이 있습니다:</p>\n<p></p>\n<h1>함수나 메소드를 복제할 수 없어요</h1>\n<p><img src=\"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_6.png\" alt=\"이미지\"></p>\n<p>사용하는 특별한 알고리즘 덕분이에요.</p>\n<p><img src=\"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_7.png\" alt=\"이미지\"></p>\n<p></p>\n<h1>DOM 요소를 클론할 수 없어요</h1>\n<p><img src=\"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_8.png\" alt=\"이미지1\"></p>\n<p><img src=\"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_9.png\" alt=\"이미지2\"></p>\n<p><img src=\"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_10.png\" alt=\"이미지3\"></p>\n<p></p>\n<h1>RegExp의 lastIndex 속성을 보존하지 않음</h1>\n<p>말 그대로, 누가 정규식을 복제하겠어요. 하지만 하나 주목할 점은:</p>\n<p><img src=\"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_11.png\" alt=\"이미지\"></p>\n<h1>다른 제한 사항</h1>\n<p></p>\n<p>함수를 사용할 때 예기치 않은 동작을 피하기 위해 그것들을 인지하는 것이 중요합니다.</p>\n<h2>일부 복제하고 이동하기</h2>\n<p>이것은 좀 더 복잡한 것입니다.</p>\n<p>원본에서 클론으로 내부 객체를 복사하는 대신 이동시킵니다.</p>\n<p></p>\n<p>해석 결과에 더 이상 수정할 내용이 없습니다. 해당 내용은 다음과 같습니다:</p>\n<p><img src=\"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_12.png\" alt=\"image\"></p>\n<p>structuredClone()는 JavaScript 개발자의 도구상자에 속한 귀중한 요소로, 객체 복제를 이전보다 쉽게 만들어줍니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}
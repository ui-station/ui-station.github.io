{"pageProps":{"post":{"title":"라즈베리파이를 와이파이 라우터로 변신해보세요","description":"","date":"2024-05-18 18:33","slug":"2024-05-18-TurnyourRaspberryPiintoaWiFiRouter","content":"\nRaspberry Pi를 무선 액세스 포인트로 설정하는 방법\n\n![이미지](/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_0.png)\n\nRaspberry Pi를 무선 액세스 포인트로 설정하는 방법을 보여 드리겠습니다. 기본적으로 다른 장치가 연결할 수 있는 무선 \"라우터\"로 Raspberry Pi를 변환하는 방법을 안내해 드리겠습니다. 이를 통해 생성된 무선 액세스 포인트를 설정하여 연결된 장치에 인터넷 액세스를 제공(공유)하는 방법도 안내해 드리겠습니다.\n\n![이미지](/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_1.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 이렇게 하였습니다\n\n라즈베리 파이 설정을 위한 링크에 들어가 보세요. 설정이 완료되면 라즈베리 파이로 Wi-Fi 핫스팟을 만들기 시작해 봅시다.\n\n# 단계 1:\n\n일반적으로 라즈베리 파이를 업데이트하여 최신 버전을 보유하도록 합니다\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nsudo apt-get update\nsudo apt-get upgrade\n\n# STEP-2:\n\n라즈베리 파이가 액세스 포인트로 작동하려면 액세스 포인트로 작동하기 위한 소프트웨어 패키지가 필요합니다.\n\n아래 명령어는 라즈베리 파이를 무선 액세스 포인트로 설정할 수 있게 해주는 소프트웨어를 설치하고, AP에 연결된 장치에 네트워크 주소를 할당하는 데 도움을 주는 소프트웨어를 설치합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\nsudo apt install hostapd\nsudo apt install dnsmasq\n```\n\n마지막으로, netfilter-persistent와 그 플러그인 iptables-persistent를 설치해주세요. 이 유틸리티는 방화벽 규칙을 저장하고 Raspberry Pi 부팅 시에 복원하는 데 도움이 됩니다.\n\n```js\nsudo DEBIAN_FRONTEND=noninteractive apt install -y netfilter-persistent iptables-persistent\n```\n\n다음 단계로 이동하기 전에 Raspberry Pi를 다시 부팅해주세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nsudo reboot\n\n# STEP-3:\n\nRaspberry Pi는 독립 와이어리스 네트워크를 실행하고 관리합니다. 또한 와이어리스 및 이더넷 네트워크 간 경로를 제공하여 와이어리스 클라이언트에게 인터넷 액세스를 제공합니다. Raspberry Pi를 서버로 설정하기 위해서는 와이어리스 포트에 고정 IP 주소를 할당해야 합니다. 이 작업은 dhcpcd 구성 파일을 편집하여 수행할 수 있습니다. dhcpcd.conf 파일을 편집하려면 아래 명령을 실행하세요.\n\nsudo nano /etc/dhcpcd.conf\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\ndhcpcd.conf 파일 끝으로 이동하여 다음 라인들을 추가해주세요.\n\n```js\ninterface wlan0\n    static ip_address=192.168.4.1/24\n    nohook wpa_supplicant\n```\n\n![이미지](/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_2.png)\n\n# STEP-4:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n라즈베리 파이에서 한 네트워크에서 다른 네트워크로 트래픽이 흐를 수 있도록 하려면 다음 명령을 사용하여 파일을 생성하고 아래 내용을 입력하세요:\n\n```js\nsudo nano /etc/sysctl.d/routed-ap.conf\n```\n\n파일 내용:\n\n```js\n# IPv4 라우팅 활성화\nnet.ipv4.ip_forward=1\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아래는 경로를 추가하여 호스트가 네트워크 192.168.4.0/24로 LAN 및 인터넷으로 이동할 수 있도록하는 설정입니다.\n\n이 프로세스는 Raspberry Pi에 한 개의 방화벽 규칙을 추가하여 구성됩니다.\n\n```js\nsudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이제 현재 IPv4 및 IPv6 방화벽 규칙을 netfilter-persistent 서비스를 통해 부팅 시 로드할 수 있도록 다음 명령을 사용하여 저장하세요.\n\n```js\nsudo netfilter-persistent save\n```\n\n# 단계-5:\n\nDHCP 및 DNS 서비스는 dnsmasq에서 제공됩니다. 기본 구성 파일은 모든 가능한 구성 옵션의 템플릿 역할을 합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n기본 설정 파일의 이름을 변경하고 새 파일을 편집해보세요\n\n```js\nsudo mv /etc/dnsmasq.conf /etc/dnsmasq.conf.orig\nsudo nano /etc/dnsmasq.conf\n```\n\n다음을 파일에 추가하고 저장하세요,\n\n```js\ninterface=wlan0\ndhcp-range=192.168.4.2,192.168.4.20,255.255.255.0,24시간\ndomain=wlan\naddress=/gw.wlan/192.168.4.1\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아래는 코드 블록 안에 있는 내용을 실행하여 라즈베리파이의 WiFi 라디오가 차단되지 않도록 할 수 있습니다:\n\n```js\nsudo rfkill unblock wlan\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 설정은 부팅 시 자동으로 복원됩니다. 액세스 포인트 소프트웨어 구성에서 적절한 국가 코드를 정의할 것입니다.\n\n# 단계-6:\n\n새로운 무선 네트워크를 위한 다양한 매개변수를 추가하기 위해 /etc/hostapd/hostapd.conf에 있는 호스팅 설정 파일을 만들어 주세요.\n\n```js\ncountry_code = IN;\ninterface = wlan0;\nssid = 네트워크이름;\nhw_mode = g;\nchannel = 7;\nmacaddr_acl = 0;\nauth_algs = 1;\nignore_broadcast_ssid = 0;\nwpa = 2;\nwpa_passphrase = 암호;\nwpa_key_mgmt = WPA - PSK;\nwpa_pairwise = TKIP;\nrsn_pairwise = CCMP;\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n참고: `country_code`는 컴퓨터가 올바른 무선 주파수를 사용하도록 구성합니다. 두 글자 ISO 3166-1 국가 코드 목록은 위키피디아에서 확인할 수 있습니다.\n\n- SSID: 여러분의 SSID (제 경우 네트워크 이름)\n\n- PWD: 여러분의 비밀번호 (제 경우 비밀번호)\n\n![이미지](/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_5.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nRaspberry Pi에 적용한 변경 사항을 적용하려면 시스템을 다시 시작하세요.\n\n```js\nsudo systemctl reboot\n```\n\n시스템이 다시 켜지면 Raspberry Pi에서 만든 무선 액세스 포인트에 연결하여 인터넷에 액세스할 수 있게 될 것입니다.\n\n<img src=\"/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_6.png\" />\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n읽어 주셔서 감사합니다. 피드백과 코멘트는 언제나 환영합니다.\n\n# GEEKY BAWA\n\n## 새로운 기술을 탐구하고 멋진 경험을 하는 것을 좋아하는 어리석은 Geek예요.\n\n# 다른 블로그도 재밌게 둘러보세요\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 내 유튜브 채널도 한번 확인해보세요\n\n만약 연락하고 싶으시거나 좋은 농담을 알고 계시다면 트위터나 링크드인을 통해 연락해 주세요.\n\n독자 여러분 감사합니다!😄 🙌\n\n트위터와 링크드인에서 저와 소통해 보세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n다른 기사와 참고 자료를 확인하러 시간 내어보세요. 제 글을 알림받으려면 저를 팔로우해주세요.\n\n# Vaibhav Hariramani가 진심을 담아 제작했습니다.\n\n- 이 글을 즐기셨다면 미디엄에서 더 많은 글을 읽어보세요!\n- 더 많은 콘텐츠를 원하시면 캐글에서 저를 팔로우하세요!\n- 링크드인에서 연락해주세요.\n- 협업에 관심이 있으세요?\n- 제 웹사이트를 확인해보세요.\n- 다른 웹사이트도 함께 확인해보세요.\n\n# 저희를 태그하지 말고는 없습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n만약 이 블로그가 도움이 되었다면 친구들과 공유하고, 저희를 언급하는 것을 잊지 마세요. 그리고 Linkedin, Instagram, Facebook, Twitter, Github에서도 공유하는 것을 잊지 마세요.\n\n# 추가 자료\n\n이 자료들에 대해 더 배우고 싶다면 아래 나의 쓴 글들을 참고하세요:-\n\n- Medium\n- geeky Traveller\n- Blogs\n- Youtube\n- 이메일: vaibhav.hariramani01@gmail.com\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 더 바이브하브 하리라마니 앱 다운로드\n\n# 더 바이브하브 하리라마니 앱 (최신 버전)\n\n더 바이브하브 하리라마니 앱 다운로드는 안드로이드 스튜디오 및 웹 뷰로 개발된 사이트의 자습서, 프로젝트, 블로그 및 브이로그를 포함하고 있습니다. 안드로이드 기기에 설치해보세요.\n\n# 저를 팔로우해주세요\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n마크다운 형식으로 테이블 태그를 변경해주세요.\n\n| Linkedin        | Instagram | Facebook | Twitter | Github |\n| --------------- | --------- | -------- | ------- | ------ |\n| Happy coding ❤️ |\n","ogImage":{"url":"/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_0.png"},"coverImage":"/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_0.png","tag":["Tech"],"readingTime":10},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p>Raspberry Pi를 무선 액세스 포인트로 설정하는 방법</p>\n<p><img src=\"/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_0.png\" alt=\"이미지\"></p>\n<p>Raspberry Pi를 무선 액세스 포인트로 설정하는 방법을 보여 드리겠습니다. 기본적으로 다른 장치가 연결할 수 있는 무선 \"라우터\"로 Raspberry Pi를 변환하는 방법을 안내해 드리겠습니다. 이를 통해 생성된 무선 액세스 포인트를 설정하여 연결된 장치에 인터넷 액세스를 제공(공유)하는 방법도 안내해 드리겠습니다.</p>\n<p><img src=\"/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_1.png\" alt=\"이미지\"></p>\n<p></p>\n<h1>이렇게 하였습니다</h1>\n<p>라즈베리 파이 설정을 위한 링크에 들어가 보세요. 설정이 완료되면 라즈베리 파이로 Wi-Fi 핫스팟을 만들기 시작해 봅시다.</p>\n<h1>단계 1:</h1>\n<p>일반적으로 라즈베리 파이를 업데이트하여 최신 버전을 보유하도록 합니다</p>\n<p></p>\n<p>sudo apt-get update\nsudo apt-get upgrade</p>\n<h1>STEP-2:</h1>\n<p>라즈베리 파이가 액세스 포인트로 작동하려면 액세스 포인트로 작동하기 위한 소프트웨어 패키지가 필요합니다.</p>\n<p>아래 명령어는 라즈베리 파이를 무선 액세스 포인트로 설정할 수 있게 해주는 소프트웨어를 설치하고, AP에 연결된 장치에 네트워크 주소를 할당하는 데 도움을 주는 소프트웨어를 설치합니다.</p>\n<p></p>\n<pre><code class=\"hljs language-js\">sudo apt install hostapd\nsudo apt install dnsmasq\n</code></pre>\n<p>마지막으로, netfilter-persistent와 그 플러그인 iptables-persistent를 설치해주세요. 이 유틸리티는 방화벽 규칙을 저장하고 Raspberry Pi 부팅 시에 복원하는 데 도움이 됩니다.</p>\n<pre><code class=\"hljs language-js\">sudo <span class=\"hljs-variable constant_\">DEBIAN_FRONTEND</span>=noninteractive apt install -y netfilter-persistent iptables-persistent\n</code></pre>\n<p>다음 단계로 이동하기 전에 Raspberry Pi를 다시 부팅해주세요.</p>\n<p></p>\n<p>sudo reboot</p>\n<h1>STEP-3:</h1>\n<p>Raspberry Pi는 독립 와이어리스 네트워크를 실행하고 관리합니다. 또한 와이어리스 및 이더넷 네트워크 간 경로를 제공하여 와이어리스 클라이언트에게 인터넷 액세스를 제공합니다. Raspberry Pi를 서버로 설정하기 위해서는 와이어리스 포트에 고정 IP 주소를 할당해야 합니다. 이 작업은 dhcpcd 구성 파일을 편집하여 수행할 수 있습니다. dhcpcd.conf 파일을 편집하려면 아래 명령을 실행하세요.</p>\n<p>sudo nano /etc/dhcpcd.conf</p>\n<p></p>\n<p>dhcpcd.conf 파일 끝으로 이동하여 다음 라인들을 추가해주세요.</p>\n<pre><code class=\"hljs language-js\">interface wlan0\n    <span class=\"hljs-keyword\">static</span> ip_address=<span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.4</span><span class=\"hljs-number\">.1</span>/<span class=\"hljs-number\">24</span>\n    nohook wpa_supplicant\n</code></pre>\n<p><img src=\"/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_2.png\" alt=\"이미지\"></p>\n<h1>STEP-4:</h1>\n<p></p>\n<p>라즈베리 파이에서 한 네트워크에서 다른 네트워크로 트래픽이 흐를 수 있도록 하려면 다음 명령을 사용하여 파일을 생성하고 아래 내용을 입력하세요:</p>\n<pre><code class=\"hljs language-js\">sudo nano /etc/sysctl.<span class=\"hljs-property\">d</span>/routed-ap.<span class=\"hljs-property\">conf</span>\n</code></pre>\n<p>파일 내용:</p>\n<pre><code class=\"hljs language-js\"># <span class=\"hljs-title class_\">IPv4</span> 라우팅 활성화\nnet.<span class=\"hljs-property\">ipv4</span>.<span class=\"hljs-property\">ip_forward</span>=<span class=\"hljs-number\">1</span>\n</code></pre>\n<p></p>\n<p>아래는 경로를 추가하여 호스트가 네트워크 192.168.4.0/24로 LAN 및 인터넷으로 이동할 수 있도록하는 설정입니다.</p>\n<p>이 프로세스는 Raspberry Pi에 한 개의 방화벽 규칙을 추가하여 구성됩니다.</p>\n<pre><code class=\"hljs language-js\">sudo iptables -t nat -A <span class=\"hljs-variable constant_\">POSTROUTING</span> -o eth0 -j <span class=\"hljs-variable constant_\">MASQUERADE</span>\n</code></pre>\n<p></p>\n<p>이제 현재 IPv4 및 IPv6 방화벽 규칙을 netfilter-persistent 서비스를 통해 부팅 시 로드할 수 있도록 다음 명령을 사용하여 저장하세요.</p>\n<pre><code class=\"hljs language-js\">sudo netfilter-persistent save\n</code></pre>\n<h1>단계-5:</h1>\n<p>DHCP 및 DNS 서비스는 dnsmasq에서 제공됩니다. 기본 구성 파일은 모든 가능한 구성 옵션의 템플릿 역할을 합니다.</p>\n<p></p>\n<p>기본 설정 파일의 이름을 변경하고 새 파일을 편집해보세요</p>\n<pre><code class=\"hljs language-js\">sudo mv /etc/dnsmasq.<span class=\"hljs-property\">conf</span> /etc/dnsmasq.<span class=\"hljs-property\">conf</span>.<span class=\"hljs-property\">orig</span>\nsudo nano /etc/dnsmasq.<span class=\"hljs-property\">conf</span>\n</code></pre>\n<p>다음을 파일에 추가하고 저장하세요,</p>\n<pre><code class=\"hljs language-js\">interface=wlan0\ndhcp-range=<span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.4</span><span class=\"hljs-number\">.2</span>,<span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.4</span><span class=\"hljs-number\">.20</span>,<span class=\"hljs-number\">255.255</span><span class=\"hljs-number\">.255</span><span class=\"hljs-number\">.0</span>,<span class=\"hljs-number\">24</span>시간\ndomain=wlan\naddress=<span class=\"hljs-regexp\">/gw.wlan/</span><span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.4</span><span class=\"hljs-number\">.1</span>\n</code></pre>\n<p></p>\n<p>아래는 코드 블록 안에 있는 내용을 실행하여 라즈베리파이의 WiFi 라디오가 차단되지 않도록 할 수 있습니다:</p>\n<pre><code class=\"hljs language-js\">sudo rfkill unblock wlan\n</code></pre>\n<p></p>\n<p>이 설정은 부팅 시 자동으로 복원됩니다. 액세스 포인트 소프트웨어 구성에서 적절한 국가 코드를 정의할 것입니다.</p>\n<h1>단계-6:</h1>\n<p>새로운 무선 네트워크를 위한 다양한 매개변수를 추가하기 위해 /etc/hostapd/hostapd.conf에 있는 호스팅 설정 파일을 만들어 주세요.</p>\n<pre><code class=\"hljs language-js\">country_code = <span class=\"hljs-variable constant_\">IN</span>;\ninterface = wlan0;\nssid = 네트워크이름;\nhw_mode = g;\nchannel = <span class=\"hljs-number\">7</span>;\nmacaddr_acl = <span class=\"hljs-number\">0</span>;\nauth_algs = <span class=\"hljs-number\">1</span>;\nignore_broadcast_ssid = <span class=\"hljs-number\">0</span>;\nwpa = <span class=\"hljs-number\">2</span>;\nwpa_passphrase = 암호;\nwpa_key_mgmt = <span class=\"hljs-variable constant_\">WPA</span> - <span class=\"hljs-variable constant_\">PSK</span>;\nwpa_pairwise = <span class=\"hljs-variable constant_\">TKIP</span>;\nrsn_pairwise = <span class=\"hljs-variable constant_\">CCMP</span>;\n</code></pre>\n<p></p>\n<p>참고: <code>country_code</code>는 컴퓨터가 올바른 무선 주파수를 사용하도록 구성합니다. 두 글자 ISO 3166-1 국가 코드 목록은 위키피디아에서 확인할 수 있습니다.</p>\n<ul>\n<li>\n<p>SSID: 여러분의 SSID (제 경우 네트워크 이름)</p>\n</li>\n<li>\n<p>PWD: 여러분의 비밀번호 (제 경우 비밀번호)</p>\n</li>\n</ul>\n<p><img src=\"/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_5.png\" alt=\"이미지\"></p>\n<p></p>\n<p>Raspberry Pi에 적용한 변경 사항을 적용하려면 시스템을 다시 시작하세요.</p>\n<pre><code class=\"hljs language-js\">sudo systemctl reboot\n</code></pre>\n<p>시스템이 다시 켜지면 Raspberry Pi에서 만든 무선 액세스 포인트에 연결하여 인터넷에 액세스할 수 있게 될 것입니다.</p>\n<p></p>\n<p>읽어 주셔서 감사합니다. 피드백과 코멘트는 언제나 환영합니다.</p>\n<h1>GEEKY BAWA</h1>\n<h2>새로운 기술을 탐구하고 멋진 경험을 하는 것을 좋아하는 어리석은 Geek예요.</h2>\n<h1>다른 블로그도 재밌게 둘러보세요</h1>\n<p></p>\n<h1>내 유튜브 채널도 한번 확인해보세요</h1>\n<p>만약 연락하고 싶으시거나 좋은 농담을 알고 계시다면 트위터나 링크드인을 통해 연락해 주세요.</p>\n<p>독자 여러분 감사합니다!😄 🙌</p>\n<p>트위터와 링크드인에서 저와 소통해 보세요.</p>\n<p></p>\n<p>다른 기사와 참고 자료를 확인하러 시간 내어보세요. 제 글을 알림받으려면 저를 팔로우해주세요.</p>\n<h1>Vaibhav Hariramani가 진심을 담아 제작했습니다.</h1>\n<ul>\n<li>이 글을 즐기셨다면 미디엄에서 더 많은 글을 읽어보세요!</li>\n<li>더 많은 콘텐츠를 원하시면 캐글에서 저를 팔로우하세요!</li>\n<li>링크드인에서 연락해주세요.</li>\n<li>협업에 관심이 있으세요?</li>\n<li>제 웹사이트를 확인해보세요.</li>\n<li>다른 웹사이트도 함께 확인해보세요.</li>\n</ul>\n<h1>저희를 태그하지 말고는 없습니다.</h1>\n<p></p>\n<p>만약 이 블로그가 도움이 되었다면 친구들과 공유하고, 저희를 언급하는 것을 잊지 마세요. 그리고 Linkedin, Instagram, Facebook, Twitter, Github에서도 공유하는 것을 잊지 마세요.</p>\n<h1>추가 자료</h1>\n<p>이 자료들에 대해 더 배우고 싶다면 아래 나의 쓴 글들을 참고하세요:-</p>\n<ul>\n<li>Medium</li>\n<li>geeky Traveller</li>\n<li>Blogs</li>\n<li>Youtube</li>\n<li>이메일: <a href=\"mailto:vaibhav.hariramani01@gmail.com\">vaibhav.hariramani01@gmail.com</a></li>\n</ul>\n<p></p>\n<h1>더 바이브하브 하리라마니 앱 다운로드</h1>\n<h1>더 바이브하브 하리라마니 앱 (최신 버전)</h1>\n<p>더 바이브하브 하리라마니 앱 다운로드는 안드로이드 스튜디오 및 웹 뷰로 개발된 사이트의 자습서, 프로젝트, 블로그 및 브이로그를 포함하고 있습니다. 안드로이드 기기에 설치해보세요.</p>\n<h1>저를 팔로우해주세요</h1>\n<p></p>\n<p>마크다운 형식으로 테이블 태그를 변경해주세요.</p>\n<table>\n<thead>\n<tr>\n<th>Linkedin</th>\n<th>Instagram</th>\n<th>Facebook</th>\n<th>Twitter</th>\n<th>Github</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Happy coding ❤️</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</body>\n</html>\n"},"__N_SSG":true}
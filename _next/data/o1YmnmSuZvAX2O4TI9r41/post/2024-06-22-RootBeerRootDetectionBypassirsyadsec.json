{"pageProps":{"post":{"title":"RootBeer 루트 감지 우회 방법  irsyadsec","description":"","date":"2024-06-22 22:20","slug":"2024-06-22-RootBeerRootDetectionBypassirsyadsec","content":"\n\n\n![RootBeer](/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_0.png)\n\n몇 달 전에 어떤 애플리케이션의 침투 테스트를 진행했는데, 해당 애플리케이션이 루팅된 기기를 감지하기 위해 사용되는 RootBeer 라이브러리로 보호되어 있음을 발견했습니다. 이 기사에서는 RootBeer 라이브러리를 우회하는 방법을 보여드리겠습니다. 이때 사용할 것은 샘플 RootBeer 애플리케이션입니다.\n\n시작하기 전에, 이미 Frida Server 및 ADB 사용에 익숙하다고 가정합니다.\n\n# RootBeer 라이브러리 우회 단계별 안내\n\n\n<div class=\"content-ad\"></div>\n\n## 1. 환경 설정\n\n아래 도구들이 설치되어 있는지 확인해주세요:\n\n- ADB (Android Debug Bridge): 안드로이드 장치와 통신하는 데 사용됩니다.\n- Frida Server: 개발자, 역공학자 및 보안 연구자를 위한 동적 인스트루먼테이션 툴킷입니다.\n- 에뮬레이터: 이 경우, ldplayer를 사용하고 있습니다.\n\n## 2. 장치 준비\n\n<div class=\"content-ad\"></div>\n\nFrida 릴리스 페이지에서 기기 아키텍처에 맞는 적절한 Frida Server 이진 파일을 다운로드하세요.\n\n에뮬레이터에 연결하세요\n\n```js\nadb devices -l\n```\n\n<img src=\"/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_1.png\" />\n\n<div class=\"content-ad\"></div>\n\n```js\nadb root\n```\n\n<img src=\"/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_2.png\" />\n\nADB를 사용하여 바이너리를 장치로 푸시합니다:\n\n```js\nadb push frida-server-16.0.10-android-x86_64 /data/local/tmp\n```\n\n<div class=\"content-ad\"></div>\n\n파일에 대한 권한을 주십시오.\n\n```js\nadb shell\ncd /data/local/tmp\nchmod +x frida-server-16.0.10-android-x86_64\n```\n\n![이미지](/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_3.png)\n\n프리다 서버를 시작하세요.\n\n<div class=\"content-ad\"></div>\n\n```js\n./frida-server-16.0.10-android-x86_64 -D\n```\n\n![Root Detection Bypass](/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_4.png)\n\n## 3. 루트 우회\n\n여기서는 GitHub에서 이미 사용 가능한 exploit 파일을 사용하여 가장 빠른 방법을 사용할 것입니다. Pich4ya의 exploit을 사용하고 있으며, 해당 사이트에서 다운로드할 수 있습니다. 그에게 큰 박수를 보내요👏👏👏👏\n\n<div class=\"content-ad\"></div>\n\n이미지 태그를 Markdown 형식으로 변경하세요.\n\n![이미지](/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_5.png)\n\n파일을 다운로드한 후 저장한 폴더로 이동하여 명령 프롬프트를 엽니다.\n\n애플리케이션 패키지 이름을 찾습니다.\n\n```js\nfrida-ps -Uai\n```\n\n<div class=\"content-ad\"></div>\n\n<img src=\"/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_6.png\" />\n\nRootbeer 샘플 애플리케이션을 사용 중이기 때문에 패키지 이름은 com.scottyab.rootbeer.sample 입니다.\n\n그 다음에 다음 명령어를 실행하세요\n\n```js\nfrida -l root.js -U -f com.example.app --pause\n```\n\n<div class=\"content-ad\"></div>\n\n엔터를 누른 후 다시 타이핑하세요\n\n```js\n%이력서\n```\n\n![이미지](/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_7.png)\n\n그리고 Voilaaaa 당신의 apk가 이미 우회됐어야 합니다\n\n<div class=\"content-ad\"></div>\n\n<표>를 마크다운 형식으로 변경해보세요.\n\n그리고 와! APK가 바이패스되어야 합니다.\n\n![이미지](/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_8.png)\n\n이렇게 도움이 되는 기사들을 더 보시고 싶으세요? 귀하의 지원이 저에게 가치 있는 콘텐츠를 만들 수 있게 합니다. 더 많은 무료 프롬프트를 만들기 위해 커피 한 잔 사주시겠어요? 귀하의 기부에 감사드립니다! ❤️❤️❤️","ogImage":{"url":"/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_0.png"},"coverImage":"/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_0.png\" alt=\"RootBeer\"></p>\n<p>몇 달 전에 어떤 애플리케이션의 침투 테스트를 진행했는데, 해당 애플리케이션이 루팅된 기기를 감지하기 위해 사용되는 RootBeer 라이브러리로 보호되어 있음을 발견했습니다. 이 기사에서는 RootBeer 라이브러리를 우회하는 방법을 보여드리겠습니다. 이때 사용할 것은 샘플 RootBeer 애플리케이션입니다.</p>\n<p>시작하기 전에, 이미 Frida Server 및 ADB 사용에 익숙하다고 가정합니다.</p>\n<h1>RootBeer 라이브러리 우회 단계별 안내</h1>\n<h2>1. 환경 설정</h2>\n<p>아래 도구들이 설치되어 있는지 확인해주세요:</p>\n<ul>\n<li>ADB (Android Debug Bridge): 안드로이드 장치와 통신하는 데 사용됩니다.</li>\n<li>Frida Server: 개발자, 역공학자 및 보안 연구자를 위한 동적 인스트루먼테이션 툴킷입니다.</li>\n<li>에뮬레이터: 이 경우, ldplayer를 사용하고 있습니다.</li>\n</ul>\n<h2>2. 장치 준비</h2>\n<p>Frida 릴리스 페이지에서 기기 아키텍처에 맞는 적절한 Frida Server 이진 파일을 다운로드하세요.</p>\n<p>에뮬레이터에 연결하세요</p>\n<pre><code class=\"hljs language-js\">adb devices -l\n</code></pre>\n<pre><code class=\"hljs language-js\">adb root\n</code></pre>\n<p>ADB를 사용하여 바이너리를 장치로 푸시합니다:</p>\n<pre><code class=\"hljs language-js\">adb push frida-server-<span class=\"hljs-number\">16.0</span><span class=\"hljs-number\">.10</span>-android-x86_64 /data/local/tmp\n</code></pre>\n<p>파일에 대한 권한을 주십시오.</p>\n<pre><code class=\"hljs language-js\">adb shell\ncd /data/local/tmp\nchmod +x frida-server-<span class=\"hljs-number\">16.0</span><span class=\"hljs-number\">.10</span>-android-x86_64\n</code></pre>\n<p><img src=\"/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_3.png\" alt=\"이미지\"></p>\n<p>프리다 서버를 시작하세요.</p>\n<pre><code class=\"hljs language-js\">./frida-server-<span class=\"hljs-number\">16.0</span><span class=\"hljs-number\">.10</span>-android-x86_64 -D\n</code></pre>\n<p><img src=\"/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_4.png\" alt=\"Root Detection Bypass\"></p>\n<h2>3. 루트 우회</h2>\n<p>여기서는 GitHub에서 이미 사용 가능한 exploit 파일을 사용하여 가장 빠른 방법을 사용할 것입니다. Pich4ya의 exploit을 사용하고 있으며, 해당 사이트에서 다운로드할 수 있습니다. 그에게 큰 박수를 보내요👏👏👏👏</p>\n<p>이미지 태그를 Markdown 형식으로 변경하세요.</p>\n<p><img src=\"/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_5.png\" alt=\"이미지\"></p>\n<p>파일을 다운로드한 후 저장한 폴더로 이동하여 명령 프롬프트를 엽니다.</p>\n<p>애플리케이션 패키지 이름을 찾습니다.</p>\n<pre><code class=\"hljs language-js\">frida-ps -<span class=\"hljs-title class_\">Uai</span>\n</code></pre>\n<p>Rootbeer 샘플 애플리케이션을 사용 중이기 때문에 패키지 이름은 com.scottyab.rootbeer.sample 입니다.</p>\n<p>그 다음에 다음 명령어를 실행하세요</p>\n<pre><code class=\"hljs language-js\">frida -l root.<span class=\"hljs-property\">js</span> -U -f com.<span class=\"hljs-property\">example</span>.<span class=\"hljs-property\">app</span> --pause\n</code></pre>\n<p>엔터를 누른 후 다시 타이핑하세요</p>\n<pre><code class=\"hljs language-js\">%이력서\n</code></pre>\n<p><img src=\"/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_7.png\" alt=\"이미지\"></p>\n<p>그리고 Voilaaaa 당신의 apk가 이미 우회됐어야 합니다</p>\n<p>&#x3C;표>를 마크다운 형식으로 변경해보세요.</p>\n<p>그리고 와! APK가 바이패스되어야 합니다.</p>\n<p><img src=\"/assets/img/2024-06-22-RootBeerRootDetectionBypassirsyadsec_8.png\" alt=\"이미지\"></p>\n<p>이렇게 도움이 되는 기사들을 더 보시고 싶으세요? 귀하의 지원이 저에게 가치 있는 콘텐츠를 만들 수 있게 합니다. 더 많은 무료 프롬프트를 만들기 위해 커피 한 잔 사주시겠어요? 귀하의 기부에 감사드립니다! ❤️❤️❤️</p>\n</body>\n</html>\n"},"__N_SSG":true}
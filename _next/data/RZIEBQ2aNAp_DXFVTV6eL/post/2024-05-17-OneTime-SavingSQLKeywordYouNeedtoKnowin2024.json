{"pageProps":{"post":{"title":"2024년에 알아야 할 시간을 절약하는 SQL 키워드 하나","description":"","date":"2024-05-17 19:11","slug":"2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024","content":"\n\n## SQL\n\n![Image 1](/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_0.png)\n\n![Image 2](/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_1.png)\n\n'GROUP BY... WITH ROLLUP'란 무엇인가요? — 예제와 함께 설명합니다!\n\n<div class=\"content-ad\"></div>\n\nSQL, 여러분들도 잘 아시다시피, 관계형 데이터베이스와 상호 작용하기 위해 사용하는 언어입니다. 필요한 데이터를 추출하고 변환하는 데 사용됩니다.\n\n데이터 변환에 관해서 얘기할 때, 데이터 집계는 가장 중요한 개념 중 하나입니다. 데이터 집계를 생각해 볼 때 GROUP BY를 사용하지 않을 수 없습니다.\n\n그러므로 GROUP BY는 중요한 것뿐만 아니라, 대규모 데이터 세트에서 의미 있는 것을 만들고 데이터로부터 가치 있는 통찰을 얻기 위해 필수적입니다.\n\n지난 번 글 중 하나에서 이미 GROUP BY를 쉽게 사용하고 얼마든지 숙달시킬 수 있는 방법을 설명했습니다.\n\n<div class=\"content-ad\"></div>\n\n읽어 주셨으면 좋겠어요!\n\n지금 이 글에서는 한 발자국 더 나아가서 GROUP BY에서 추가 키워드인 WITH ROLLUP을 사용하여 조금 더 시간을 절약하는 방법을 배울 거에요.\n\nWITH ROLLUP을 사용하면 하나의 쿼리로 집계 및 초계수준의 데이터 통찰력을 얻을 수 있어요.\n\n무슨 뜻인지 보여 드릴게요.\n\n<div class=\"content-ad\"></div>\n\n아래와 같이 간단한 9999 x 11 데이터셋이 있습니다.\n\n![Dataset](/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_2.png)\n\n이 데이터셋에서 각 제품 카테고리별로 각 판매 관리자가 각 달에 선적한 총 수량을 파악하고 싶다고 가정해 봅시다.\n\n이는 일반적인 GROUP BY와 집계 함수인 SUM을 사용한 전형적인 예시입니다.\n\n<div class=\"content-ad\"></div>\n\n```sql\nSELECT sales_manager\n        , product_category\n        , EXTRACT(MONTH FROM order_date) AS month_name\n        , SUM(quantity) AS total_quantity -- Get total number of products shipped\nFROM alldata.salesdata\nWHERE 1=1\nAND sales_manager IN (\"Pablo\", \"Sofia\")\nAND product_category IN (\"Healthcare\", \"Fashion\")\nGROUP BY sales_manager\n        , product_category\n        , month_name;\n```\n\n데이터셋이 크기 때문에 결과를 간단하게 유지하기 위해 'Healthcare' 및 'Fashion' 제품 카테고리 및 'Pablo' 및 'Sofia'를 판매 관리자로 선택했습니다.\n\n<img src=\"/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_3.png\" />\n\n그러나 이 출력을 받은 후 이 두 제품 카테고리에서 'Sofia'나 'Pablo'가 모든 달에 얼마나 많은 제품을 배송했는지 정확히 알고 싶어질 것입니다.```\n\n<div class=\"content-ad\"></div>\n\n한 가지 방법은 상기 결과로부터 total_quantity 열을 수동으로 합산하는 방법이 있습니다. 이 방법은 다소 지루할 수 있습니다.\n\n그렇지만, 만약 계산기를 사용하거나 수동으로 작업해야 한다면 SQL 데이터 변환의 의미가 무엇인가요?\n\n그래서 또 다른 방법으로는 SQL을 통해 sales_manager와 product_category만으로 행을 그룹화하는 또 다른 SQL 쿼리를 작성하는 것입니다.\n\n```sql\nSELECT sales_manager\n        , product_category\n        -- , EXTRACT(MONTH FROM order_date) AS month_name\n        , SUM(quantity) AS total_quantity -- 물품 출하량의 총 개수 가져오기\nFROM alldata.salesdata\nWHERE 1=1\nAND sales_manager IN (\"Pablo\", \"Sofia\")\nAND product_category IN (\"Healthcare\", \"Fashion\")\nGROUP BY sales_manager\n        , product_category;\n```\n\n<div class=\"content-ad\"></div>\n\n\n![OneTime-SavingSQLKeywordYouNeedtoKnowin2024](/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_4.png)\n\n여기에서 원하는 것을 얻을 수 있지만, 여전히 당신이나 동료들이 생각할 문제가 있습니다: '소피아'나 '파블로'가 총으로 몇 개의 제품을 배송했는지 정확히 알고 싶다면?\n\n그에 대답하기 위해, 계산기를 사용하거나 다음과 같은 다른 SQL 문을 작성할 수 있습니다:\n\n```js\nSELECT sales_manager\n        -- , product_category\n        -- , EXTRACT(MONTH FROM order_date) AS month_name\n        , SUM(quantity) AS total_quantity -- 전체 제품 수를 얻습니다\nFROM alldata.salesdata\nWHERE 1=1\nAND sales_manager IN (\"Pablo\", \"Sofia\")\nAND product_category IN (\"Healthcare\", \"Fashion\")\nGROUP BY sales_manager;\n```\n\n<div class=\"content-ad\"></div>\n\n```md\n![SQL Keyword](/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_5.png)\n\n많은 노력이 필요했죠, 맞죠?\n\n그렇죠! 이 키워드 — WITH ROLLUP으로 가능합니다. GROUP BY 절에 간단히 추가하세요.\n\n```js\nSELECT sales_manager\n        , product_category\n        , EXTRACT(MONTH FROM order_date) AS month_name\n        , SUM(quantity) AS total_quantity -- 운송된 제품의 총 수량 획득\nFROM alldata.salesdata\nWHERE 1=1\nAND sales_manager IN (\"Pablo\", \"Sofia\")\nAND product_category IN (\"Healthcare\", \"Fashion\")\nGROUP BY sales_manager\n        , product_category\n        , month_name WITH ROLLUP;\n``` \n\n\n<div class=\"content-ad\"></div>\n\n![image](/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_6.png)\n\n와~ 빠르네요!\n\n내 컴퓨터에서는 WITH ROLLUP이 없는 쿼리와 실행하는 데 걸리는 시간이 동일했어요.\n\n위 출력에서 빨간색으로 강조된 행은 2번 질문에 대한 답을 제공합니다: 이 두 제품 카테고리 전체 월에 ‘Sofia’ 또는 ‘Pablo’가 보낸 제품 수는 얼마나 될까요? 파란색으로 강조된 행은 3번 질문에 답하는 데 도움이 됩니다: ‘Sofia’ 또는 ‘Pablo’가 총 보낸 제품 수는 얼마일까요?\n\n<div class=\"content-ad\"></div>\n\n지난 행은 아직 물어보지 않았지만 답변하는 질문을 다루고 있어요: ‘Pablo’와 ‘Sofia’가 이 두 제품 카테고리에서 함께 몇 개의 제품을 발송했는지요?\n\n보시다시피, WITH ROLLUP은 더 높은 수준의 집계를 얻도록 도와줍니다. 이는 여러 쿼리를 작성할 때 시간을 절약할 뿐만 아니라 여러 수준의 집계에 기반한 질문에도 단일 쿼리로 답변할 수 있도록 도와줍니다.\n\nWITH ROLLUP은 데이터의 2가지 보기를 옆에 나란히 제공하는데, 한 가지는 데이터를 여러 카테고리로 집계하고 다른 하나는 전반적인 그림을 보여줍니다.\n\n이러한 종류의 집계는 특히 데이터를 이해하고 그 안에 있는 트렌드와 패턴을 식별하는 데 도움이 될 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n여기까지...\n\n이야기를 좋아해주셨으면 좋겠고 유용하게 느꼈으며 빠르게 끝내셨으면 좋겠어요.\n\nGROUP BY 절에 WITH ROLLUP을 추가하면 하나의 SQL 쿼리로 상세한 통찰과 큰 그림을 함께 얻을 수 있습니다. 이를 사용하여 데이터의 숨겨진 트렌드를 탐색하고 최종적으로 정보 기반 결정을 내릴 수 있습니다.\n\n유용하게 느껴진 부분 강조하고 생각에 대해 의견을 나눠주세요.\n\n<div class=\"content-ad\"></div>\n\n더 많은 전문가 팁과 노하우를 위해 팔로우해주세요. 이 글을 꼭 여러분의 네트워크와 공유해주세요!\n\n읽어주셔서 감사합니다.","ogImage":{"url":"/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_0.png"},"coverImage":"/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_0.png","tag":["Tech"],"readingTime":5},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h2>SQL</h2>\n<p><img src=\"/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_0.png\" alt=\"Image 1\"></p>\n<p><img src=\"/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_1.png\" alt=\"Image 2\"></p>\n<p>'GROUP BY... WITH ROLLUP'란 무엇인가요? — 예제와 함께 설명합니다!</p>\n<p>SQL, 여러분들도 잘 아시다시피, 관계형 데이터베이스와 상호 작용하기 위해 사용하는 언어입니다. 필요한 데이터를 추출하고 변환하는 데 사용됩니다.</p>\n<p>데이터 변환에 관해서 얘기할 때, 데이터 집계는 가장 중요한 개념 중 하나입니다. 데이터 집계를 생각해 볼 때 GROUP BY를 사용하지 않을 수 없습니다.</p>\n<p>그러므로 GROUP BY는 중요한 것뿐만 아니라, 대규모 데이터 세트에서 의미 있는 것을 만들고 데이터로부터 가치 있는 통찰을 얻기 위해 필수적입니다.</p>\n<p>지난 번 글 중 하나에서 이미 GROUP BY를 쉽게 사용하고 얼마든지 숙달시킬 수 있는 방법을 설명했습니다.</p>\n<p>읽어 주셨으면 좋겠어요!</p>\n<p>지금 이 글에서는 한 발자국 더 나아가서 GROUP BY에서 추가 키워드인 WITH ROLLUP을 사용하여 조금 더 시간을 절약하는 방법을 배울 거에요.</p>\n<p>WITH ROLLUP을 사용하면 하나의 쿼리로 집계 및 초계수준의 데이터 통찰력을 얻을 수 있어요.</p>\n<p>무슨 뜻인지 보여 드릴게요.</p>\n<p>아래와 같이 간단한 9999 x 11 데이터셋이 있습니다.</p>\n<p><img src=\"/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_2.png\" alt=\"Dataset\"></p>\n<p>이 데이터셋에서 각 제품 카테고리별로 각 판매 관리자가 각 달에 선적한 총 수량을 파악하고 싶다고 가정해 봅시다.</p>\n<p>이는 일반적인 GROUP BY와 집계 함수인 SUM을 사용한 전형적인 예시입니다.</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> sales_manager\n        , product_category\n        , <span class=\"hljs-built_in\">EXTRACT</span>(<span class=\"hljs-keyword\">MONTH</span> <span class=\"hljs-keyword\">FROM</span> order_date) <span class=\"hljs-keyword\">AS</span> month_name\n        , <span class=\"hljs-built_in\">SUM</span>(quantity) <span class=\"hljs-keyword\">AS</span> total_quantity <span class=\"hljs-comment\">-- Get total number of products shipped</span>\n<span class=\"hljs-keyword\">FROM</span> alldata.salesdata\n<span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-number\">1</span><span class=\"hljs-operator\">=</span><span class=\"hljs-number\">1</span>\n<span class=\"hljs-keyword\">AND</span> sales_manager <span class=\"hljs-keyword\">IN</span> (\"Pablo\", \"Sofia\")\n<span class=\"hljs-keyword\">AND</span> product_category <span class=\"hljs-keyword\">IN</span> (\"Healthcare\", \"Fashion\")\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> sales_manager\n        , product_category\n        , month_name;\n</code></pre>\n<p>데이터셋이 크기 때문에 결과를 간단하게 유지하기 위해 'Healthcare' 및 'Fashion' 제품 카테고리 및 'Pablo' 및 'Sofia'를 판매 관리자로 선택했습니다.</p>\n<p>그러나 이 출력을 받은 후 이 두 제품 카테고리에서 'Sofia'나 'Pablo'가 모든 달에 얼마나 많은 제품을 배송했는지 정확히 알고 싶어질 것입니다.```</p>\n<p>한 가지 방법은 상기 결과로부터 total_quantity 열을 수동으로 합산하는 방법이 있습니다. 이 방법은 다소 지루할 수 있습니다.</p>\n<p>그렇지만, 만약 계산기를 사용하거나 수동으로 작업해야 한다면 SQL 데이터 변환의 의미가 무엇인가요?</p>\n<p>그래서 또 다른 방법으로는 SQL을 통해 sales_manager와 product_category만으로 행을 그룹화하는 또 다른 SQL 쿼리를 작성하는 것입니다.</p>\n<pre><code class=\"hljs language-sql\"><span class=\"hljs-keyword\">SELECT</span> sales_manager\n        , product_category\n        <span class=\"hljs-comment\">-- , EXTRACT(MONTH FROM order_date) AS month_name</span>\n        , <span class=\"hljs-built_in\">SUM</span>(quantity) <span class=\"hljs-keyword\">AS</span> total_quantity <span class=\"hljs-comment\">-- 물품 출하량의 총 개수 가져오기</span>\n<span class=\"hljs-keyword\">FROM</span> alldata.salesdata\n<span class=\"hljs-keyword\">WHERE</span> <span class=\"hljs-number\">1</span><span class=\"hljs-operator\">=</span><span class=\"hljs-number\">1</span>\n<span class=\"hljs-keyword\">AND</span> sales_manager <span class=\"hljs-keyword\">IN</span> (\"Pablo\", \"Sofia\")\n<span class=\"hljs-keyword\">AND</span> product_category <span class=\"hljs-keyword\">IN</span> (\"Healthcare\", \"Fashion\")\n<span class=\"hljs-keyword\">GROUP</span> <span class=\"hljs-keyword\">BY</span> sales_manager\n        , product_category;\n</code></pre>\n<p><img src=\"/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_4.png\" alt=\"OneTime-SavingSQLKeywordYouNeedtoKnowin2024\"></p>\n<p>여기에서 원하는 것을 얻을 수 있지만, 여전히 당신이나 동료들이 생각할 문제가 있습니다: '소피아'나 '파블로'가 총으로 몇 개의 제품을 배송했는지 정확히 알고 싶다면?</p>\n<p>그에 대답하기 위해, 계산기를 사용하거나 다음과 같은 다른 SQL 문을 작성할 수 있습니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-variable constant_\">SELECT</span> sales_manager\n        -- , product_category\n        -- , <span class=\"hljs-title function_\">EXTRACT</span>(<span class=\"hljs-variable constant_\">MONTH</span> <span class=\"hljs-variable constant_\">FROM</span> order_date) <span class=\"hljs-variable constant_\">AS</span> month_name\n        , <span class=\"hljs-title function_\">SUM</span>(quantity) <span class=\"hljs-variable constant_\">AS</span> total_quantity -- 전체 제품 수를 얻습니다\n<span class=\"hljs-variable constant_\">FROM</span> alldata.<span class=\"hljs-property\">salesdata</span>\n<span class=\"hljs-variable constant_\">WHERE</span> <span class=\"hljs-number\">1</span>=<span class=\"hljs-number\">1</span>\n<span class=\"hljs-variable constant_\">AND</span> sales_manager <span class=\"hljs-variable constant_\">IN</span> (<span class=\"hljs-string\">\"Pablo\"</span>, <span class=\"hljs-string\">\"Sofia\"</span>)\n<span class=\"hljs-variable constant_\">AND</span> product_category <span class=\"hljs-variable constant_\">IN</span> (<span class=\"hljs-string\">\"Healthcare\"</span>, <span class=\"hljs-string\">\"Fashion\"</span>)\n<span class=\"hljs-variable constant_\">GROUP</span> <span class=\"hljs-variable constant_\">BY</span> sales_manager;\n</code></pre>\n<pre><code class=\"hljs language-md\">![<span class=\"hljs-string\">SQL Keyword</span>](<span class=\"hljs-link\">/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_5.png</span>)\n\n많은 노력이 필요했죠, 맞죠?\n\n그렇죠! 이 키워드 — WITH ROLLUP으로 가능합니다. GROUP BY 절에 간단히 추가하세요.\n\n<span class=\"hljs-code\">```js\nSELECT sales_manager\n        , product_category\n        , EXTRACT(MONTH FROM order_date) AS month_name\n        , SUM(quantity) AS total_quantity -- 운송된 제품의 총 수량 획득\nFROM alldata.salesdata\nWHERE 1=1\nAND sales_manager IN (\"Pablo\", \"Sofia\")\nAND product_category IN (\"Healthcare\", \"Fashion\")\nGROUP BY sales_manager\n        , product_category\n        , month_name WITH ROLLUP;\n</span></code></pre>\n<p><img src=\"/assets/img/2024-05-17-OneTime-SavingSQLKeywordYouNeedtoKnowin2024_6.png\" alt=\"image\"></p>\n<p>와~ 빠르네요!</p>\n<p>내 컴퓨터에서는 WITH ROLLUP이 없는 쿼리와 실행하는 데 걸리는 시간이 동일했어요.</p>\n<p>위 출력에서 빨간색으로 강조된 행은 2번 질문에 대한 답을 제공합니다: 이 두 제품 카테고리 전체 월에 ‘Sofia’ 또는 ‘Pablo’가 보낸 제품 수는 얼마나 될까요? 파란색으로 강조된 행은 3번 질문에 답하는 데 도움이 됩니다: ‘Sofia’ 또는 ‘Pablo’가 총 보낸 제품 수는 얼마일까요?</p>\n<p>지난 행은 아직 물어보지 않았지만 답변하는 질문을 다루고 있어요: ‘Pablo’와 ‘Sofia’가 이 두 제품 카테고리에서 함께 몇 개의 제품을 발송했는지요?</p>\n<p>보시다시피, WITH ROLLUP은 더 높은 수준의 집계를 얻도록 도와줍니다. 이는 여러 쿼리를 작성할 때 시간을 절약할 뿐만 아니라 여러 수준의 집계에 기반한 질문에도 단일 쿼리로 답변할 수 있도록 도와줍니다.</p>\n<p>WITH ROLLUP은 데이터의 2가지 보기를 옆에 나란히 제공하는데, 한 가지는 데이터를 여러 카테고리로 집계하고 다른 하나는 전반적인 그림을 보여줍니다.</p>\n<p>이러한 종류의 집계는 특히 데이터를 이해하고 그 안에 있는 트렌드와 패턴을 식별하는 데 도움이 될 수 있어요.</p>\n<p>여기까지...</p>\n<p>이야기를 좋아해주셨으면 좋겠고 유용하게 느꼈으며 빠르게 끝내셨으면 좋겠어요.</p>\n<p>GROUP BY 절에 WITH ROLLUP을 추가하면 하나의 SQL 쿼리로 상세한 통찰과 큰 그림을 함께 얻을 수 있습니다. 이를 사용하여 데이터의 숨겨진 트렌드를 탐색하고 최종적으로 정보 기반 결정을 내릴 수 있습니다.</p>\n<p>유용하게 느껴진 부분 강조하고 생각에 대해 의견을 나눠주세요.</p>\n<p>더 많은 전문가 팁과 노하우를 위해 팔로우해주세요. 이 글을 꼭 여러분의 네트워크와 공유해주세요!</p>\n<p>읽어주셔서 감사합니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}
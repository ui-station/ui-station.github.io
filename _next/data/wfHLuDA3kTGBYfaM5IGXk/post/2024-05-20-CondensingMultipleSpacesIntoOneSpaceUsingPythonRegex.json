{"pageProps":{"post":{"title":"Python 정규 표현식을 사용하여 여러 공백을 하나의 공백으로 압축하기","description":"","date":"2024-05-20 15:59","slug":"2024-05-20-CondensingMultipleSpacesIntoOneSpaceUsingPythonRegex","content":"\n![image](/assets/img/2024-05-20-CondensingMultipleSpacesIntoOneSpaceUsingPythonRegex_0.png)\n\n만약 여러 개의 공백 문자를 하나의 공백 문자로 변환해야 한다면, 이 기사가 여러분을 위한 것입니다.\n\n```js\nx = \"apple   orange  pear     pineapple\";\n```\n\n^ 이 문자열에서 단어 사이에 여러 개의 공백이 있습니다. 여러 개의 공백을 하나의 공백으로 압축해야 합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\noutput = \"apple orange pear pineapple\";\n```\n\n# 수동 방법\n\n```js\nx = 'apple   orange  pear     pineapple'\n\ndef condense(x):\n    words = x.split(' ')\n    words = [w for w in words if w]\n    return ' '.join(words)\n\nprint(condense(x))\n\n# apple orange pear pineapple\n```\n\n- .split()을 사용하면 `['apple', '', '', 'orange', '', 'pear', '', '', '', '', 'pineapple']` 와 같이 단어가 됩니다.\n- 리스트 내포는 모든 빈 문자열을 필터링하고 [`apple`, `orange`, `pear`, `pineapple`]를 얻습니다.\n- ` ` .join()은 이 4개 단어를 `apple orange pear pineapple`로 결합합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n하지만 이 방법은 다소 수동적입니다. 한 줄의 코드로 정규식을 사용하여 이 문제를 해결할 수 있다는 걸 아셨나요?\n\n# 정규식 방법\n\n```js\nx = 'apple   orange  pear     pineapple'\n\nimport re\nprint(re.sub(' +', ' ', x))\n\n# apple orange pear pineapple\n```\n\n- re.sub은 정규식 ` +`와 일치하는 모든 문자열을 ` `로 바꿉니다.\n- ` +`는 1개 이상의 공백을 포함하는 모든 문자열과 일치합니다.\n- 이는 연속으로 여러 개의 공백이 포함된 모든 경우에 일치합니다.\n- 각각의 경우가 한 개의 공백으로 대체됩니다.\n- 이게 전부입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 결론\n\n이 내용을 이해하기 쉽고 명확했기를 바랍니다.\n\n# 크리에이터로서 저를 지원하고 싶다면\n\n- 이 이야기에 대해 50번 박수를 치세요\n- 생각을 나누는 댓글을 남겨주세요\n- 이야기에서 가장 마음에 드는 부분을 강조해주세요\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n감사합니다! 이런 작은 행동들이 큰 도움이 되어요. 정말 감사드려요!\n\nYouTube: [https://www.youtube.com/@zlliu246](https://www.youtube.com/@zlliu246)\n\nLinkedIn: [https://www.linkedin.com/in/zlliu/](https://www.linkedin.com/in/zlliu/)\n\n나의 이북: [https://zlliu.co/ebooks](https://zlliu.co/ebooks)\n","ogImage":{"url":"/assets/img/2024-05-20-CondensingMultipleSpacesIntoOneSpaceUsingPythonRegex_0.png"},"coverImage":"/assets/img/2024-05-20-CondensingMultipleSpacesIntoOneSpaceUsingPythonRegex_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-05-20-CondensingMultipleSpacesIntoOneSpaceUsingPythonRegex_0.png\" alt=\"image\"></p>\n<p>만약 여러 개의 공백 문자를 하나의 공백 문자로 변환해야 한다면, 이 기사가 여러분을 위한 것입니다.</p>\n<pre><code class=\"hljs language-js\">x = <span class=\"hljs-string\">\"apple   orange  pear     pineapple\"</span>;\n</code></pre>\n<p>^ 이 문자열에서 단어 사이에 여러 개의 공백이 있습니다. 여러 개의 공백을 하나의 공백으로 압축해야 합니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\">output = <span class=\"hljs-string\">\"apple orange pear pineapple\"</span>;\n</code></pre>\n<h1>수동 방법</h1>\n<pre><code class=\"hljs language-js\">x = <span class=\"hljs-string\">'apple   orange  pear     pineapple'</span>\n\ndef <span class=\"hljs-title function_\">condense</span>(x):\n    words = x.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">' '</span>)\n    words = [w <span class=\"hljs-keyword\">for</span> w <span class=\"hljs-keyword\">in</span> words <span class=\"hljs-keyword\">if</span> w]\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">' '</span>.<span class=\"hljs-title function_\">join</span>(words)\n\n<span class=\"hljs-title function_\">print</span>(<span class=\"hljs-title function_\">condense</span>(x))\n\n# apple orange pear pineapple\n</code></pre>\n<ul>\n<li>.split()을 사용하면 <code>['apple', '', '', 'orange', '', 'pear', '', '', '', '', 'pineapple']</code> 와 같이 단어가 됩니다.</li>\n<li>리스트 내포는 모든 빈 문자열을 필터링하고 [<code>apple</code>, <code>orange</code>, <code>pear</code>, <code>pineapple</code>]를 얻습니다.</li>\n<li><code> </code> .join()은 이 4개 단어를 <code>apple orange pear pineapple</code>로 결합합니다.</li>\n</ul>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>하지만 이 방법은 다소 수동적입니다. 한 줄의 코드로 정규식을 사용하여 이 문제를 해결할 수 있다는 걸 아셨나요?</p>\n<h1>정규식 방법</h1>\n<pre><code class=\"hljs language-js\">x = <span class=\"hljs-string\">'apple   orange  pear     pineapple'</span>\n\n<span class=\"hljs-keyword\">import</span> re\n<span class=\"hljs-title function_\">print</span>(re.<span class=\"hljs-title function_\">sub</span>(<span class=\"hljs-string\">' +'</span>, <span class=\"hljs-string\">' '</span>, x))\n\n# apple orange pear pineapple\n</code></pre>\n<ul>\n<li>re.sub은 정규식 <code> +</code>와 일치하는 모든 문자열을 <code> </code>로 바꿉니다.</li>\n<li><code> +</code>는 1개 이상의 공백을 포함하는 모든 문자열과 일치합니다.</li>\n<li>이는 연속으로 여러 개의 공백이 포함된 모든 경우에 일치합니다.</li>\n<li>각각의 경우가 한 개의 공백으로 대체됩니다.</li>\n<li>이게 전부입니다.</li>\n</ul>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>결론</h1>\n<p>이 내용을 이해하기 쉽고 명확했기를 바랍니다.</p>\n<h1>크리에이터로서 저를 지원하고 싶다면</h1>\n<ul>\n<li>이 이야기에 대해 50번 박수를 치세요</li>\n<li>생각을 나누는 댓글을 남겨주세요</li>\n<li>이야기에서 가장 마음에 드는 부분을 강조해주세요</li>\n</ul>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>감사합니다! 이런 작은 행동들이 큰 도움이 되어요. 정말 감사드려요!</p>\n<p>YouTube: <a href=\"https://www.youtube.com/@zlliu246\" rel=\"nofollow\" target=\"_blank\">https://www.youtube.com/@zlliu246</a></p>\n<p>LinkedIn: <a href=\"https://www.linkedin.com/in/zlliu/\" rel=\"nofollow\" target=\"_blank\">https://www.linkedin.com/in/zlliu/</a></p>\n<p>나의 이북: <a href=\"https://zlliu.co/ebooks\" rel=\"nofollow\" target=\"_blank\">https://zlliu.co/ebooks</a></p>\n</body>\n</html>\n"},"__N_SSG":true}
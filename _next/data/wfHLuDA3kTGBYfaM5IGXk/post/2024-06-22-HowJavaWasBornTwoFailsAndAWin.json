{"pageProps":{"post":{"title":" Java 탄생 이야기  실패한 두 가지 시도와 성공까지의 여정","description":"","date":"2024-06-22 22:12","slug":"2024-06-22-HowJavaWasBornTwoFailsAndAWin","content":"\n![2024-06-22-HowJavaWasBornTwoFailsAndAWin_0.png](/assets/img/2024-06-22-HowJavaWasBornTwoFailsAndAWin_0.png)\n\n# 자바 프로그래밍 언어의 역사는 모든 측면에서 놀라울 정도입니다. NFT와 마찬가지로 도박할 만큼 신뢰하기 어려운 언어가 실제로 많은 사람들이 많은 해 동안 믿었던 매우 타당한 이유로 성공했습니다.\n\n# 연구 프로젝트\n\n제임스 고슬링은 교수님이 연구소의 DEC VAX 컴퓨터에서 Pascal 앱을 실행하길 원했던, 아마도 Carnegie Mellon 대학교에서 공부하고 있을 때가 가장 가능성이 높습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n해당 작업을 수행하기 위해 그는 그것을 수행할 수 있는 가상 머신을 작성했습니다. 이 아이디어는 기본 시스템을 시뮬레이션하여 Pascal 앱이 적절한 머신에서 실행 중인 것으로 생각하게 한 다음 실제로는 또 다른 시스템에 의해 시뮬레이션된다는 것이었습니다.\n\n고슬링이 깨달은 것은 통합된 가상 머신이 있다면 앱이 해당 가상 머신을 구현하는 모든 시스템에서 실행할 수 있을 것이라는 것이기도 했습니다.\n\n몇 년 후, 이러한 경험들이 Java가 무엇으로 발전하는 데 영향을 끼쳤습니다.\n\n# Java & Interactive TV Fail (I)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nJava는 1991년 6월 (또는 출처에 따라 1994년)에 제임스 고슬링, 마이크 셰리던, 패트릭 나이튼에 의해 고안되었습니다.\n\n제임스 고슬링은 당시 Sun Microsystems에서 일하고 있었습니다.\n\n초기에는 Java가 인터랙티브 TV용으로 설계되었습니다. 이 아이디어는 실패했지만, 1998년에는 흥미로운 것으로 여겨졌습니다. 인터랙티브 TV 아이디어는 처음부터 성공 전망이 없었습니다:\n\nJava 창조자들은 오늘날에 우리가 보관 시스템 지원이라고 부르는 약속된 애플리케이션을 찾는 데 어려움을 겪었습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nTVs에 대한 각도 조정이 실패하고 Java가 함께 실패할 수도 있습니다.\n\n회전이 필요했고 Sun Microsystems가 이미 무언가를 진행 중이었습니다.\n\n## Java & Browser Fail (II)\n\n여러 년 동안, Sun Microsystems는 Mosaic을 기반으로 한 HotJava라는 웹 브라우저를 출시했습니다. 이 브라우저는 Java로 작성되어 Java 애플릿을 처음으로 지원했습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n그 때, 웹은 아주 어렸다는 걸 기억해야 했어요. 상호작용이 최대치인 웹사이트는 스크롤바와 텍스트 뒤에 정적인 배경만 있는 것이었죠.\n\n자바는 웹에 많은 장점을 제공했지만, HotJava는 제품으로 실패했지만 다른 브라우저 업체들이 자바를 지원하도록 이끈 요인이 되었어요.\n\n그때, 일이 와장창 되었어요.\n\n자바의 주요 단점은 속도가 굉장히 느리다는 것이었어요. 상호 운용성의 비용은 자바 애플릿이 로딩될 때 말 그대로 커피를 타면서 쉴 수 있는 정도였어요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n하지만 이는 모어의 법칙이 적용되어 Java가 웹 애플리케이션의 표준이 될 것이라고 생각된다는 말이죠, 그렇죠?\n\n하지만 완전히 맞지는 않습니다. 마이크로소프트는 ActiveX를 만들었는데, 이것은 실패의 좋은 예입니다. HTML, JavaScript, CSS는 기능이 계속 증가하면서 더 많은 일을 할 수 있게 되었죠.\n\nJava의 주요 경쟁 상대는 Flash로 나타났습니다. 컴퓨터 그래픽 분야에서 시작된 브라우저 플러그인으로, 특히 애니메이션에 중점을 둔 것이 특징입니다.\n\nFlash는 웹을 강타하여 수 년간 애니메이션 웹사이트와 상당히 복잡한 게임을 구동했는데, Adobe가 이를 폐기할 때까지 계속되었습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n하지만 그 당시, 수 년 동안 Java 애플릿은 저주받은 것처럼 보였어요. 플래시, JavaScript, ActiveX가 그 공간을 차지했죠.\n\n일부 상업용 Java 웹 프로젝트들은 Java가 안정성과 안전성을 제공하는 것으로 입증되었지만 다시 한 번 Java가 죽을 것처럼 보였어요.\n\n# 2024년 Java — 결국 두 번째로 인기 있는 언어. 왜일까요?\n\n프로그래밍 세계에 익숙하지 않은 대부분의 사람들은 브라우저 에피소드로부터 Java를 알게 되었고 Java가 실제로 죽은 줄 알고 있을 겁니다. 하지만 그것은 사실과 거리가 멀어요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n자바는 실제로 2022년(그리고 분명히 2024년에도) 두 번째로 인기 있는 프로그래밍 언어이며, 사람들은 그 없이 엔지니어링을 상상할 수 없습니다.\n\n그렇다면 이건 어떻게 가능한 걸까요?\n\n자바는 대화식 TV와 웹에서는 실패했지만, 항상 범용 프로그래밍 언어로 사용할 수 있었습니다. 이것은 자바로 무엇이든 빌드할 수 있는 가능성을 제공했다는 것을 의미합니다. TV와 웹에 국한되지 않았다는 것이죠.\n\n오히려 TV와 웹은 자바 역사에서의 행운의 일부였습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이런 실패들이 있었지만, Java에 대한 인기가 올라가게 했습니다. Java는 항상 현대적인 트렌드의 선두에 있다고 광고되었는데, 이는 사람들이 서로 작업을 할 수 있고 잘 설계된 의미론이 다른 것에도 적용될 수 있다는 것을 알아차릴만큼 충분했던 것 같아요.\n\n결국 속도 문제는 빠른 기계의 도입으로 해결되었고, Java도 점점 빨라졌어요. 종종, Java를 로딩하는 초기 시간은 그리 중요하지 않습니다.\n\n다음은 몇 가지 흥미로운 하이라이트입니다:\n\n- 게임 산업: Minecraft는 Java로 작성되었습니다\n- 과학: Mastero Mars Rover 컨트롤러는 Java로 작성되었습니다\n- 클라우드 컴퓨팅: Hadoop은 Java로 작성되었습니다\n- 개발자 경험: IntelliJ IDEA는 Java로 작성되었습니다\n- 백엔드 개발: Spring, Hibernate는 Java로 작성되었습니다\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n지금은 Java가 사용되는 곳의 작은 부분일 뿐이에요.\n\nJava의 역사는 언어가 어떤 응용프로그램에서 실패하더라도, 실제 문제(상호 운용성)를 해결한다면 그에 맞는 곳에서 채택될 것이라는 것을 증명했어요.\n\n# 💎 보너스\n\nJava 시리즈의 이전 에피소드도 확인해보세요:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![Java Card Game](/assets/img/2024-06-22-HowJavaWasBornTwoFailsAndAWin_1.png)\n\n우와. 정말 Java에 관심이 많나봐요! 'Summon The JSON: Java' 라는 Java 카드 게임을 디자인했어요. 우연히도! 지금 주문하실 수 있어요!\n\nJava를 좋아하시나요? 소셜 미디어에서 박수를 보내고, 구독하고, 좋아요를 눌러주시고 공유해주세요!\n\nTom Smykowski를 따르는 10,000명의 개발자 중 하나가 되어보세요! 매달 $5를 내면 모든 Medium 기사에 액세스할 수 있고, Tom도 일부 수입을 얻게 되어 Java에 대해 더 많이 쓸 거에요! 지금 멤버십 가입하세요!\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n또한, 모든 Java 애호가들과 창조자들을 환영하는 새로운 Java 프로그래밍 길드 그룹을 링크드인에서 가입해보세요!\n","ogImage":{"url":"/assets/img/2024-06-22-HowJavaWasBornTwoFailsAndAWin_0.png"},"coverImage":"/assets/img/2024-06-22-HowJavaWasBornTwoFailsAndAWin_0.png","tag":["Tech"],"readingTime":7},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-22-HowJavaWasBornTwoFailsAndAWin_0.png\" alt=\"2024-06-22-HowJavaWasBornTwoFailsAndAWin_0.png\"></p>\n<h1>자바 프로그래밍 언어의 역사는 모든 측면에서 놀라울 정도입니다. NFT와 마찬가지로 도박할 만큼 신뢰하기 어려운 언어가 실제로 많은 사람들이 많은 해 동안 믿었던 매우 타당한 이유로 성공했습니다.</h1>\n<h1>연구 프로젝트</h1>\n<p>제임스 고슬링은 교수님이 연구소의 DEC VAX 컴퓨터에서 Pascal 앱을 실행하길 원했던, 아마도 Carnegie Mellon 대학교에서 공부하고 있을 때가 가장 가능성이 높습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>해당 작업을 수행하기 위해 그는 그것을 수행할 수 있는 가상 머신을 작성했습니다. 이 아이디어는 기본 시스템을 시뮬레이션하여 Pascal 앱이 적절한 머신에서 실행 중인 것으로 생각하게 한 다음 실제로는 또 다른 시스템에 의해 시뮬레이션된다는 것이었습니다.</p>\n<p>고슬링이 깨달은 것은 통합된 가상 머신이 있다면 앱이 해당 가상 머신을 구현하는 모든 시스템에서 실행할 수 있을 것이라는 것이기도 했습니다.</p>\n<p>몇 년 후, 이러한 경험들이 Java가 무엇으로 발전하는 데 영향을 끼쳤습니다.</p>\n<h1>Java &#x26; Interactive TV Fail (I)</h1>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>Java는 1991년 6월 (또는 출처에 따라 1994년)에 제임스 고슬링, 마이크 셰리던, 패트릭 나이튼에 의해 고안되었습니다.</p>\n<p>제임스 고슬링은 당시 Sun Microsystems에서 일하고 있었습니다.</p>\n<p>초기에는 Java가 인터랙티브 TV용으로 설계되었습니다. 이 아이디어는 실패했지만, 1998년에는 흥미로운 것으로 여겨졌습니다. 인터랙티브 TV 아이디어는 처음부터 성공 전망이 없었습니다:</p>\n<p>Java 창조자들은 오늘날에 우리가 보관 시스템 지원이라고 부르는 약속된 애플리케이션을 찾는 데 어려움을 겪었습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>TVs에 대한 각도 조정이 실패하고 Java가 함께 실패할 수도 있습니다.</p>\n<p>회전이 필요했고 Sun Microsystems가 이미 무언가를 진행 중이었습니다.</p>\n<h2>Java &#x26; Browser Fail (II)</h2>\n<p>여러 년 동안, Sun Microsystems는 Mosaic을 기반으로 한 HotJava라는 웹 브라우저를 출시했습니다. 이 브라우저는 Java로 작성되어 Java 애플릿을 처음으로 지원했습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>그 때, 웹은 아주 어렸다는 걸 기억해야 했어요. 상호작용이 최대치인 웹사이트는 스크롤바와 텍스트 뒤에 정적인 배경만 있는 것이었죠.</p>\n<p>자바는 웹에 많은 장점을 제공했지만, HotJava는 제품으로 실패했지만 다른 브라우저 업체들이 자바를 지원하도록 이끈 요인이 되었어요.</p>\n<p>그때, 일이 와장창 되었어요.</p>\n<p>자바의 주요 단점은 속도가 굉장히 느리다는 것이었어요. 상호 운용성의 비용은 자바 애플릿이 로딩될 때 말 그대로 커피를 타면서 쉴 수 있는 정도였어요.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>하지만 이는 모어의 법칙이 적용되어 Java가 웹 애플리케이션의 표준이 될 것이라고 생각된다는 말이죠, 그렇죠?</p>\n<p>하지만 완전히 맞지는 않습니다. 마이크로소프트는 ActiveX를 만들었는데, 이것은 실패의 좋은 예입니다. HTML, JavaScript, CSS는 기능이 계속 증가하면서 더 많은 일을 할 수 있게 되었죠.</p>\n<p>Java의 주요 경쟁 상대는 Flash로 나타났습니다. 컴퓨터 그래픽 분야에서 시작된 브라우저 플러그인으로, 특히 애니메이션에 중점을 둔 것이 특징입니다.</p>\n<p>Flash는 웹을 강타하여 수 년간 애니메이션 웹사이트와 상당히 복잡한 게임을 구동했는데, Adobe가 이를 폐기할 때까지 계속되었습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>하지만 그 당시, 수 년 동안 Java 애플릿은 저주받은 것처럼 보였어요. 플래시, JavaScript, ActiveX가 그 공간을 차지했죠.</p>\n<p>일부 상업용 Java 웹 프로젝트들은 Java가 안정성과 안전성을 제공하는 것으로 입증되었지만 다시 한 번 Java가 죽을 것처럼 보였어요.</p>\n<h1>2024년 Java — 결국 두 번째로 인기 있는 언어. 왜일까요?</h1>\n<p>프로그래밍 세계에 익숙하지 않은 대부분의 사람들은 브라우저 에피소드로부터 Java를 알게 되었고 Java가 실제로 죽은 줄 알고 있을 겁니다. 하지만 그것은 사실과 거리가 멀어요.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>자바는 실제로 2022년(그리고 분명히 2024년에도) 두 번째로 인기 있는 프로그래밍 언어이며, 사람들은 그 없이 엔지니어링을 상상할 수 없습니다.</p>\n<p>그렇다면 이건 어떻게 가능한 걸까요?</p>\n<p>자바는 대화식 TV와 웹에서는 실패했지만, 항상 범용 프로그래밍 언어로 사용할 수 있었습니다. 이것은 자바로 무엇이든 빌드할 수 있는 가능성을 제공했다는 것을 의미합니다. TV와 웹에 국한되지 않았다는 것이죠.</p>\n<p>오히려 TV와 웹은 자바 역사에서의 행운의 일부였습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>이런 실패들이 있었지만, Java에 대한 인기가 올라가게 했습니다. Java는 항상 현대적인 트렌드의 선두에 있다고 광고되었는데, 이는 사람들이 서로 작업을 할 수 있고 잘 설계된 의미론이 다른 것에도 적용될 수 있다는 것을 알아차릴만큼 충분했던 것 같아요.</p>\n<p>결국 속도 문제는 빠른 기계의 도입으로 해결되었고, Java도 점점 빨라졌어요. 종종, Java를 로딩하는 초기 시간은 그리 중요하지 않습니다.</p>\n<p>다음은 몇 가지 흥미로운 하이라이트입니다:</p>\n<ul>\n<li>게임 산업: Minecraft는 Java로 작성되었습니다</li>\n<li>과학: Mastero Mars Rover 컨트롤러는 Java로 작성되었습니다</li>\n<li>클라우드 컴퓨팅: Hadoop은 Java로 작성되었습니다</li>\n<li>개발자 경험: IntelliJ IDEA는 Java로 작성되었습니다</li>\n<li>백엔드 개발: Spring, Hibernate는 Java로 작성되었습니다</li>\n</ul>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>지금은 Java가 사용되는 곳의 작은 부분일 뿐이에요.</p>\n<p>Java의 역사는 언어가 어떤 응용프로그램에서 실패하더라도, 실제 문제(상호 운용성)를 해결한다면 그에 맞는 곳에서 채택될 것이라는 것을 증명했어요.</p>\n<h1>💎 보너스</h1>\n<p>Java 시리즈의 이전 에피소드도 확인해보세요:</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p><img src=\"/assets/img/2024-06-22-HowJavaWasBornTwoFailsAndAWin_1.png\" alt=\"Java Card Game\"></p>\n<p>우와. 정말 Java에 관심이 많나봐요! 'Summon The JSON: Java' 라는 Java 카드 게임을 디자인했어요. 우연히도! 지금 주문하실 수 있어요!</p>\n<p>Java를 좋아하시나요? 소셜 미디어에서 박수를 보내고, 구독하고, 좋아요를 눌러주시고 공유해주세요!</p>\n<p>Tom Smykowski를 따르는 10,000명의 개발자 중 하나가 되어보세요! 매달 $5를 내면 모든 Medium 기사에 액세스할 수 있고, Tom도 일부 수입을 얻게 되어 Java에 대해 더 많이 쓸 거에요! 지금 멤버십 가입하세요!</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>또한, 모든 Java 애호가들과 창조자들을 환영하는 새로운 Java 프로그래밍 길드 그룹을 링크드인에서 가입해보세요!</p>\n</body>\n</html>\n"},"__N_SSG":true}
{"pageProps":{"post":{"title":"ntscraper를 사용한 실시간 트윗 데이터 분석 방법","description":"","date":"2024-06-30 22:12","slug":"2024-06-30-ScrapingTweetsforReal-TimeDataAnalysisUsingntscraper","content":"\n\n![이미지](/assets/img/2024-06-30-ScrapingTweetsforReal-TimeDataAnalysisUsingntscraper_0.png)\n\n데이터 분석 분야는 계속 발전 중이에요. 실시간 데이터는 매우 중요하죠. 실시간 데이터의 가장 풍부한 출처 중 하나는 소셜 미디어인데, 특히 트위터(X.com)가 그 중요한 출처이죠. 트위터 데이터에 접근하려면 기존에는 복잡한 트위터 API를 통해 접근해야 했는데, 이는 종종 유료 구독과 복잡한 인증 키가 필요했어요. 그러나 새로운 Python 라이브러리인 ntscraper를 사용하면 유료 API나 키 없이도 트윗을 스크래핑할 수 있는데요. 이 블로그에서는 ntscraper를 사용하여 실시간 데이터셋을 만들어본 경험을 공유할게요.\n\n# ntscraper 소개\n\nntscraper는 공식 API가 필요 없이 트위터에서 트윗을 바로 스크래핑할 수 있도록 설계된 Python 라이브러리에요. 이를 통해 데이터 과학을 시작한 사람들에게도 매우 접근하기 쉽고 사용하기 쉽습니다.\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# ntscraper의 주요 기능:\n\n- API 키 불필요: API 요청 제한과 인증 처리로 인한 번거로움을 피하세요.\n- 실시간 데이터: 게시된 최신 트윗을 검색합니다.\n- CSV 변환: 수집된 데이터를 쉽게 CSV 형식으로 변환하여 분석할 수 있습니다.\n\n# ntscraper로 시작하기\n\n# 단계 1: 설치\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n먼저 ntscraper 라이브러리를 설치하세요. 이 작업은 pip를 사용하여 수행할 수 있습니다:\n\n```js\npip install ntscraper\n```\n\n# 단계 2: 트윗 스크레이핑\n\n다음은 인도 대통령(@rashtrapatibhvn)의 공식 트위터 계정에서 트윗을 스크레이핑하고 CSV 파일로 저장한 구체적인 코드입니다:\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```python\nfrom ntscraper import Nitter\n\n# 스크레이퍼 초기화\nscraper = Nitter()\n\n# 특정 사용자의 트윗 스크랩\ntweets_data = scraper.get_tweets(\"rashtrapatibhvn\", mode='user', number=10)\nprint(tweets_data)\n\n# 데이터 구조 검사\nprint(tweets_data.keys())\nprint(tweets_data['tweets'][0])\n\n# 프로필 정보 가져오기\nprofile_info = scraper.get_profile_info(username='elonmusk')\nprint(profile_info)\n\n# 트윗 데이터를 저장할 딕셔너리 생성\ndata = {\n    '링크': [],\n    '내용': [],\n    '사용자': [],\n    '좋아요': [],\n    '리트윗': [],\n    '댓글': []\n}\n\n# 트윗에서 데이터 추출\nfor tweet in tweets_data['tweets']:\n    data['링크'].append(tweet['link'])\n    data['내용'].append(tweet['text'])\n    data['사용자'].append(tweet['user']['name'])\n    data['좋아요'].append(tweet['stats']['likes'])\n    data['리트윗'].append(tweet['stats']['retweets'])\n    data['댓글'].append(tweet['stats']['comments'])\n\n# 데이터프레임 생성 후 CSV로 저장\nimport pandas as pd\ndf = pd.DataFrame(data)\ndf.to_csv('prez.csv', index=False)\nprint(\"프리즈.csv 파일에 트윗이 저장되었습니다.\")\n```\n\n# 단계 3: 데이터 분석\n\n데이터셋을 사용하여 선호하는 데이터 분석 도구인 판다스, 맷플롯립 또는 다른 도구를 활용하여 데이터를 분석할 수 있습니다.\n\n## 예시 분석: 감성 분석\n\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n다음은 TextBlob 라이브러리를 사용하여 수집된 트윗에 대한 감성 분석을 수행하는 간단한 예제입니다:\n\n```python\nimport pandas as pd\nfrom textblob import TextBlob\n\n# CSV 파일을 DataFrame으로 불러오기\ndf = pd.read_csv('prez.csv')\n\n# 감성 분석 수행\ndf['Sentiment'] = df['text'].apply(lambda tweet: TextBlob(tweet).sentiment.polarity)\n\n# 처음 몇 행 표시\nprint(df.head())\n\n# 감성 분석 결과 플롯하기\ndf['Sentiment'].plot(kind='hist', title='트윗 감성 분석 결과')\n```\n\n# 결론\n\nntscraper를 사용하면 실시간 데이터 분석을 위해 트윗을 수집하는 것이 이전보다 더 쉬워졌습니다. 이 도구는 Twitter 데이터에 대한 접근을 민주화시키며, 데이터 분석가와 데이터 과학자들이 API 복잡성을 다루는 대신 인사이트를 추출하는 데 집중할 수 있게 합니다. 트렌드 추적, 감성 분석 수행, 시장 조사 등을 하든지, ntscraper는 데이터 분석 도구상의 중요한 자산이 될 수 있습니다.\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n행복한 스크래핑하세요!","ogImage":{"url":"/assets/img/2024-06-30-ScrapingTweetsforReal-TimeDataAnalysisUsingntscraper_0.png"},"coverImage":"/assets/img/2024-06-30-ScrapingTweetsforReal-TimeDataAnalysisUsingntscraper_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-30-ScrapingTweetsforReal-TimeDataAnalysisUsingntscraper_0.png\" alt=\"이미지\"></p>\n<p>데이터 분석 분야는 계속 발전 중이에요. 실시간 데이터는 매우 중요하죠. 실시간 데이터의 가장 풍부한 출처 중 하나는 소셜 미디어인데, 특히 트위터(X.com)가 그 중요한 출처이죠. 트위터 데이터에 접근하려면 기존에는 복잡한 트위터 API를 통해 접근해야 했는데, 이는 종종 유료 구독과 복잡한 인증 키가 필요했어요. 그러나 새로운 Python 라이브러리인 ntscraper를 사용하면 유료 API나 키 없이도 트윗을 스크래핑할 수 있는데요. 이 블로그에서는 ntscraper를 사용하여 실시간 데이터셋을 만들어본 경험을 공유할게요.</p>\n<h1>ntscraper 소개</h1>\n<p>ntscraper는 공식 API가 필요 없이 트위터에서 트윗을 바로 스크래핑할 수 있도록 설계된 Python 라이브러리에요. 이를 통해 데이터 과학을 시작한 사람들에게도 매우 접근하기 쉽고 사용하기 쉽습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>ntscraper의 주요 기능:</h1>\n<ul>\n<li>API 키 불필요: API 요청 제한과 인증 처리로 인한 번거로움을 피하세요.</li>\n<li>실시간 데이터: 게시된 최신 트윗을 검색합니다.</li>\n<li>CSV 변환: 수집된 데이터를 쉽게 CSV 형식으로 변환하여 분석할 수 있습니다.</li>\n</ul>\n<h1>ntscraper로 시작하기</h1>\n<h1>단계 1: 설치</h1>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>먼저 ntscraper 라이브러리를 설치하세요. 이 작업은 pip를 사용하여 수행할 수 있습니다:</p>\n<pre><code class=\"hljs language-js\">pip install ntscraper\n</code></pre>\n<h1>단계 2: 트윗 스크레이핑</h1>\n<p>다음은 인도 대통령(@rashtrapatibhvn)의 공식 트위터 계정에서 트윗을 스크레이핑하고 CSV 파일로 저장한 구체적인 코드입니다:</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">from</span> ntscraper <span class=\"hljs-keyword\">import</span> Nitter\n\n<span class=\"hljs-comment\"># 스크레이퍼 초기화</span>\nscraper = Nitter()\n\n<span class=\"hljs-comment\"># 특정 사용자의 트윗 스크랩</span>\ntweets_data = scraper.get_tweets(<span class=\"hljs-string\">\"rashtrapatibhvn\"</span>, mode=<span class=\"hljs-string\">'user'</span>, number=<span class=\"hljs-number\">10</span>)\n<span class=\"hljs-built_in\">print</span>(tweets_data)\n\n<span class=\"hljs-comment\"># 데이터 구조 검사</span>\n<span class=\"hljs-built_in\">print</span>(tweets_data.keys())\n<span class=\"hljs-built_in\">print</span>(tweets_data[<span class=\"hljs-string\">'tweets'</span>][<span class=\"hljs-number\">0</span>])\n\n<span class=\"hljs-comment\"># 프로필 정보 가져오기</span>\nprofile_info = scraper.get_profile_info(username=<span class=\"hljs-string\">'elonmusk'</span>)\n<span class=\"hljs-built_in\">print</span>(profile_info)\n\n<span class=\"hljs-comment\"># 트윗 데이터를 저장할 딕셔너리 생성</span>\ndata = {\n    <span class=\"hljs-string\">'링크'</span>: [],\n    <span class=\"hljs-string\">'내용'</span>: [],\n    <span class=\"hljs-string\">'사용자'</span>: [],\n    <span class=\"hljs-string\">'좋아요'</span>: [],\n    <span class=\"hljs-string\">'리트윗'</span>: [],\n    <span class=\"hljs-string\">'댓글'</span>: []\n}\n\n<span class=\"hljs-comment\"># 트윗에서 데이터 추출</span>\n<span class=\"hljs-keyword\">for</span> tweet <span class=\"hljs-keyword\">in</span> tweets_data[<span class=\"hljs-string\">'tweets'</span>]:\n    data[<span class=\"hljs-string\">'링크'</span>].append(tweet[<span class=\"hljs-string\">'link'</span>])\n    data[<span class=\"hljs-string\">'내용'</span>].append(tweet[<span class=\"hljs-string\">'text'</span>])\n    data[<span class=\"hljs-string\">'사용자'</span>].append(tweet[<span class=\"hljs-string\">'user'</span>][<span class=\"hljs-string\">'name'</span>])\n    data[<span class=\"hljs-string\">'좋아요'</span>].append(tweet[<span class=\"hljs-string\">'stats'</span>][<span class=\"hljs-string\">'likes'</span>])\n    data[<span class=\"hljs-string\">'리트윗'</span>].append(tweet[<span class=\"hljs-string\">'stats'</span>][<span class=\"hljs-string\">'retweets'</span>])\n    data[<span class=\"hljs-string\">'댓글'</span>].append(tweet[<span class=\"hljs-string\">'stats'</span>][<span class=\"hljs-string\">'comments'</span>])\n\n<span class=\"hljs-comment\"># 데이터프레임 생성 후 CSV로 저장</span>\n<span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\ndf = pd.DataFrame(data)\ndf.to_csv(<span class=\"hljs-string\">'prez.csv'</span>, index=<span class=\"hljs-literal\">False</span>)\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"프리즈.csv 파일에 트윗이 저장되었습니다.\"</span>)\n</code></pre>\n<h1>단계 3: 데이터 분석</h1>\n<p>데이터셋을 사용하여 선호하는 데이터 분석 도구인 판다스, 맷플롯립 또는 다른 도구를 활용하여 데이터를 분석할 수 있습니다.</p>\n<h2>예시 분석: 감성 분석</h2>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>다음은 TextBlob 라이브러리를 사용하여 수집된 트윗에 대한 감성 분석을 수행하는 간단한 예제입니다:</p>\n<pre><code class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> pandas <span class=\"hljs-keyword\">as</span> pd\n<span class=\"hljs-keyword\">from</span> textblob <span class=\"hljs-keyword\">import</span> TextBlob\n\n<span class=\"hljs-comment\"># CSV 파일을 DataFrame으로 불러오기</span>\ndf = pd.read_csv(<span class=\"hljs-string\">'prez.csv'</span>)\n\n<span class=\"hljs-comment\"># 감성 분석 수행</span>\ndf[<span class=\"hljs-string\">'Sentiment'</span>] = df[<span class=\"hljs-string\">'text'</span>].apply(<span class=\"hljs-keyword\">lambda</span> tweet: TextBlob(tweet).sentiment.polarity)\n\n<span class=\"hljs-comment\"># 처음 몇 행 표시</span>\n<span class=\"hljs-built_in\">print</span>(df.head())\n\n<span class=\"hljs-comment\"># 감성 분석 결과 플롯하기</span>\ndf[<span class=\"hljs-string\">'Sentiment'</span>].plot(kind=<span class=\"hljs-string\">'hist'</span>, title=<span class=\"hljs-string\">'트윗 감성 분석 결과'</span>)\n</code></pre>\n<h1>결론</h1>\n<p>ntscraper를 사용하면 실시간 데이터 분석을 위해 트윗을 수집하는 것이 이전보다 더 쉬워졌습니다. 이 도구는 Twitter 데이터에 대한 접근을 민주화시키며, 데이터 분석가와 데이터 과학자들이 API 복잡성을 다루는 대신 인사이트를 추출하는 데 집중할 수 있게 합니다. 트렌드 추적, 감성 분석 수행, 시장 조사 등을 하든지, ntscraper는 데이터 분석 도구상의 중요한 자산이 될 수 있습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>행복한 스크래핑하세요!</p>\n</body>\n</html>\n"},"__N_SSG":true}
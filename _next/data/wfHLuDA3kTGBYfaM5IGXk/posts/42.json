{"pageProps":{"posts":[{"title":"아무도 사지 않은 큰 마법 모험 게임","description":"","date":"2024-06-19 11:48","slug":"2024-06-19-TheBigMagicalAdventureGameNoOneBought","content":"\n![이미지](/assets/img/2024-06-19-TheBigMagicalAdventureGameNoOneBought_0.png)\n\n저는 PC에서 고전적인 1인칭 액션 게임을 하는 것으로 자랐어요. 친구들과 함께 Wolfenstein 3D 같은 게임을 위한 쉐어웨어 디스크를 거래하고, 게임 기술이 진정으로 몰입적이고 풍성한 플레이 공간을 그리기 시작한 첫 걸음을 밟는 것을 감탄했어요.\n\n그 시대의 게임 중에는 'Heretic'과 'Hexen'이 있었어요. 이를 간단하게 설명하자면 \"마법 주문이 있는 Doom 같은 게임!\"이라고 할 수 있겠죠. 특히 Hexen은 아직도 경험할 가치가 있는데, 상호 연결된 광활한 레벨 디자인으로 이제는 오픈 월드 모험의 초기 모습을 엿볼 수 있기 때문이에요.\n\n작년에 이전의 고전적인 마법이 가미된 액션 어드벤처 게임들에 대한 환상적인 현대식 재해석과 똑같이 플레이되는 게임이 출시되었는데, 아무도 구입하지 않았어요. 이는 일반적인 온라인 게임 기사의 과장이 아니에요. 'Immortals of Aveum'이라는 제목인데, 이 게임은 게시자 EA의 기대치를 크게 못 가르쳤기 때문에 이를 개발한 스튜디오는 완전히 사라졌어요. 게이머들 중 오랫동안 게임을 따라오고 있다면 EA라는 이름을 보고 고양이처럼 쥐를 쳐다볼 수도 있겠지만, 이는 그들의 스튜디오에서 내부 제작한 것이 아니었어요. 오히려 그들이 출판 및 마케팅에 참여한 중소 규모의 팀이 만든 게임이었어요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nEA는 이 게임이 잘 될 것이라고 믿었어야 했다고 볼 수 있어요. 일단 빠르게 한 눈에 살펴보면 같은 생각이 들 수 있어요. 이 게임은 소니가 PlayStation에서 다양한 인기 프랜차이즈를 만들기 위해 끈질긴 노력을 기울인 “이야기 중심의 싱글 플레이 액션” 공식을 따라갑니다. 멋진 비쥬얼을 가지고 있고, Unreal Engine 5에서 운영되는 최초의 출시 게임 중 하나에요. 이 게임의 판타지 설정은 전통적인 군사 설정보다 넓은 관객층에게 더 쉽고 매력적일 수 있도록 만들어졌어요.\n\n그런데, 《Immortals of Aveum》은 1분부터 완전히 실패로 떨어졌습니다. 이 게임의 문제는 제목부터 시작된다고 생각해요. 최악의 경우, 그것은 아무런 의미가 없는 혼란스러운 용어의 무리가 되고, 최선의 경우에도 유비소프트의 《Immortals: Fenyx Rising》의 속편처럼 보여요. 이 게임의 제목은 게임 자체가 어둡고 불분명한 이야기 내용으로 넘쳐나는 것을 나타내는 단서라고 볼 수 있어요. 게임을 로딩할 때 처음 보는 화면은 이 게임 세계에만 해당되는 새로운 말들로 가득 찬 거대한 텍스트 벽이에요. 그리고 그 이후로도 상황은 나아지지 않아요. 모든 것을 완전히 이해하는 데 약 1시간이 걸리지만, 이 게임의 귀여운 문구의 절반도 의미가 담긴 채 기억에 남는다면 당신은 운이 좋은 편이에요.\n\n이제까지 쌓인 용어와 세계 설정의 악몽 속에 있는 이야기는 특별히 흥미로운 것도 새로운 것도 아니에요. Aveum은 악한 제국에 의해 파괴된 청년을 따르는데, 그러나 그는 사실 특별한 존재이며, 다른 특수 마법사들에 의해 영입되어 일행 중 한 명이 되어 세상을 구하기 위해 노력하는 이야기를 따라갑니다. 그러나 어떤 상황들은 반드시 그러한 것이 아닌 것이 팩트인 것이 연계됩니다!\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n네, 지금까지 지난 40년 동안 나온 모든 저급한 과학 소설이나 판타지 이야기를 거의 다 설명한 것 같네요. Immortals는 캐릭터 집합으로 일부 포인트를 되찾으려고 노력하고 있습니다. 칭찬할 만한 점은 많은 캐릭터들이 잘 연기되었다는 것입니다. 그러나 현대 판타지 제목에서 고정 캐릭터를 선택하고, 성별 맞춤화나 의미 있는 코스튬 옵션 없이 가는 것은 좀 이상한 선택이었다고 생각해요. 판타지 게이머들은 이야기의 세계에 몰입하고 싶어하는 경향이 있거나 최소한 그 역할을 개인적으로 수행하는 듯한 느낌을 받고 싶어합니다.\n\n![이미지](/assets/img/2024-06-19-TheBigMagicalAdventureGameNoOneBought_2.png)\n\nAveum의 주인공 \"Jak\" (진짜로)은 다른 게임의 영웅들만큼 매력이 없어요. 만나자마자 이미 세계에 몰입한 것 같아서 연결하기 어려운 점이 있습니다. 그가 이미 머리속에 가득 담고 있는 것들이 당신을 약간 혼란스럽게 만들 수 있어요.\n\n시작이 절망적인 악몽이라도 지나면, 게임이 정말 멋진 것이 됩니다. 현재 플레이할 수 있는 가장 날카로우면서 재미있는 1인칭 게임 중 하나에요. Doom Eternal을 좋아하고 마법사로서 그것이 어떻게 될지 보고 싶다면, 이 게임은 그 아이디어를 훌륭히 구현한 것 같습니다. 여러 공격 주문을 결합할 수 있을 때 놀랄 만한 공격 주문 다양성에 금세 압도되고, 세계를 탐험할 충분한 공간이 있어서 그것이 사실 상적인 적의 복도 순서로 느껴지지 않는 것 같아요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n현대 게임 산업의 가장 나쁜 관행 중 하나를 촉진하는 것을 싫어하지만, 이것을 이야기해 보겠습니다: 이미 있는 IP와 연결되어야 했다고 생각합니다. 필 스펜서는 한 번 무대에서 Hexen 티셔츠를 입고 간 회의에서 유명해지기도 했습니다. 약간만 조정하면 새로운 Hexen 게임이었을 수도 있었습니다. 그런 게임 세계는 더 쉽게 이해할 수 있지만, 동시에 레트로한 신뢰성이 있어서 게임을 선호하는 플레이어들을 끌어들일 수 있었을 것입니다.\n\nAAA 게임 공간의 계속되는 쇠퇴에 기여하려는 것이 아닙니다; 스튜디오들이 자신들의 새로운 아이디어를 시도할 수 있을 때 그것을 좋아합니다. 그러나 Immortals of Aveum은 매우 기본적이고 만족스러운 게임 아이콘 위에 과도하게 복잡한 새로운 스킨을 제시합니다. 게임의 플레이에 대해 눈에 띄는 점은 없으며, 세계 구축이 그렇다고 생각하는 것만큼 빛나지 않습니다. 이것은 90년대 게임들이 했던 것을 하고 있지만, 그것을 현대 콘텍스트에서 아주 잘 수행하고 있습니다. 이것만으로는 성공적인 작품이 되기에는 충분하지 않습니다.\n\n게임은 게임 산업이 즐거움을 주는 가장 훌륭한 연도 중 하나에서 비참한 시기에 출시되었습니다. 8월 말에 출시되어 발르더스 게이트 3가 이미 PC에서 몇 주 전에 최종 발매되고 콘솔에서 그 후 몇 주 후에 발매되었을 때 그야말로 미제한 대어로 흡수되었습니다. 영역에 대한 좋은 이야기를 좋아하는 사람들은 이미 충분히 만족했기 때문에 Aveum을 사려고 하지 않았습니다. 그리고 더 캐주얼한 마법 모험 팬들은 이미 올해 앞쪽에 허그워츠 레거시의 사본을 트럭으로 구입한 상태였으며, 이것은 발드르의 게이트와 마찬가지로 기존 IP에 의해 지지받는 더 관련된, 확장된 게임입니다.\n\nAveum에 대한 최종적인 큰 문제는 60FPS 게임이 되기 위한 이상한 결정이라고 생각합니다. 행동 게임에 있어서는 고귀한 목표지만, Unreal Engine 5는 여전히 상대적으로 새로운 기술입니다. 게임은 엔진의 최첨단 시각적 기능과 그 수준의 성능을 조합하기에는 충분한 역동력을 갖춘 콘솔을 대상으로 했습니다. Aveum의 모든 콘솔 버전은 매우 부드럽게 보이며, 특히 Xbox Series S는 완전히 고대 \"표준 해상도\" 해상도로 감소했습니다. 튼튼한 PC를 가지고 있는 경우 더 나은 성과를 거둘 수 있지만, 튼튼한 PC가 있다면 이미 더 인지도 높은 게임을 플레이하고 있을 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![게임 이미지](/assets/img/2024-06-19-TheBigMagicalAdventureGameNoOneBought_3.png)\n\n게임이 스튜디오 폐쇄에도 불구하고 며칠 전에 마지막으로 숨을 쉬었습니다. 새로운 패치가 출시되어 AMD의 FSR 3 기술을 추가했는데, 프레임 생성을 지원합니다. 이로써 콘솔에서 프레임율이 더욱 높아졌습니다. 하지만 저는 시도해본 결과, 더 많은 프레임보다는 고해상도 30FPS 옵션이 있다면 좋겠다고 생각했습니다. 이 새로운 패치는 현재 홈 콘솔의 그래픽 상태가 아직 완벽하지 않다는 문제에는 아무런 대책을 내놓지 않았습니다.\n\nAveum의 불멸자들은 왜 대규모 게임 회사들이 결코 기회를 잡지 않는지에 대한 훌륭한 사례 연구입니다. $1.2억을 들여서 일한 모든 사람들에게 일자리를 상실했으며, 10년 후에는 아무도 기억하지 못할 게임을 만들었습니다. 이 게임은 Unreal Engine 5의 상징적인 모습이 될 수 있는 순간이 있었지만, 너무 과도한 프레임율 야망으로 인해 왕관을 놓쳤고, Hellblade II는 그 왕관을 자신의 머릿결에 더 맺었습니다.\n\nAveum과 같은 새로운 세계를 바탕으로 한 게임들이 더 많이 존재할 수 있는 세상에 살고 싶지만, 그들은 흥미로워야 하고, 소니 게임을 좋아한 사람들 이외의 대상을 실제로 겨냥해야 합니다. 불멸자들은 그들의 게임 메카닉을 매우 잘 구현했지만, 수백만 가지를 추구하고 다음 대형 미디어 프랜차이즈가 되려고 하다가 갇혔습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n게임을 할 가치가 있는 편이에요. 비용을 과도하게 지불할 필요가 없고, 첫 시간을 견디는 데 문제가 없다면요. 제가 권하고 싶다는 건 아니지만 말이죠. 내부 창의 회의에서 심지어 \"Jak\"이라는 이름이 통과될 수 있다는 게 믿기지가 않아요. 게다가 어째서 Jak and Daxter를 발견하지 못한 법률 부서를 통과할 수 있었는지요.\n","ogImage":{"url":"/assets/img/2024-06-19-TheBigMagicalAdventureGameNoOneBought_0.png"},"coverImage":"/assets/img/2024-06-19-TheBigMagicalAdventureGameNoOneBought_0.png","tag":["Tech"],"readingTime":6},{"title":"개발 일지 3 피곤해요","description":"","date":"2024-06-19 11:47","slug":"2024-06-19-Devlog3Imtired","content":"\n게임 개발은 어렵습니다. 만약 이 경로를 선택한다면, 프로젝트가 당신을 밤낮으로 괴롭힐 준비가 되어야 합니다. 계획을 잘 세우지 않는 편이에요. 보통 그냥 뛰어들어서 어디로 나아갈지 보는 편이에요. 저의 게임인 '아마도 아트(PROBABLY ART)'를 만들 때에, 이 접근 방식이 제 약점으로 드러났어요.\n\n신비로운 분위기와 대화 없이 전개되는 이야기가 있는 특별한 게임을 만들고 싶다는 비전을 갖고 있었어요. 플레이 시간은 약 두 시간 정도 되고, 디지털 페인팅이 서사를 방해하지 않고 풀 화면에 표시될 예정이었어요. 큰 야망이 있었죠.\n\n시각적 요소는 비교적 빨리 조합되었어요. 제 디지털 페인팅에서 사용하는 스타일을 게임에 반영하려는 목표를 가졌어요. 어둡고 복잡한 스토리와 대조적으로 귀여운 의도적인 시각 효과가 있었어요.\n\n![이미지](/assets/img/2024-06-19-Devlog3Imtired_0.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 이야기: 우울한 토끼\n\n하루 내내 가장 많이 생각나는 이야기였어요. 그래서 눈을 감기가 어려웠어요. 게임에서 저는 토끼 옷을 입은 우울한 캐릭터의 이야기를 전하고 싶었어요. \"토끼\"에 이름을 지어주지 않았는데, 그 이유는 플레이어들이 주인공에 스스로를 더 쉽게 떠올릴 수 있게 하기 위해서예요. 이 토끼의 과거는 추상적으로 탐구되며, 어린 시절과 현재를 왔다 갔다하며 다루어져요. 집에 대한 이야기인데, 그곳은 안식처가 될 수도 있고 떠날 것을 두려워하여 새로운 경험을 막는 감옥이 될 수 있어요. 이것은 이야기의 작은 조각이고 이야기가 시작되는 방식이에요. 자아 사랑과 자학이라는 주제는 이야기에서 중요한 역할을 해야 했어요. 모든 것이 애매하게 전달되어 플레이어들이 해석할 공간을 남겼어요.\n\n![이미지](/assets/img/2024-06-19-Devlog3Imtired_1.png)\n\n# 90-90 규칙\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n게임의 시각 측면을 만드는 것은 나머지 부분과 비교해 상대적으로 쉬웠어요. 난인티 난인티 법칙이 계속 머리 속에 떠오르더군요: \"프로젝트의 처음 90%는 전체 시간의 90%를 차지하고, 나머지 10%는 남은 90%를 차지한다.\" 첫 90%는 재미있는 부분이었어요 — 게임은 거의 플레이 가능했고, 음악도 마무리되었지만 보이지 않는 모든 것들 — 마지막 10%인 버그 수정, 게임 로직 등 — 첫 90%만큼 시간이 걸렸어요. 게임이 필요로 하는 모든 백그라운드 작업이 저를 압도했고 솔직히 가끔 지루할 때도 있었어요. 작은 버그를 고치기 전에 몇 일이 지나기도 했죠. 하지만 많은 것을 배웠고, 네 달 후에 처음 프로토타입이 완성되었어요. 이전 블로그 게시물에서 언급했듯이, 그 당시 프로젝트는 여전히 “엄마가 날 특별하다고 말했다”라고 불렸어요.\n\n옛 윈도우 데스크톱 모양의 전반적인 스타일은 향수와 어릴 적 추억을 떠올리게 하기 위해 만들어졌어요. 언급했듯이, 게임은 과거와 현재 사이를 자주 왔다갔다 합니다. 토끼의 색깔로 어느 시대에 있는지 알 수도 있어요. 게임이 진행될수록 더 많은 회상이 나오면서 시간이 점프하는 것이 더 이해하기 쉬울 거에요. 저는 Ableton에서 음악을 만들었지만, 그것은 다른 블로그 포스트에 남기겠어요.\n\n저에게 프로젝트를 조기에 포기하는 게 얼마나 어려웠는지 상상할 수 있을 거예요. 5분의 게임 플레이를 위해 네 달 동안의 작업. 게임을 완성하는 데 2년이 더 걸렸을 거예요. 솔직히 말하자면, 그 때에는 이미 한계에 도달했지만 완전히 포기하고 싶지 않았어요. 그래서 좀 더 작게 생각하기로 결정했고, 그렇게 새 프로젝트인 PROBABLY ART 아이디어가 탄생했어요.\n\n다음 블로그 포스트로 무슨 일이 일어나는지 계속 지켜봐 주세요.\n","ogImage":{"url":"/assets/img/2024-06-19-Devlog3Imtired_0.png"},"coverImage":"/assets/img/2024-06-19-Devlog3Imtired_0.png","tag":["Tech"],"readingTime":3},{"title":"비트크래프트 속 제국","description":"","date":"2024-06-19 11:45","slug":"2024-06-19-EmpiresinBitCraft","content":"\n# 게임 디자인 블로그 — 2024년 6월 10일\n\n![이미지](/assets/img/2024-06-19-EmpiresinBitCraft_0.png)\n\nBitCraft에서 제국에 대해 이야기할 시간입니다. 제국은 비즈니스적인 측면과 세계의 역사를 플레이어들이 쓰는 동적인 세계에서 BitCraft의 성공에 중요합니다. 공동체와 제국에 대해 이야기하는 것은 오랜 시간동안 기대해온 시스템입니다. 어느 면에서는 게임 수익화에 대한 이전 블로그 글과 연장선에 있으므로, 아마도 아직 보지 않으셨다면 먼저 우리의 철학을 이해하기 위해 읽어보시기를 권장합니다.\n\n모든 플레이어가 같은 물리적 세계에서 공유하고 협업하는 BitCraft는 본질적으로 사회적인 게임입니다. 따라서 플레이어들이 세계와 경쟁하거나 협력할 수 있는 다양한 방법이 필요합니다. BitCraft에서는 무역 길드, 정착지, 그리고 제국을 포함한 여러 가지 방법을 계획 중에 있습니다. 현재 게임에 구현된 그룹 시스템은 정착지뿐이며, 이는 기본적으로 신뢰할 수 있는 그룹의 플레이어들 사이에 자원과 건물을 공유하는 방식으로 작동합니다. 정착지의 목적은 서로 다른 기술을 가진 그룹이 함께 세계의 특정 장소에서 진전할 수 있도록 하는 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n알파 2 플레이테스트에서 소개할 엠파이어 시스템은 다소 기능적이지 않고 좀 더 허영심을 충족시키는 목적을 가지고 있습니다. BitCraft에서 엠파이어의 목적은 플레이어가 큰 이념, 인물, 또는 군주에 힘을 모아 세계에 그 엠파이어의 충성을 퍼뜨리며 세계에 자신의 흔적을 남기도록 동기부여하는 것입니다.\n\n만약 우리가 일을 잘 한다면, BitCraft의 황제가 되는 느낌은 실제 세계의 황제가 되는 느낌과 유사해야 합니다. BitCraft에서의 이념을 위한 싸움이 흥미로울 뿐만 아니라, BitCraft 국가의 물류를 동원하는 일도 복잡할 것이며, BitCraft의 역사를 읽는 것이 현실 세계와 같이 매혹적일 것입니다.\n\n![엠파이어 이미지](/assets/img/2024-06-19-EmpiresinBitCraft_1.png)\n\n엠파이어의 작동 방식은 어떤가요?\n본질적으로, 엠파이어 시스템은 BitCraft의 세계지도 상에서 영토를 점령하기 위한 경쟁입니다. 엠파이어와 그 영토들은 게임 내에서 기능적인 목적보다는 BitCraft 세계의 맛과 역동성에 엄청난 영향을 미치지만, 플레이어와 그들의 엠파이어가 소유 및 통제하기 위해 경합하는 글로벌한 스킨으로 세계지도를 생각할 수 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n지난번에 게임 디자인 비전에 대해 이야기했던 것을 기억하시나요? 제국은 캐릭터나 정착지와는 근본적으로 다른 규모에서 운영됩니다. 제국은 모든 캐릭터나 정착지의 진행에 영향을 미치지 않지만, 모든 캐릭터가 제국 시스템에 각자의 방식으로 참여할 수 있습니다.\n\n제국 규모의 게임 플레이는 전략과 외교, 물류 및 사회 조직의 혼합으로 설계되었습니다. 적절한 전제조건이 갖춰지면 플레이어는 소유한 클레임을 사용하여 해당 클레임을 수도로 하는 제국을 설립할 수 있습니다. 그런 다음 이 새로운 수도를 사용하여 제국 규모의 주요 자원인 헥사이트 캡슐을 생산할 수 있습니다.\n\n플레이어는 이 헥사이트 캡슐을 사용하여 자신의 제국을 유지하거나 노드를 건설하거나 다른 클레임들을 설득하여 제국에 합류하도록 확장할 수 있으며, 최종적으로 경제적 전쟁을 펼쳐 다른 제국으로부터 영토를 차지할 수 있습니다. 이러한 캡슐은 수도 클레임에서만 생산할 수 있기 때문에 제국이 커질수록 모든 노드와 물류를 관리하는 것은 단일 플레이어에게 불가능해지므로 모집과 협력이 필수적이 됩니다. 모든 플레이어는 단일 제국에 충성을 맹세할 수 있으며 황제로서 이들 플레이어 중 일부를 권한 순위로 승진시켜 제국의 의무를 수행하는 데 도움을 받을 수 있습니다. 심지어 제국의 시민들도 제국 규모의 게임 플레이에 참여할 권한이 부여됩니다.\n\n![EmpiresinBitCraft_2](/assets/img/2024-06-19-EmpiresinBitCraft_2.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n제국과 수익화\n이전 수익화 블로그의 철학과 관련하여 BitCraft에서 게임의 어떤 부분이 \"명예 메달\"로 의도되었는지와 어떤 부분이 \"람보\"로 의도되었는지 명확히 해주려고 합니다. BitCraft의 제국 시스템을 거대한 영전용 화장수, 일명 람보르기니로 디자인하고 상상한 적이 있습니다. 대규모로 성공한 제국을 갖고있는 유일한 이득은 상태입니다: 게임 세계에서의 명성, 제국 이름이 세계지도에 표시되고 황제의 왕관 등이 됩니다. 따라서 제국 운영을 위해서 누군가 돈을 지출해야 한다는 사실을 감안하여 만들어졌습니다.\n\n특히, 헥사이트 캡슐을 만드는 데에는 헥사이트 파편이 필요하며, 이는 우리 스토어에서 실제 화폐로 구매할 수 있습니다. 다가오는 테스트에서는 헥사이트 파편을 직접 판매하지는 않겠지만, 어떻게 작동할지 미리 명확히 하고 싶습니다.\n\n이 돈은 제국을 소유한 황제나 참여를 희망하는 모든 플레이어가 지출해야 하는 것은 아닙니다. 저희는 의도적으로 다양한 방식으로 제국이 조직화될 수 있도록 디자인했습니다. 많은 사람들이 존경하거나 지지하는 단일 지도자에게 원조하고 싶어할 수도 있고, 소수의 사람들이 자신의 방대한 자원을 동원하고 이름을 역사에 남기기 위해 연합하고 싶어할 수도 있습니다. 예를 들어, 헥사이트 파편은 제국에 소속된 플레이어들이 제국의 금고에 기부할 수 있으며, 그 금고에서는 단독으로 제국이 사용할 수 있습니다.\n\n제국 시스템은 누군가 실제 돈을 지출해야 하는데, 그 돈은 캐릭터나 정착단위에서 빠르게 진행할 수 있도록 도와주지 않습니다. 게다가, 제국의 실제 비용은 꽤 적습니다. 다른 제국이 자신의 땅과 칭호를 놓고 경쟁하는 전쟁을 벌이거나 자신의 열정을 보여주기 위해 제국 전역에 기를 달거나 동상을 세우는 것이 시간, 돈, 자원을 많이 소모하게 될 것입니다. 이러한 방식으로 거의 누구나 경쟁이 적은 원격 지역에서 제국을 시작할 수 있지만, 세계적인 히게모니를 유지하기는 훨씬 어렵고 비싸게 들어갈 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n게임을 개발하는 데 많은 노력과 에너지를 투입했어요. 모든 플레이어에게 공평하고 장기적인 게임 개발팀을 유지할 수 있는 게임을 만들기 위해 노력했답니다. 우리는 BitCraft 세계를 수십 년간 구축할 수 있도록 혁신하고자 하는 목표 중에 이 시스템이 한 부분이에요. 게임에서 무료로 즐겁고 공평한 경험을 많은 사람들에게 제공하고, 게임에 돈을 지불함으로써 새로운 종류의 다이내믹하고 재미있는 코스메틱을 만드는 방식으로 수익을 창출하고자 합니다.\n\n저는 이것이 시도해볼 가치가 있다고 생각해요. 잘못되면 항상 수정할 수 있고, 우리가 공평함을 놓치지 않는 한 상황을 개선할 수 있을 거예요.\n\n새로운 시스템을 즐기시길 바랍니다.\n\n- 3Blave (Tyler)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n시계 장인 랩스의 창립자입니다.\n","ogImage":{"url":"/assets/img/2024-06-19-EmpiresinBitCraft_0.png"},"coverImage":"/assets/img/2024-06-19-EmpiresinBitCraft_0.png","tag":["Tech"],"readingTime":5},{"title":"파 크라이 5의 매끄러운 오픈 월드 디자인이 대박이야","description":"","date":"2024-06-19 11:44","slug":"2024-06-19-FarCry5sSeamlessOpenWorldDesignisAwesome","content":"\n유비소프트에 대한 온라인에서 비난하는 것이 인기가 있다는 것을 알고 있어요 — 그리고 그들에 대해 답답해하는 사람들이 잘못했다고 생각하지 않아요.\n\n그들은 여러 명의 끔찍한 사람들에게 지도자의 자리를 줌으로써 적었다고 생각되는 부당한 보도를 받았고, 그로 인해 성희롱, 매우 열악한 개발 압박, 그리고 권력 남용에 대한 여러 혐의가 제기되었습니다. 비디오 게임 제작에 대한 그들의 \"공장\" 사고 방식은 여러 해 동안 유사한 디자인을 연달아 선보이고, 그들의 일부 프랜차이즈에 대한 팬들의 피로를 가져왔습니다.\n\n그리고 그들의 세 번째 활 암시부터 시작해서, 어쌔신 크리드 IV: 블랙 플래그의 저주받은 속편인 Skull and Bones는 출시까지 10년 이상이 걸려 출시된 것 같지만, 이는 싱가포르 정부로부터 세금 감면을 받기 위해 비밀리에 체결한 계약 덕분인 것 같아요.\n\n그 어느 것도 좋은 상황은 아니죠. 그렇지만 유비소프트는 여전히 다양한 장르를 대상으로 저희 수준의 게임을 출시하는 거대한 게임 회사입니다. 그리고 모든 행정적인 문제에도 불구하고 산업 내에서 최고의 디자인 재능을 소속으로 두고 있으니까요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n2018년의 훌륭한 Far Cry 5를 살펴보면 게임 제작 경험의 많은 멋진 예가 어떻게 작용하는지에 대해 알 수 있어요. 몬태나의 허구 버전에서 설정된 이 게임은 이전 몇 개 설치의 거대한 캠프 청소 모험을 좁히고 동적 서술과 세계를 중심으로 한 새로운 디자인 패러다임을 세우는 상태에 있어요. 이전 제목보다 훨씬 자연스러운 방식으로 플레이어에게 퀘스트를 제공하며, 다른 오픈 월드 게임에 좋은 템플릿이라고 생각해요.\n\n물론, 첫 시간을 넘기지 못하면 그 멋진 새로운 것들 중 어느 것도 보지 못할 거예요. 그 첫 시간 동안 여러분을 게임의 세계로 곧바로 빠져들게 하며, 적대 세력으로 작용하는 종교 집단을 설정하죠. 그 후에는 이전 아쿠아 금증 게임들을 풍자하는 섬으로 여러분을 떨어뜨립니다. 거점을 소탕할 수 있는 맵의 아이콘들을 제공하고, 게임의 이동 및 전투 메커니즘을 소개합니다. 여러분을 라디오탑을 등반하도록 하기도 하며, 그 후로 복수의 라디오탑을 등반하는 것 자체를 조롱하기도 해요.\n\n유비소프트는 문을 열기 전에 예전의 방식을 확립한 뒤 해체해요. 옛날 스타일의 튜토리얼 섬의 끝에서, 게임 세계의 나머지에 떠다니던 짙은 안개가 걷혀져 아름다운 큰 숲이 드러납니다. 그렇게 말해요, \"안마 읽고 원하는 대로 이 일을 실제로 할 수 있다\"며 메인 캠페인을 시작하도록 여러분을 자유롭게 놓아줍니다.\n\n그 첫 지역 이후, 이 게임은 일반적인 예전 유비소프트 맵 아이콘 축제보다 훨씬 동적이고 생각 깊으며 플레이어의 시간을 존중해요. Far Cry 5는 세계가 더 활기차 보이도록 만드는 무작위 동적 이벤트들로 가득 차 있어요. NPC를 구하면 숨겨진 무기 보관장소나 적 성채에 대해 여러분에게 알려줄 수도 있어요. 그들은 심지어 여러분과 함께 가기를 제안할 수도 있어요. 이벤트는 플레이어가 그들에게 발견되기를 기다리기보다는 세계 전역에서 항상 일어나죠. 측면 콘텐츠에는 충분히 활기차고 에너지가 있어요. 그것들이 연결되어 큰 통일된 게임의 다음 부분처럼 느껴지며, 단순히 메뉴 상자에서 확인하려고 하는 것이 아니라고요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n모든 플레이어는 Far Cry 5 컨텐츠의 세계를 통해 약간 다른 경로를 따릅니다. 어디서 기반을 둔 \"Radiant Quest\" 시스템과 비슷한데, 유비소프트의 세계는 더 혼돈스럽고 우스꽝스럽습니다. 한 번 공격당한 좋은 친구들을 구해줬는데, 그리고 그런 후에 어떤 여성이 와서 \"고마워!\"라고 외치고 근처 버려진 헬기에 올라타고 어딘가로 날아가는 재미있는 순간이 있었어요. 이런 순간들이 웃기기는 한데, 세상 속의 지속적인 활동과 생명력은 이곳이 실제 장소처럼 느껴지게 만들어줘서 게임 콘텐츠의 대형 메뉴 같지 않게 만들어줍니다.\n\n주요 임무들은 다른 게임에서와 같이 더 선형적이고 구조화되어 있는데요 — 그러나 어떤 순서로든 접근할 수 있는 점 때문에 선택한 진행 방식을 주변에 신중하게 작성해야 했습니다. 게임의 이야기는 그 잠재적인 장벽에도 불구하고 성공을 거두었는데, 정말로 오싹하고 사악한 악당들과 내가 지금까지 본 대형 예산 비디오 게임 중 가장 위험하면서도 멋진 엔딩 덕분입니다.\n\n엔딩이 여기서 이야기 가속에 중요한 부분이어서 \"이미\" 오래됐다는 이유로 말씀드리기를 원하지 않아요. 그냥 Far Cry: New Dawn이라는 미니지작에 완벽하게 연결되어 있다는 것만 언급하고 싶네요. New Dawn도 좋아하고 Far Cry 5에서의 잡다한 부분을 잘 끝맺음 해주어서 즐거운데요 — 맵을 지우면서 \"숫자가 올라가는\" 전형적인 게임 형식이라서 전신의 동적인 퀘스트 진행 경로가 적은 거죠.\n\n의사동적 구조를 사용하는 다른 유비소프트 게임을 찾고 계신다면 Far Cry 6나 Frontiers of Pandora로 가야 할 것입니다. 그렇지만, 저는 Far Cry 5가 더 잘 했다고 생각해요. Far Cry 6나 아바타 게임은 약간 더 \"게임적\"이고, 무슨 일이 일어나고 있는지를 상기시키는 것과 진행 상황을 확인하기 위해 메뉴로 자주 들어가는 것들이 있어요. Far Cry 5는 실행에서 좀 더 확실합니다. 단지 당신이 혼돈의 세계 속에서 존재하고, 조금 더 유도 없이 여기저기 순찰하고 임무를 수행하는 것을 두렵지 않아해요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n파 크라이 5의 아름다운 세계는 이 디자인을 아름답게 묶어줍니다. 자연을 감상하는 것을 좋아한다면 초대하는 곳이며, 모든 지평선에는 흥미로운 랜드마크가 충분히 있어 지도를 계속 열기보다는 자연스럽게 주변을 둘러보게 됩니다. 게임에서 플레이어의 손을 프레임 아래로 낮게 배치함으로써 화면의 상당 부분이 아름다운 세계를 보는 데 전념할 수 있도록 해줍니다. 저는 완전한 3D 지도 화면을 좋아합니다. 이것은 다른 Ubisoft 게임에서도 등장합니다. 그리고 단순히 마법적인 지도 지점을 활성화하는 대신에 실제 탐험을 통해 지도를 채우는 것은 저를 아름다운 풍경에 더 빠지게 만듭니다.\n\n파 크라이 5가 처음 출시될 때, 이전 타이틀의 경험치 바 시스템이 사라지고 새로운 게임에서 다양한 도전을 수행함으로써 얻는 퍼크 포인트로 대체된 것을 보고 제 내부에서 디아블로에 집착하는 부분이 실망했습니다. 하지만 이제 이러한 도전이 게임 시스템과 더 깊이 관여하도록 부드럽게 조언하는 것을 알게 되었습니다. 당신이 원하는대로 어떤 순서로든 여기에서 할 수 있는 것은 정말 무엇이든 가능하며, 도전을 통해 당신이 원하는 플레이 스타일을 찾도록 도와줍니다. 이 도전들은 당신이 새로운 것을 시도해보는 동안 중요한 부가능력을 잠궈두기 때문에 도움이 됩니다.\n\n파 크라이 5를 파워업하는 CryEngine 기반의 둘니아 기술은 여전히 놀랍게도 훌륭하게 유지되고 있습니다. 게임은 원래 PS4 세대에서 출시되었지만 최근에 향상된 설정을 갖추고 현대 콘솔에서 실행할 수 있는 패치를 받았습니다. PC 버전은 여전히 놀라운 모습을 자랑합니다. 하지만 파 크라이 6는 광선 추적 및 현대 업스케일링 기술과 같은 기능으로 이를 능가합니다.\n\n유비소프트가 다른 파 크라이에 대한 작업을 진행하고 있다면 좋겠으며, 이 동적 디자인에 계속적으로 손질해 나갔으면 하는 바람도 있습니다. NPC가 근처 가게에 대해 나에게 이야기하고 난 후 트럭에 올라 앞으로 날아가는 것이 조금 어색할 수 있습니다. 그렇지만 이것은 대부분의 다른 비디오 게임의 NPC의 제공할 수 있는 것보다 훨씬 많은 생명과 즐거움을 제공하며, 특정한 장소나 미리 정의된 경로를 벗어나 움직일 기회가 거의 없는 NPC에 비해 훨씬 더 매력적인 부분입니다. 파 크라이 5의 디자인은 플레이어를 압도하지 않으면서도 거대하고 동적인 오픈 월드 게임이 어떻게 느껴질 수 있는지를 훌륭하게 보여주는 좋은 예입니다. 지금 다시 방문해볼 가치가 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n저는 이 게임을 만드는 데 관여된 어떤 사람으로부터 글을 쓰라고 요청받지도, 보상을 받지도 않았어요. 스크린샷을 위해 사용된 복사본은 제가 직접 현금을 사용해 구입했습니다.\n","ogImage":{"url":"/assets/img/2024-06-19-FarCry5sSeamlessOpenWorldDesignisAwesome_0.png"},"coverImage":"/assets/img/2024-06-19-FarCry5sSeamlessOpenWorldDesignisAwesome_0.png","tag":["Tech"],"readingTime":6},{"title":"블랙 태비 게임즈 - 2024년 현황 보고서","description":"","date":"2024-06-19 11:41","slug":"2024-06-19-BlackTabbyGames2024StateoftheUnion","content":"\n안녕하세요!\n\n우리는 한동안 일정 및 개발 마일스톤에 대해 매우 침묵해 왔습니다. 이런 이유로는 우리가 이야기할 수 없는 많은 일들이 있어서입니다. 그런데 이제 그것들을 이야기할 수 있는 시기가 왔다고 생각되어 매년 \"국가 상황\" 보고서를 시작하는 것이 좋을 것 같았습니다. (스튜디오 상황은 너무 과장된 것 같아서요) 우리가 공유할 수 있는 것들을 공유하고, 스튜디오가 한 선택들에 대해 깊이 있는 분석과 그 이유를 공유할 때 마침내 이야기할 수 있게 되었습니다.\n\n게임 마케팅을 하는 가장 어려운 점 중 하나는 커뮤니티와 기쁜 소식을 나누기 위한 균형을 유지하면서 충분히 가린 카드를 가진 채로 이야기하는 것입니다.\n\n이 경우에 우리는 Slay the Princess - The Pristine Cut에 대한 많은 흥미로운 발전 사항이 있었지만, 이제 여름 게임 페스트에 슬롯을 확보하기 위해 지금까지 기다려야 했습니다. 그럼에도 불구하고, 새로운 예고편을 놓친 경우에는 여기에서 확인할 수 있습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n간략히 말하자면:\n\n- Pristine Cut은 어느 순간 거대해졌습니다 (그로 인해 대부분의 측정 항목으로 보면 전체 게임이 ~35% 더 커졌습니다.)\n- 우리는 Serenity Forge와 협력하여 콘솔로 게임을 가져오고 컬렉터 에디션을 포함한 실물 출시를 할 예정입니다.\n- 게임의 텍스트를 12개 언어로 번역하고 있습니다!\n\n지금까지 게임에 대한 작업은 거의 끝났으며, 이제 이식 팀과 번역가들이 각자 할 일을 할 차례입니다. 앞으로 몇 달 동안 이들을 돕기 위해 자원으로서 시간을 조금 투자할 예정이지만 대부분의 경우, 이 일로 인해 우리는 완전히 Scarlet Hollow에 초점을 맞출 수 있는 자유를 얻게 되었습니다. 그리고 이번 업데이트의 본론으로 이어지는 요소가 있습니다.\n\n# 왜 Scarlet Hollow의 에피소드 5가 이렇게 오래 걸릴까요?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n저희 5화 제작주기에 대한 여러분의 참을성에 대해 정말 감사드립니다. 그 인내심에 깊이 감사하며, 남은 세 에피소드를 마무리하기 위한 작업을 계속 진행하면서 조금 더 여러분의 이해와 협조를 부탁드립니다. 우리가 'Slay the Princess'의 성공으로 'Scarlet Hollow'에 전념할 수 있고, 우리만의 일정으로 진행할 수 있다는 것은 정말 기쁜 일입니다. 예술가로서 자신의 창작활동을 예산이나 외부 감독의 걱정 없이 자유롭게 할 수 있는 그런 자유를 얻을 수 있다는 것은 꿈도 못 꾸던 일이었는데, 이제 그것을 할 수 있다는 것에 정말 기쁘고, 여러분께서 그 결과물을 사랑해주길 바랍니다.\n\n그러나 우리는 'Scarlet Hollow' 작업을 잠시 중단하고 여분의 게임을 추가로 만들기로 한 결정에 대한 생각 과정을 조금이나마 밝히고 싶습니다. 아마도 이 결정이 이상하게 보일 것으로 생각되기 때문입니다.\n\n'Scarlet Hollow' 작업을 시작할 때, 이 게임이 매우 야심찬 범위를 가졌다는 것은 알고 있었지만, 그 범위가 얼마나 야심찬 것인지는 그 당시에는 정확히 알지 못했습니다. 이 야심은 크게 두 가지로 요약됩니다:\n\n- 게임에는 엄청난 양의 예술 작업이 있으며, 이 모든 것은 한 사람이 그림을 그립니다.\n- 게임의 대본은 엄청나게 반응적이며, 이 모든 것은 두 명의 작가가 쓰고 코딩합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nScarlet Hollow이 특별한 이유 중 하나는 본격적인 야망을 실현하는 동시에, 창의적인 비전을 완전히 공유하는 두 명의 핵심 팀이 만든다는 것이라고 생각해요.\n\n그러나 이로 인해 두 가지 어려움이 발생합니다. 반응성은 각 에피소드마다 게임의 규모를 기하급수적으로 증가시키는 것을 의미하는데, 이것은 두 명이 구현하는 데 시간이 걸립니다. 게임의 수작업 대화와 아트는 특별한 부분 중 일부를 잃지 않고 팀을 확대할 수 없다는 것을 의미합니다.\n\n이런 규모를 감각적으로 이해하기 위해 이러한 정보를 제공해 드릴게요:\n\n- 에피소드 1은 약 100,000 단어*, 120장의 배경 이미지 및 659개의 스프라이트가 있어요. 개발 시작부터 릴리스까지 6개월이 걸렸습니다. *참고: 에피소드 1은 저의 첫 게임 코딩이라, 반복적인 텍스트 처리에 효율적이지 않은 부분이 많습니다. \"실제\" 단어 수는 약 70,000으로 추정됩니다.\n- 에피소드 2는 약 100,000 단어, 90장의 배경 이미지 및 951개의 스프라이트가 있어요. 에피소드 1 릴리스부터 9개월이 걸렸습니다.\n- 에피소드 3은 약 170,000 단어, 50장의 배경 이미지, 약 2,000개의 스프라이트가 있어요. 에피소드 2 릴리스부터 9개월이 걸렸습니다.\n- 에피소드 4는 약 200,000 단어, 130장의 배경 이미지, 약 1,500개의 스프라이트가 있어요. 에피소드 3 릴리스부터 9개월이 걸렸습니다. 마지막 몇 달은 우리 둘 다에게 굉장히 힘든 시기였어요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n저희가 개발을 시작할 때, 새로운 에피소드마다 얻게 될 경험이 개발 시간 증가를 상쇄할 것이라고 생각했습니다. 이것은 Episode 3을 완료할 때까지는 사실이었지만, 그 이후에는 더 빠르게 움직일 수 있는 능력이 균형을 잡았습니다. 부끄러워할 것은 없어요! 9개월 동안 1,500개가 넘는 아트 자산이 포함된 20만 단어의 비주얼 노벨을 만든 것은 꽤 좋은 성과에요.\n\n지금 이 글을 쓰는 시점에서 Episode Five는 Episode Four의 길이보다 약간 두 배 정도로 나올 것으로 예상됩니다. 저희의 최고 개발 속도로 하나의 프로젝트에만 집중했다면, 아마도 이제쯤 준비가 되어 있을 겁니다... 실제로 (약 40만 단어에 18개월 소요되어, 에피소드 4는 1년 반 전에 출시되었죠.)\n\n하지만, 불가능한 현실로 만든 몇 가지 이유가 있습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 소진. 애비와 나는 블랙 태비 게임을 설립한 이후 매주 60~80시간 일한 바 있습니다. 애비는 그 이전에도 그런 일주일을 꾸준히 하고 있었습니다. 예술 분야, 특히 만화 분야에서 살아남기 위해 이러한 방식의 노력이 아쉽게도 필요했지만, 몇 년 동안 소진증을 쌓을 수밖에 없었습니다. 우리가 이를 시작했을 때는 28세였고, 지금은 32세이며, 그 4년을 분명히 느낄 수 있습니다. 4화 개발은 특히 힘들었고, 릴리스 후 몇 달 동안 회복하기 전까지는 충분히 휴식이 필요했습니다. 이 속도는 지속할 수 없었고, 특히 지난 몇 년 동안 우리의 건강에 피해가 갔습니다. 31세 때부터 회색빛이 들기 시작했는데, 애비는 그것을 매우 좋아하지만, 그래도 걱정스럽기도 합니다!\n\n![이미지](/assets/img/2024-06-19-BlackTabbyGames2024StateoftheUnion_1.png)\n\n- 자금. Scarlet Hollow은 초기 액세스 호러 비주얼 소설로서 예상보다 매우 잘 수행했습니다. 중요한 건 자금 조달이었고, 현재까지 수익의 약 80%가 Slay the Princess가 발표된 이후 발생했으며, 해당 시간은 게임 구매 가능 기간의 약 40% 정도입니다.\n\n자금과 수익 측면에 대해 자세히 설명하자면 예외를 제외하고 게임 판매는 다음과 같은 차트를 따릅니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![표](/assets/img/2024-06-19-BlackTabbyGames2024StateoftheUnion_2.png)\n\n말그대로 대부분의 사본이 발매 첫 주에 판매되고 그 후 급격히 줄어듭니다. 사람들이 사용하는 대략적인 규칙은 다음과 같습니다:\n\n발매 위시리스트 \\* 0.2 = 첫 주 매출\n\n첫 달 매출 = 2 \\* 첫 주 매출 (첫 주 매출을 포함하므로 다음 세 주는 사실상 그 첫 주와 같습니다.)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n첫 해 매출 = 3 \\* 1주차 매출 (첫 달 매출 포함, 따라서 첫 달을 넘긴 첫 해의 나머지는 대략적으로 첫 달의 매출을 늘릴 것입니다.)\n\n\\*\\* 이 0.2는 20% 변환율이 아니며, 이전 위시리스트 없이 발생하는 1주차 매출을 포함합니다.\n\n이 규칙에는 예외사항이 있으며, 그 안에는 다양한 변형이 있습니다. 어떤 게임들은 20%보다 훨씬 더 높은 변환율을 보이며, 일반적으로 매출이 훨씬 더 느리게 감소하는 긴 꼬리를 가지게 됩니다. 다른 게임들은 여전히 20% 비율을 유지할 수 있지만 긴 꼬리를 가지게 됩니다. 다른 게임들은 여전히 매우 낮은 비율로 변환할 수도 있습니다. 몇몇 게임들은 출시 위시리스트 중 5% 정도만 첫 주에 변환하는 것을 본 적이 있습니다.\n\n다음은 Steam에서 Scarlet Hollow의 첫 해 매출 변화 예시입니다. 환불은 제외하고 계산했습니다(우리 게임 두 개의 평균 환불율이 산업평균보다 훨씬 낮다는 것에 우리는 행운을 봅니다):\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/assets/img/2024-06-19-BlackTabbyGames2024StateoftheUnion_3.png\" />\n\n여기서 간단한 계산을 하는 경우를 고려해 봅시다. 게임의 대부분은 할인된 가격에 판매됩니다 (스칼릿 할로우는 4화 이전까지 20% 할인했습니다) 그리고 저희는 게임에 지역 가격을 사용합니다, 이는 일반적인 판매 가격이 상품 제조자 소매 가격(MSRP)의 약 65%일 수 있다는 것을 의미합니다. 그 뒤에 환불 및 차액을 고려하면, 스팀은 우리의 매출 중 30%를 플랫폼 수수료로 가져가므로, 최종적으로 20달러짜리 게임의 평균 판매액은 우리 회사 계좌로 약 10달러가 들어올 것입니다.\n\n스칼릿 할로우는 4,500개의 위시리스트로 얼리 엑세스에 진입했으며, 첫 주에 803개의 판매를 실현하여 위시리스트 대 판매 비율을 18.9% 또는 평균 미만 수준으로 뒷받침했습니다. 우리는 또한 Kickstarter 캠페인에서 1,053명이 키를 교환한 바 있습니다. 만약 이를 고려하여 위시리스트 대 판매 비율을 계산하면 41.2%가 됩니다.\n\n크라우드펀딩 캠페인에서 교환된 키들은 스팀의 알고리즘에서 판매로 인정되지 않습니다. 게다가 해당 키들로 작성된 리뷰도 스팀의 리뷰 평균에 반영되지 않습니다. 따라서 게임이 출시된 위시리스트에 비해 상당히 성과를 얻었음에도 불구하고, 알고리즘은 이를 평균 이하의 성과로 판단하여 우리의 가시성을 제한했습니다. 이것이 Slay the Princess를 크라우드펀딩하지 않았던 주요 이유 중 하나이며, 앞으로도 게임에 대한 크라우드펀딩 캠페인을 진행하지 않을 가능성이 높은 주요 이유 중 하나입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n스칼렛 홀로우(Scarlet Hollow)의 경우 우리는 운이 좋게도 입소문이 게임을 유지해 주었습니다. 첫 달에는 1,744개의 판매로, 기대를 약간 능가했고, 첫 해에는 6,503개의 판매로, 기대를 크게 넘었습니다. 그러나 기대를 크게 넘은 것은 우리의 판매량이 줄어들지 않았다는 것을 의미하지 않았고, 또한 우리가 출시할 때 위시리스트 숫자가 낮았기 때문에 종합적으로 수익을 충분히 벌지 못했다는 것을 의미하지 않았습니다. (표준적인 모델링에서는 스팀 수수료와 환불금을 제외한 1년 수익이 약 21,000달러로 예상되었지만, 계약자에게 지급하기 전, 두 명 사이에서 분배된 금액이며, 세금은 미포함입니다.)\n\n'공주를 죽이다(Slay the Princess)'의 공개 전 세 달 동안, 스팀의 수수료와 계약자에게 지급한 후, 애비와 나는 시간당 약 5달러씩 벌고 있었습니다. 우리는 Kickstarter에서 남은 상당한 현금 잔고를 가지고 있었지만, 매달 그 금액이 감소하고 있었으며, 스칼렛 홀로우의 최종 1.0 버전 출시는 큰 마케팅 포인트가 될 것이라 확신했지만—각 에피소드의 스팀에서의 출시가 커질 것이고, 게임을 기다리는 많은 사람들이 전체 출시를 기다렸다는 것을 우리는 알고 있었습니다—우리는 끝내 무언가가 바뀌지 않는 한 자금이 바닥나기 전에 작업을 마치지 못할 것이라는 기대를 향해 쓴 글자를 볼 수 있었습니다. 이 기간 중 우리가 매주 60-80시간을 일하고 있었기 때문에 화가 나서, 갈증이 매주 더 힘들어지고 있었습니다. 우리는 몇 년 동안만 이런 속도를 유지할 수 있었습니다.\n\n그래서 우리에게는 몇 가지 옵션이 있었습니다:\n\n- 게임을 더 잘 마케팅하자. 스칼렛 홀로우는 이상한 마케팅 프로필을 가지고 있습니다. 일반 대중들에게 이유가 분명한 여러 가지 이유로 사람들을 문턱을 넘기는 것이 극히 어렵습니다 — 이것은 시각 소설이며 (우리는 우리의 매체를 사랑하지만, 이들은 일반 대중들에게는 더 어려운 판매 상품입니다); 이것은 알파버전이므로 완성되지 않은 게임입니다; 설명이 길며 간결한 버전은 변환이 되지 않습니다. 그러나 반면에, 한번 사람들이 플레이하기 시작하면, 그들은 게임을 좋아합니다. 우리는 환불 비율이 믿기 어렵게 낮고(1.8%, 업계 기준의 10-20%에 비해), 많은 입소문이 퍼져 우리를 제한적인 개발을 계속해 오게 했고 (모두 감사합니다!! 우리는 우리의 커뮤니티를 사랑합니다!) 그러나 우리는 생각했다, 혹시 게임을 더 잘 마케팅한다면, 더 많은 사람들이 오지 않을까 하고, 그럼 그 후로 사활이 익을지도 모르겠다고. (이것이 우리의 첫 번째 선택이었지만, 우리가 한 일들로 인해 바늘을 충분히 움직이지 못했습니다.)\n- 게임 개발자와 계약을 맺어 외부 자금을 받자. 대부분의 경우 사람들은 이를 선택하고 우리도 다양한 옵션을 탐색했지만, 우리가 논의한 조건 중 어느 것도 만족스럽지 않았습니다 — 일반적으로 게임 개발자들은 더 많은 수익을 원했고(일반적으로 상환 후 50%), 우리의 일정을 좁게 하고 창작 방향을 충분히 지배하려고 해서, 우리가 생각하기에, 스칼렛 홀로우의 최종 버전은 훨씬 나빠질 것이었습니다. 게다가, 게임 개발자와의 협상은 시간이 많이 소요되었고, 종종 몇 주간의 작업시간을 소비했습니다. 지난 몇 년간 게임 개발자들이 프로젝트를 폐쇄하거나 평가한 경우에 겪어 온 것을 고려할 때, 우리는 이곳에서 올바른 선택을 한 것으로 생각합니다.\n- 다른 크라우드펀딩 캠페인을 하자. 가장 최악의 경우 다른 크라우드펀딩 캠페인을 진행할 수 있었겠지만, 처음 스칼렛 홀로우 캠페인이 게임이 완료되고 아트북이 배포될 때까지 모두 충족되지 않을 것이므로 이는 매우 비현명한 선택이었을 것입니다. 이러한 고려 없이도 캠페인은 엄청난 노력이 필요하며(보통 우리 둘 다가 캠페인을 관리하기 위해 전문일을 1~1.5개월 소요됨), 새로운 보상은 자체 비용이 있었어요 — 커미션 아트와 같은 맞춤형 보상은 게임에 시간을 투자해야 하는 애비가 그 시간을 사용해야 하며, 상품은 별도의 제조 비용이 필요합니다. 이것은 모든 면에서 좋지 않은 생각이었을 것입니다.\n- 다른 프로젝트에서 유료 상담을 하자. 많은 젊은 기업이 이 상황에 빠지는 함정입니다. 주력 프로젝트에 동시에 작업하면서 불을 밝히려고 유료 상담 작업을 합니다. 여기서 문제는 두 가지입니다: 이 작업을 찾아야 되는데, 그것은 시간이 소요되는데요; 이 작업을 수행해야 하는데요, 그것도 시간이 필요합니다. 너무 많은 기\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n우리는 처음 두 옵션에 상당한 노력을 기울였고, 나머지 두 옵션에도 어느 정도 고려를 했지만, 모두가 우리의 자율성을 많이 소비하거나 실제로 우리의 과제를 해결하지 않거나 너무 많은 시간을 낭비하게끔 만드는 조합으로 이어졌습니다. 그래서 대신, 우리는 측정된 위험을 감수하기로 결정했습니다:\n\n나머지 개발을 더 작은 프로젝트로 자금을 지원하는 것입니다. 마케팅적 관점에서 Scarlet Hollow의 두 가지 핵심 어려움이 있었습니다.\n\n- 이에 대해 이야기하기 어려웠습니다.\n- 작업이 완료되지 않았고, 마침내 완성선에 다다를 때까지 아마도 몇 년은 걸릴 것으로 예상됩니다.\n\n동시에, 우리는 주요 강점을 확인했습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 사람들은 게임을 한 번 플레이하면 정말 좋아합니다.\n\n그 강점에 대한 결과로:\n\n- 사람들은 우리의 글쓰기와 Abby의 아트를 좋아합니다.\n\n마지막으로, Scarlet Hollow에 대한 우리의 작업 일정과 관련된 중요한 세부 사항이 하나 있었습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 애비는 다음 에피소드의 초고를 쓰는 동안 토니는 후속 에피소드 릴리스 패치 및 마케팅을 담당합니다.\n- 토니는 다음 에피소드의 두 번째 초고를 쓰고 엔진에서 코드를 작성하는 동안 애비는 예술 작업에 집중합니다.\n\n특히 토니가 마케팅 부분을 맡았던 그 첫 단계는 많은 시간이 걸린 것이었고, 각 에피소드마다 점점 길어져서 실질적인 보상을 거의 제공하지 않았습니다. 게시할 수 있는 정보는 한정되어 있고, 다채로운 마케팅 방법을 다 해보기 전에 곧 고갈될 것입니다.\n\n그래서 우리에게 합리적으로 느껴졌던 것은 Scarlet Hollow 작업 과정에 영향을 최소화하면서 토니의 마케팅 시간을 활용할 수 있는 두 번째 게임을 개발하는 것이었습니다.\n\n- 나는 초고를 쓰는 동안 애비는 다음 Scarlet Hollow 에피소드의 초고를 쓰는 게임을 만들었습니다. 여기에는 자세히 설명할 필요가 없습니다. 작업이 순조롭게 진행되었고, Slay the Princess의 대본이 완성되었을 때 5화의 대본도 20,000단어가 완료되었습니다. 4화의 두 배 크기인 5화가 아니었다면 Slay the Princess의 대본이 완성될 때 모든 대본이 완료되었을 것입니다. 그러나 우리는 선택이 중요하다는 느낌을 제대로 전달하고 싶어하기 때문에 5화에서는 그 부분에서 굉장한 성과를 거둘 것입니다.\n- Scarlet Hollow의 스타일보다 애비가 그림 그리는 데 소요되는 시간이 덜 걸리는 예술 스타일을 채택했습니다. Slay the Princess에서는 Scarlet Hollow의 18\"x24\" 인치 종이에서 11\"x17\" 인치 종이로 바꾸어 각 배경에 필요한 면적을 56% 줄였습니다. 또한 연필 -잉크 - 색상에서 연필만 사용하여 (그리고 연필 색상을 조금 더 사용함으로) 프로세스의 한 단계를 삭제했습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/assets/img/2024-06-19-BlackTabbyGames2024StateoftheUnion_4.png\" />\n\n- 작은 범위를 고려해보는 것도 좋겠어요. 여기서는 플레이어 외에 한 명의 캐릭터만 화면에 함께 등장하도록 하고, 게임을 단일 위치로 제한할 거예요.\n\n<img src=\"/assets/img/2024-06-19-BlackTabbyGames2024StateoftheUnion_5.png\" />\n\n- 한 문장으로 빠르게 전달될 수 있는 강력한 호흡.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/assets/img/2024-06-19-BlackTabbyGames2024StateoftheUnion_6.png\" />\n\n- 게임의 범위가 작기 때문에 더 쉽게 접근할 수 있도록 목소리 연기를 추가할 수 있습니다. 각 캐릭터의 최종 선택이 우리를 바로 찾아와 주어서 운이 좋았습니다. 둘 다 훌륭한 일을 해냈습니다. Jonny와 Nichole에게 감사드립니다!\n\n마지막으로 이 목록을 마치면서, 일부 사람들이 이러한 제약 사항을 보고 'Slay the Princess'가 어떠한 열정적인 프로젝트가 아닌 것으로 잘못 추정한 것을 언급하고 싶습니다. 나는 제약 사항이 흥미로운 예술로 이어진다고 확신합니다. 게임의 실행이 우리가 얼마나 소중히 여기는지 명백하게 보여주기를 희망합니다! 우리는 두 아이를 모두 동등하게 사랑하며, 정말 솔직합니다.\n\n<img src=\"/assets/img/2024-06-19-BlackTabbyGames2024StateoftheUnion_7.png\" />\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n어떤 정보도 발표하기 전에, 우리는 Slay the Princess의 개발 주기에 대한 이론을 테스트하고자 했습니다. 비밀리에 데모 작업을 진행하여 얼마나 오랜 시간이 걸리는지 확인했어요. 데모 작업은 글쓰기, 코딩, 음성 녹음에 2주가 걸렸고, 미술은 Abby가 1주 동안 작업하여 헌신적인 결과를 얻었답니다. 우리는 게임을 발표하고 데모를 발표한 날부터 1주일안에 Tiny Teams로 이어지며 이 출시는 큰 성공을 거두었어요. Slay the Princess는 2주 동안 약 25,000개의 위시리스트를 생성했어요.\n\n더 자세한 릴리스 마케팅 전략을 읽고 싶다면, 여기 유용한 포스트가 있어요: [클릭!](https://medium.com/p/3c69304312bc)\n\nSlay the Princess의 목표 중 하나는 완성된 게임을 사용하여 직접 Scarlet Hollow로의 관심을 증가시키는 것이었습니다. 이 목표에 있어서 큰 성공을 거뒀어요. Slay the Princess를 발표하고 데모를 즉시 공개함으로써, Scarlet Hollow는 매일 평균 판매량이 5배 증가하며, Slay the Princess 이전의 평균의 3배로 안정화되었어요.\n\n<table><img src=\"/assets/img/2024-06-19-BlackTabbyGames2024StateoftheUnion_8.png\" /></table>\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n앞서 말씀드린대로, Scarlet Hollow의 판매의 80%가 이 공지 이후에 발생했으며, Scarlet Hollow의 판매 중 33%가 이후에 발생했습니다. 실제로 이는 Slay the Princess 출시 이후 약 8개월 만에 일어난 일입니다.\n\nSlay the Princess는 우리 스튜디오의 운영 자금을 앞으로 예상할 수 있는 미래를 위한 것뿐만 아니라, 세 번째 게임을 위한 자금도 확보할 수 있는 수익을 창출했을 뿐만 아니라, Slay the Princess 출시를 통해 Scarlet Hollow의 인지도를 높여줬습니다. 이로써 Scarlet Hollow는 아직 어도젝트 단계에 있지만 단독으로 수익을 창출할 수 있게 되었습니다.\n\n또한, Slay the Princess의 성과에 대해 매우 만족스럽게 생각하고 있습니다. Metacritic에서 90의 점수를 받은 것으로, 지난해 최고 5대 PC 게임 중 하나로 평가되어 있으며, 게임 개발 분야에서 가장 경쟁이 치열했던 해 중 하나에서 수상 경력도 가지고 있습니다. 그리고 올해 후반에 더 나은 버전의 Slay the Princess를 공개하는 것을 매우 기대하고 있습니다!\n\n## 그렇다면 이 모든 것이 우리에게 미친 영향은 무엇인가요?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nScarlet Hollow의 개발 시작부터 함께해 온 분들께, 새로운 에피소드가 출시될 때마다 대규모 패치(또는 일련의 패치)가 그 뒤를 이은다는 것을 알고 계셨을 것입니다. 우리는 이제 숨 좀 돌릴 기회를 가지고 우리의 작품을 되돌아보고, 사람들과 연결되지 않는 부분은 무엇인지 살펴볼 수 있었습니다. 예를 들어, 첫 번째 에피소드에서는 Talk to Animals를 소개하는 큰 패치가 있었는데, 이것은 게임의 다시 플레이가 가능성을 크게 확장시키고 커뮤니티에서 인기 있는 몇몇 캐릭터에 생기를 불어넣었습니다.\n\nThe Pristine Cut은 Slay the Princess에 대한 그 패치입니다. 우리가 확장하고자 했던 모든 것을 확장하고, 이야기의 페이스를 조절하고, 새로운 기능을 추가하여 전체 경험을 개선했습니다. 이에는 플레이어들이 새로운 경로와 엔딩을 찾는 데 도움이 되는 거대한 CG 갤러리도 포함되어 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n프리스틴 컷(The Pristine Cut)과 함께 The End of Everything 업데이트로 The Pristine Cut를 맛봤어요. 이 업데이트에서는 게임의 엔딩을 개편하고 애니메이션을 추가하며 몇 가지 중요한 트랙을 완전한 오케스트라로 개선했어요. 우리는 슬레이 더 프린세스(Slay the Princess)의 성공이 우리에게 제공하는 유연성을 기쁘게 생각하고 있어요. 이 성공을 통해 Scarlet Hollow에 더 많은 자유가 생겼는데, 이제 세션 뮤지션들을 삽입하여 라이브 공연으로 더 높은 수준의 트랙을 구현할 수 있게 되었어요. 이것은 우리가 이전에 고려할 수 없었던 방식으로 Scarlet Hollow를 높이는 데 도움이 되고 있어요!\n\n슬레이 더 프린세스가 이제 받을 마지막 주요 업데이트인지 확실히 말씀드릴 수는 없지만, 현재로서는 프로젝트에서의 주력 작업이 끝났고, 우리의 초점이 완전히 Scarlet Hollow로 돌아왔어요. 모두 모여, 슬레이 더 프린세스의 릴리즈 버전에 대한 작업은 제가 약 10개월, 애비가 약 6개월의 풀타임 작업, 그리고 프리스틴 컷을 위해 각자 약 3개월의 추가 작업(그리고 슬레이 더 프린세스의 초기 릴리스 후 꽤나 힘든 시기가 이어졌었죠.) 그러므로, 모두 모아서 약 9개월 가량 Scarlet Hollow의 개발 속도가 느려진 것 같네요. 그렇지만, 이제 자금이 안정화되었고 스튜디오를 유지하기 위해 다른 방법을 모색할 필요가 없어졌기 때문에 개발의 끝까지 자신 있게 진행할 수 있을 거라 생각해요.\n\n# 미래!\n\n전체적으로, 앞으로의 대략적인 로드맵은 이렇습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- The Pristine Cut이 올가을에 출시됩니다 (날짜 미정)\n- Scarlet Hollow: Episode 5의 첫 알파 빌드가 올해 달력 연말 전에 패트리언 테스터들에게 공개될 예정입니다.\n- Scarlet Hollow: Episode 5는 내년 어느 시점에 출시될 예정입니다.\n- Scarlet Hollow: Episodes 6와 7은 완료되면 함께 출시됩니다.\n- Abby는 오랜 휴재 후 자신의 웹코믹인 The Last Halloween을 마무리 지었습니다.\n- 우리는 세 번째 게임에 대해 작업을 시작할 것입니다. 이 일부는 아마도 #5 중에 발생할 것입니다, 그 때 할 일이 필요할 것이기 때문이죠 :)\n\n에피소드 5 전체를 올해에 출시하려고 했지만, 에피소드 4와 비교했을 때 규모가 증가한 만큼, 극심한 작업 시간과 심각한 소진을 야기할 수 있어 목표를 세울 수 없습니다. 이전에는 생존을 위해 다음 업데이트를 제때에 출시하기 위해 매주 60~80시간을 일해야 했던 소진은 피할 수 없는 부작용이었습니다. 이제 자금이 바닥나는 위험에 처하지 않았기 때문에, 더 지속 가능한 속도로 이동할 수 있게 되어, Scarlet Hollow의 나머지 개발 뿐만 아니라 향후 프로젝트의 개발에도 훨씬 더 나은 것이 되겠죠. 우리가 생계 유지를 위해 노력하는 동안, 우리는 코로나 때문이었을 수도 있지만 적절한 결혼식을 갖거나, 두 사람이 600평 아파트에서 모든 것을 할 때 어려웠던 크고 넓은 공간으로 이사하는 것과 같은 중요한 인생 사건들을 미루고 있었습니다. 전통적인 미술을 포함하는 일을 할 때 공간 활용이 많이 필요했기 때문이죠! 우리의 창고 선반은 꽤 혼잡해졌고, 우리의 공간 대부분이 거대한 종이 시트들을 보관하기 위한 공간이 되기 전에는 시간 문제였습니다.\n\n어쨌든, 그럼 이만큼으로 마치겠습니다 - 이 글을 읽어주시고 이 모험을 도와주셔서 모두 정말 감사드립니다. 우리가 어디까지 이끌었는지 정말 행복하고, 여러분이 여기까지 오게 된 유일한 이유가 여러분입니다. 불가능한 기한을 맞닥뜨릴까 걱정할 필요 없이 우리가 하고 싶은 창작 결정을 자유롭게 내릴 수 있는 독립 스튜디오로 계속해서 활동할 수 있음에 대해 정말 감사합니다. Episode 5를 더 많이 공유할 수 있는 그 날을 기다릴 수 없습니다!\n\n그 사이에, 동료들이 안부를 전합니다!\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![이미지](/assets/img/2024-06-19-BlackTabbyGames2024StateoftheUnion_11.png)\n\n모두 좋은 일이 가득하기를 바라며,\n토니와 애비\n","ogImage":{"url":"/assets/img/2024-06-19-BlackTabbyGames2024StateoftheUnion_0.png"},"coverImage":"/assets/img/2024-06-19-BlackTabbyGames2024StateoftheUnion_0.png","tag":["Tech"],"readingTime":19},{"title":"구글 지원자에게 피드백을 줬는데 화를 내더라구요","description":"","date":"2024-06-19 11:37","slug":"2024-06-19-IgaveaGooglecandidatefeedbackandtheygotAngry","content":"\n![Image](/assets/img/2024-06-19-IgaveaGooglecandidatefeedbackandtheygotAngry_0.png)\n\n# 소개\n\n2020년 구글에 합류하여 후보자 인터뷰를 진행하는 방법을 배웠습니다. 일부 후보자들은 수준을 높였으며, 일부 후보자들은 많이 고심했습니다.\n\n인터뷰 대상자에게 피드백을 제공하기 위해 훈련을 받은 후, 한 명의 후보자만이 피드백에 너무 화를 내어 면접 중에 나가버렸습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n나는 그들에게 첫 번째 피드백을 주었어요:\n\n이야기의 나머지를 말하기 전에, 지원자들을 위한 인터뷰 프로세스가 어떻게 이뤄지는지에 대해 이야기해 보겠습니다.\n\n## 온라인 평가\n\n![이미지](/assets/img/2024-06-19-IgaveaGooglecandidatefeedbackandtheygotAngry_1.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n신입사원 및 구글 지원자 중 처음으로 지원하는 분들은 온라인 코딩 평가를 진행하게 됩니다. 여기서의 성적은 단순히 심사 과정이며, 이후 인터뷰 기회에 영향을 미치지 않습니다.\n\n여기서 확인하는 내용은 두 가지뿐입니다:\n\n- 코딩을 할 수 있는가?\n- 빠르게 코딩할 수 있는가?\n\n성공하면 대면 인터뷰로 진행됩니다. 실패하면 데이터 구조와 알고리즘을 계속 공부해야 한다는 뜻입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 전화 인터뷰\n\n<img src=\"/assets/img/2024-06-19-IgaveaGooglecandidatefeedbackandtheygotAngry_2.png\" />\n\n온라인 스크리닝에 통과했다면, 축하해요!\n\n후보자 중 50% 미만이 이 정도까지 올라오는 것이므로, 이 자체가 성취입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n구글의 전화 인터뷰 중 하나는 현장 면접 중 하나가 원격으로 진행됩니다.\n\n지원자는 구글 미트 또는 전화 통화 중 하나를 선택하여 구글 내부 IDE를 사용하여 Googler와 코딩 문제를 해결합니다.\n\n(네, 그들은 구글 문서에서의 인터뷰를 중단했습니다)\n\n이 전화 인터뷰는 현장 면접과 동일한 기준으로 진행됩니다. 후보자가 이를 통과할 수 있다면 현장 면접을 통과할 수 있는 기술을 갖추고 있다는 의도입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n대부분은 그렇지 않아요. 대신 사용할 수 있는 옵션들이 있어요:\n\n- 다시 6개월을 기다려서 지원하기.\n- 리크루터에게 또 다른 기회를 요청하는 이메일 보내기.\n\n다음 단계는 인터뷰 중 가장 어려운 부분이에요. 연이은 5차의 면접이 예정되어 있어요.\n\n# 현장 면접\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n`<img src=\"/assets/img/2024-06-19-IgaveaGooglecandidatefeedbackandtheygotAngry_3.png\" />`\n\n여기까지 온 후보자분들께, 모든 면접관들은 코딩하는 법을 알고 있다고 가정할 것입니다.\n\n이 단계는 다음 주제 중 하나에 대한 5번의 연이어서 진행되는 코딩 면접을 통과하는 것에 관한 것입니다.\n\n- 시스템 디자인\n- 데이터 구조 및 알고리즘\n- 행동 기술 (또는 구글러스)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n거의 아무도 여기까지 오지 못하고 심지어 통과하는 사람은 더 적습니다. 그러나 여기까지 온 누구에게든 데이터 구조와 알고리즘은 후보자들이 실패하는 주요 이유가 아닙니다.\n\n제가 면접자에게 피드백을 주었는데 그들은 기쁘지 않았어요.\n\n제가 피드백을 공유할 수 있었다는 사실에 놀란다면, 다음 이야기에서 어떻게 그렇게 할 수 있었는지 설명하겠습니다.\n\n# 면접관으로 훈련받기.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/assets/img/2024-06-19-IgaveaGooglecandidatefeedbackandtheygotAngry_4.png\" />\n\n구글은 모든 정규직 직원이 직접 속한 팀을 넘어 회사에 영향을 끼치도록 요구합니다.\n\n이는 ERG(다양성, 소속감, 포용성)를 통해 될 수도 있고, 대중을 대상으로 이벤트를 주최하는 것이나, 가장 인기 있는 옵션인 면접관으로 훈련받는 방법일 수 있습니다.\n\n모든 근로자는 후보자를 공정하게 선별하기 위한 온라인 모듈을 수강한 후 경험 있는 면접관을 옆에서 도우며 그 역할에 숙달됩니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이후에는 독립적으로 혼자서 지원자에게 면접을 볼 수 있어요!\n\n다만 지원자보다 면접관이 많아요. (적어도 온사이트에는요)\n\n# 면접 훈련 재사용하기.\n\n그래서 구글은 온사이트 지원자를 직접 면접하는 대신에, 후보자들이 면접 준비할 수 있도록 모의 면접 프로그램을 운영해요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이것은 핸드폰 화면에서 시작되어 온사이트 면접에서도 물을 수 있습니다.\n\n지원자는 모의 면접을 요청하여 구글 면접자가 후보자에게 직접적이고 솔직한 피드백을 제공할 수 있도록 할 수 있습니다. 이게 바로 내가 가입한 것이고 잘 되진 않았어.\n\n코로나 이후 면접자 부족으로 인한 레이오프 중에 온사이트 면접 후보가 되지를 못 했던 것들로, 핸드폰 화면 준비 중인 후보자에게 모의 면접을 요청 받게 되었어.\n\n# 어떻게 시작되고 어떻게 끝났는지.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![2024-06-19-IgaveaGooglecandidatefeedbackandtheygotAngry_5](/assets/img/2024-06-19-IgaveaGooglecandidatefeedbackandtheygotAngry_5.png)\n\nThe mock interview went well. I could tell the candidate had practiced their data structures and algorithms and coded very well.\n\nWhat was missing was the follow-up questions to make their algorithms even more efficient.\n\nThe response from the candidate was:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n후보자에게 솔루션을 개선하도록 요청했지만 수정된 솔루션 없이 막다른 상황에 봉착했습니다.\n\n모의 면접 프로그램을 통해 도움이 되는 조언을 해주고, 면접에서 성공하기 위한 알고리즘보다 자신들을 방해하는 것은 아니라고 전달했어요.\n\n그것은 그들의 태도였죠.\n\n하지만 그걸 공손하게 말하는 것은 쉽지 않아요. 제 직접적인 피드백은 후회되는 부분이에요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n지원자가 이미 해당 주제에 민감하다는 것을 알고 있었기 때문에 자신의 피드백에 동의하는 구글 스킬로 그들을 맹비난할 수 있는 게 더 좋았을지도 모릅니다.\n\n다음 방법으로 작동합니다.\n\n- 후보자에게 진행 상황에 대해 물어봅니다.\n- 그들과 동의하고 그들의 감정을 인정합니다.\n- 어떻게 하면 더 나아질 수 있었는지 물어봅니다.\n- 그들과 동의하고 더 나은 방법을 공유합니다.\n\n하지만 저는 피드백을 너무 빨리 주는 실수를 했고, 그들이 나를 대변하는 기업에 대해 좋지 않은 인상을 갖고 화가 나게 했습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 마무리 글\n\nGoogle에서 면접을 보는 대부분의 지원자들은 코딩을 할 수 있고 데이터 구조와 알고리즘을 연습하는 경우가 많습니다.\n\n지원자의 태도도 후보자가 다음 단계로 진행할지 또는 즉시 탈락할지에 큰 영향을 미칩니다.\n\n# 떠나시기 전에\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 박수 카운터가 50까지 올라갈 수 있다는 것 알고 계셨나요?\n- 내 리트코드 팁\n","ogImage":{"url":"/assets/img/2024-06-19-IgaveaGooglecandidatefeedbackandtheygotAngry_0.png"},"coverImage":"/assets/img/2024-06-19-IgaveaGooglecandidatefeedbackandtheygotAngry_0.png","tag":["Tech"],"readingTime":8},{"title":"프로젝트에 불평하는 것은 개발자에게 좋다","description":"","date":"2024-06-19 11:35","slug":"2024-06-19-ComplainingAboutProjectsisGoodForDevelopers","content":"\n아래는 HTML의 코드를 마크다운 형식으로 바꾼 것입니다.\n\n![image](/assets/img/2024-06-19-ComplainingAboutProjectsisGoodForDevelopers_0.png)\n\n소프트웨어 개발은 어려운 일입니다. 그래서 회사들이 개발자들에게 좋은 돈을 지불하여 소프트웨어를 만들어내게 합니다. 개발자들이 필요한 것은 기술적인 능력 뿐만 아니라, 프로젝트가 뒤처지고 있는 상황에서도 냉정함을 유지하는 능력이 필요합니다.\n\n소프트웨어 개발은 마음, 몸, 기술적인 능력, 정신력을 시험받습니다.\n\n개발자들은 어려운 시기에 어떻게 사기를 유지할까요?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 맨체스터 유나이티드의 영혼\n\n나는 아마존 프라임에서 '99'라는 시리즈를 봤어. 그것은 맨체스터 유나이티드가 트레블을 차지한 이야기로, 맨체스터 유나이티드가 프리미어 리그, FA 컵, 챔피언스 리그를 이기기 위해 마지막 10일 동안을 집중적으로 다룬다.\n\n맨체스터 유나이티드의 훈련 장소인 클리프는 선수, 감독진 및 코치진을 위한 안식처였어. 알렉스 퍼거슨은 각지적인 사령을 만들었어. 그들은 다른 모두에 맞서는 것이었고, 팀을 자극하기 위해 외부 비판을 정기적으로 활용했어 (우리는 그들에게 보여 줄거야는 태도).\n\n조교 매니저인 스티브 맥클라렌은 일요일 아침이 가장 좋은 시간이라고 말했어. 전체 스쿼드가 모여 신문을 읽고 아침을 먹는 시간이었단다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n그들은 논문을 읽고 팀에 대해 읽었다. 이는 팀을 하나로 묶어주며, 다른 사람들에게 자신들이 틀렸다는 것을 보여주도록 동기를 부여합니다.\n\n# 페킹 오더\n\n공격자의 태도는 개발 팀 사이에서 흔히 일어나는 현상입니다. 소프트웨어를 만드는 것은 팀 스포츠이지만 동시에 많은 팀과 많은 게임이 진행됩니다.\n\n기술에 따라 여러 소프트웨어 개발 미니 팀이 있습니다(프로젝트 매니저, BAs, 테스터, 개발자, 사용자 등) 그러나 세 가지 주요 인원 팀이 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 고객\n- 프로젝트 관리\n- 개발\n\n고객 팀은 올바른 소프트웨어를 개발하고 가치를 끌어내며 맞춤 기한을 맞추는 데 중점을 둡니다.\n\n프로젝트 매니저 팀은 상업적인 측면, 프로젝트 기한을 준수하고 고객을 만족시키는 데 중점을 둡니다.\n\n개발 팀은 소프트웨어를 개발하고 기한을 준수하는 데 중점을 둡니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n명확한 계층 구조가 있어요. 고객이 돈을 지불하고 항상 옳다고 여겨져요 (심지어 잘못했을 때도). 프로젝트 팀은 진행 상황을 보고하며 고객을 만족시키는 데 주력해요 (그러면 지불이 이루어지죠).\n\n개발 팀은 가장 아래에 있어요. 가장 적은 권한과 의사 결정권을 가지고 있어요. 아이러니하게도, 소프트웨어를 만드는 건 개발팀 뿐이에요.\n\n이성적인 세계에서는 개발팀의 시간이 가장 중요하고 소프트웨어 프로젝트는 개발팀에게 방해를 최소화하도록 조직화되어야 해요.\n\n돈이 우선이기 때문에 고객과 프로젝트 매니저가 우선 순위를 가지게 돼요. 인센티브가 행동을 이끌어요. 소프트웨어 프로젝트에서 가장 중요한 건 지불 받고 고객을 만족시키는 거죠, 소프트웨어가 아니에요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n소프트웨어 프로젝트는 고객이 투자한 돈과 최신 정보로 만족하도록 하는 목적으로 진행 상황 보고, 진행 상황 제시 및 회의에 중점을 둡니다.\n\n보고 및 계획은 개발팀이 소프트웨어를 생성하는 것을 중지시키고 프로젝트가 지연될 확률을 높입니다. 이를 소프트웨어 개발 보고/개발 역설이라고 말할 수 있습니다.\n\n## 더 자주 그리고 더 잘 보고할수록 고객은 더 만족할 것입니다.\n\n## 더 많이 보고할수록 소프트웨어를 적게 만들게 되고 고객은 덜 만족할 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 개발자들은 최하층에 있어요\n\n개발팀은 최하층에 있고, 문제들은 아래로 떨어지게 되죠.\n\n개발팀은 낙관적이지만 실현 불가능한 계획의 끝에 이르고, 회의와 보고에 시간을 많이 쏟게 됩니다.\n\n요구 사항은 25%에서 50%씩 증가하며(과소 단순화 요소, 판매 가격 및 개발 팀 역량의 과대평가를 추가), 거의 첫 주부터 프로젝트가 계획에 뒤처지기 시작합니다. 낙관적인 계획에 뒤쳐진다는 것은 프로젝트 관리팀과 개발팀에 즉각적인 압박을 가하는 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n프로젝트 관리 팀은 고객을 만족시키기 위해 열심히 노력하고, 고객은 무엇을 제외할 것인지와 같은 어려운 결정을 내려야 합니다.\n\n프로젝트는 어렵습니다. 이로 인해 일정이 지연되거나 비용이 증가하며, 사용자들에게 소프트웨어가 제공될 것이라고 크게 자랑했던 것보다 적게 전달될 수 있습니다.\n\n일반적인 대응 방법은 긴급 회의를 개최하고 개발팀에 더 많이 제공하고 더 빨리 전달하도록 압박하는 것입니다.\n\n대안적인 대응 방법은 더 많은 자원을 추가하여 프로젝트를 더 크고 어렵게 만드는 것입니다. 이는 기대한 것의 두 배가 아닌 소프트웨어가 실제로 4분의 1 증가되지만 비용은 두 배가 들 수 있습니다. 이것이 브룩스의 법칙으로 알려져 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 프로젝트에 더 많은 사람을 추가하는 것이 빨리 진행되는 것은 아닙니다\n- 우리가 IT 프로젝트를 가속화하려고 노력하는 방법 및 그 이유\n- 소프트웨어 개발이 가속화하려고 할 때 왜 느려지는지\n\n위에 언급된 문제들과 더불어 소프트웨어 개발 중 발생할 수 있는 여러 가지 문제들이 있습니다\n\n- 낙관적인 프로젝트 계획\n- 요구 사항 변경\n- 계획 변경\n- 기술적 문제\n- 환경 변화\n- 폐지\n- 인력 이탈\n- 실수\n- 잘못된 소프트웨어 만들기\n- 버그\n\n# 개발자들이 통합하는 방법\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n프로젝트 개발 과정에서는 최고의 소프트웨어를 만들기 위해 노력하는 팀이 있습니다. 그들은 기술적인 도전에 집중하고 있어요.\n\n프로젝트 개발자의 시각은 미래를 내다보듯, 두 그룹의 미친 사람들이 열정을 담아 미친 듯한, 비논리적인 결정을 내리는 과정을 보는 것처럼 느껴집니다. 소프트웨어를 개발하는 데 어렵게 만드는 미친 결정들을 볼 수 있어요.\n\n소프트웨어 프로젝트에서 일어나는 미친 일들을 다 봤다 싶으면, 숨을 멎을 듯한 결정을 닥치게 되는 법입니다. 개발자들은 소프트웨어를 만드는 시각에서만 사고하고, 고객 만족 시각이나 정치적, 감정적인 부분을 고려하지 않아요.\n\n저는 프로젝트가 잘못된 상태에서 일했는데, 프로젝트 매니저들은 고객이 원하는 것을 제공해야 한다고 말했어요. 개발 팀은 고객이 요구사항을 계속 변경해 오류를 더 발생시켜 개발이 각 스프린트마다 더 뒤처지고 있다고 불평했어요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 지시는 상황을 악화시켰어요.\n\n소프트웨어가 마감일을 맞추기 위해 중요한 기능을 삭제한 적이 있어요. 이로써 사용자들이 사용하지 못하는 상태의 소프트웨어가 완성은 되었지만, 시간 내에 전달되었어요.\n\n나중에 나온 릴리스에서 이를 사용할 수 있게 되기까지 추가 3개월이 더 걸렸어요.\n\n개발자의 이미지는 기술 용어로 이야기하는 호기심 많은 사람으로, 작은 어두운 공간에 어울리는 버섯처럼 보이기도 해요. 개발자에게 프로젝트 진행 상황을 물어보면 입을 다물기가 힘들어요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n프로젝트에 대해 이야기하기 위해 몇 사람을 같은 공간에 모아놓고 (특히 술을 한 잔 마시며), 그들은 하고 있는 어리석은 결정과 무의미한 작업을 나열할 것입니다.\n\n토라지고 불평하고 하는 행동은 개발자들이 소프트웨어를 빠르게 만드는 데 도움이 되지는 않지만, 그들이 그렇게 하는 것이 나을 때가 있습니다. 토라는 것이 개발자들을 한 팀으로 결속시키는 데 도움이 됩니다.\n\n어려운 프로젝트는 마른 땅을 걸어다니는 것과 같다고 느껴질 때가 있습니다. 꿀에 덮여 벌에 습격당하는 것처럼 말이죠. 그것은 스트레스를 유발하고 어렵고 보상이나 인정이 거의 없는 일입니다.\n\n좋은 프로젝트에서는 팀의 사기가 뛰어나지만, 어려운 프로젝트에서는 모두가 같이 하고 있으며 모두가 최종 목표에 기여하고 있다고 느끼게 됩니다. 팀 내의 약점은 압박으로 인해 떠날 것이거나 제거될 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n어려웠던 프로젝트를 회고하면서 기분 좋은 추억을 떠올립니다. 이 프로젝트들이 저에게 가장 많은 것을 가르쳐 주었고, 최고의 작업을 하게 해 주었습니다. 어려운 프로젝트는 개발자와 개발 팀이 힘든 상황 속에서 어려운 문제에 대한 해결책을 찾아내도록 격려합니다. 이러한 기술, 지식 및 경험들이 미래 개발에 도움이 되고 경험을 귀중하게 만듭니다.\n\n경험은 개발자들이 이전 실수를 다시 반복하지 않고 성공을 되풀이하는 것을 도와줍니다. 이로써 소프트웨어 프로젝트에 속도를 더해 새로운 문제를 해결하고 실수를 복구할 시간을 제공합니다.\n\n경험이 없는 개발자들은 더 큰 실수 뿐만 아니라 더 많은 실수를 저지를 수 있습니다. 속도 조절 하락은 프로젝트를 위험에 빠뜨릴 정도로 충분합니다.\n\n저는 욕을 하는 것이 지능의 표지이며 고통을 관리하는 데 도움이 된다고 들었습니다! 당신의 입을 조심하지 말라고. 욕은 당신의 건강에 실제로 좋다고 합니다. 긴장을 풀고 감정을 정리하는 데 도움이 될 것이라고 상상할 수 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 너무 많이 한 입을 한다\n\n불평 세션은 생산적일 수 있지만, 작은 양으로는 사기를 파괴할 수 있습니다. 불평은 삶을 더 나아지게 하지 않고 문제를 사라지게도 하지 않는다는 것을 느끼게 합니다.\n\n프로젝트에서 내 목소리를 계속 듣고 똑같은 일에 불평을 하기 지쳤던 적이 있었습니다. 우리 모두가 이게 안 좋다는 걸 알고 있었지만, 좋아지지 않았어요. 뭔가를 바꾸려고 노력했지만 그게 좋아지지 않았을 때는 넘어가야 합니다.\n\n불평은 수동적인 활동입니다. 해결책 없이 문제를 강조합니다. 불평은 상황을 개선하지 못하고 행동만이 상황을 개선할 수 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n제가 좋아하는 해군 출신 Jocko Willink의 책 'Extreme Ownership: How U.S. Navy SEALs Lead and Win'에서의 접근 방식이 좋아요.\n\nWillink의 방식은 상황에 대한 극한 소유권을 취하는 것입니다. 상황을 개선하고 문제를 해결하기 위해 할 수 있는 일에 집중하세요. 자신의 행동에 책임을 질 것이며, 이것은 제어할 수 있는 것입니다.\n\n당신과 개발 팀이 너무 많이 탄식하고 상황에 수동적인 마인드가 되는 것을 피해야 합니다. 모두가 불평을 계속하면 프로젝트에 대한 에너지와 열정을 흡수할 수 있습니다.\n\n# 결론\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n가끔 불평하는 것은 개발 팀을 한데 뭉치게 하고 프로젝트의 긴장을 풀어주는 데 도움이 될 수 있어요.\n\n또한 개발 팀의 각 구성원이 자신의 일을 잘하고 서로 도와주는 것도 중요해요. 개발 팀의 힘은 각자가 가진 독특한 기술, 지식, 경험 및 시각에서 오는 다양성에 있어요.\n\n관심은 있되 과하지 않도록 해요. 소프트웨어 프로젝트는 당신을 흡수하고 데드라인을 맞추기 위해 시간 외에도 일하도록 압박을 줄 수 있어요. 이는 예외적인 상황이어야 하며 규칙이 돼선 안 돼요. 만약 꾸준히 작업 시간을 넘어 일하고 있다면 무언가 잘못됐다는 신호일 수 있고, 과로로 이어질 수 있어요. 달리기 마라톤을 빨리 뛸 수 없어요.\n\n일 외에도 생활이 중요해요. 그렇게 해야만 휴식을 취하고 회복할 수 있어요. 소프트웨어 개발은 창의적인 작업이기 때문에 여러분의 사고의 품질에 기대지고 있어요. 소프트웨어 개발은 표준 위젯을 그냥 쉽게 만들어내는 개발자의 업무가 아니에요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 다음에 읽을 것들\n\n- 개발자들은 코드를 작성하는 데 얼마나 시간을 보낼까요?\n- 소프트웨어 개발은 패자의 게임입니다\n- 프로젝트에서 예상치 못한 문제가 가장 큰 방해요소입니다\n","ogImage":{"url":"/assets/img/2024-06-19-ComplainingAboutProjectsisGoodForDevelopers_0.png"},"coverImage":"/assets/img/2024-06-19-ComplainingAboutProjectsisGoodForDevelopers_0.png","tag":["Tech"],"readingTime":10},{"title":"인스타그램 아키텍처를 활용한 시스템 디자인 이해하기 ","description":"","date":"2024-06-19 11:33","slug":"2024-06-19-UnderstandingSystemDesignusingInstagramsArchitecture","content":"\n시스템 디자인은 소프트웨어 엔지니어에게 중요한 기술이에요, 특히 직무 면접 중에요. 이는 중요한 개념을 이해하고 실전 상황에서 제한 사항과 함께 활용할 수 있는 능력을 시험해요. 시스템 디자인을 마스터하려면 서로 다른 구성 요소와 그들이 어떻게 작동하여 확장 가능하고 신뢰성 있고 유지보수가 쉬운 시스템을 구축하는지 이해해야 해요. 이 안내서는 시스템 디자인의 중요성을 설명하고 시스템 아키텍처의 세부적인 분석을 제공할 거에요: Instagram! 🚀\n\n![시스템디자인](/assets/img/2024-06-19-UnderstandingSystemDesignusingInstagramsArchitecture_0.png)\n\n## 시스템 디자인이란? 💡\n\n시스템 디자인은 시스템이 어떻게 작동할지 계획하는 것이에요. 전반적인 구조, 개별 부분, 상호 작용 방식, 사용하는 데이터를 결정하는 것을 포함해요. 이 과정은 시스템 내 모든 요소가 특정 기능, 성능, 확장성 및 신뢰성을 충족하기 위해 잘 작동하는지 확인해요. 이는 고수준 아키텍처적 결정(큰 그림)뿐만 아니라 전체 시스템이 원활하게 실행되도록 상세한 저수준 구성 요소를 포함해요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 시스템 설계가 왜 중요한가요?\n\n시스템 설계는 수백만 명의 사용자를 처리하면서도 원활하게 작동하고 신뢰할 수 있는 앱을 만드는 데 필수적입니다. 중요한 결정을 내려 구조, 기술 스택 및 설계 방법에 대해 고민해야 합니다. 시스템 설계 인터뷰는 이러한 선택 사항을 얼마나 잘 분석하고 효율적이고 확장 가능하며 신뢰할 수 있는 시스템을 만들 수 있는지를 테스트합니다.\n\n## 정복해야 할 주요 개념:\n\n시스템 설계를 다루기 전에 이러한 기본 개념을 숙지하는 것이 중요합니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 도메인 이름 시스템 (DNS): 글로벌 접근성을 위해 도메인 이름을 IP 주소로 변환합니다.\n- 로드 밸런서: 다수의 서버로 들어오는 네트워크 트래픽을 분산하여 높은 가용성과 성능을 보장합니다.\n- API 게이트웨이: 다양한 마이크로서비스들을 위한 통합된 입구를 제공하여 통신과 관리를 간편하게 합니다.\n- CDN (콘텐츠 전송 네트워크): 사용자에게 더 가까운 곳에 콘텐츠를 캐싱함으로써 전 세계적으로 미디어 콘텐츠를 낮은 지연 시간으로 제공합니다.\n- 포워드 프록시 vs 리버스 프록시: 보안과 성능을 위해 클라이언트와 서버 사이 (포워드) 또는 서버와 클라이언트 사이 (리버스)에서 요청을 관리합니다.\n- 캐싱: 자주 액세스되는 데이터를 저장하여 지연 시간을 줄이고 성능을 향상시킵니다.\n- 데이터 파티셔닝: 대량의 데이터를 효율적으로 처리하기 위해 데이터 세트를 여러 기기에 분할합니다.\n- 데이터베이스 복제: 여러 서버 간에 데이터를 복제하여 가용성과 내고장 허용성을 보장합니다.\n- 분산 메시징 시스템: 실시간 데이터 처리를 위해 분산된 응용 프로그램 간 통신을 지원합니다.\n- 마이크로서비스: 독립적으로 개발, 배포 및 확장할 수 있는 작은 서비스로 구성된 아키텍처 스타일입니다.\n- 데이터베이스: 구조화된(SQL) 또는 비구조화된(NoSQL) 방식으로 데이터를 저장하여 다양한 유형의 데이터를 처리하는 확장성과 유연성을 제공합니다.\n- 데이터베이스 색인화: 빠른 데이터 검색을 가능케 하여 쿼리 성능을 향상시킵니다.\n- 분산 파일 시스템: 확장성과 신뢰성을 위해 네트워크의 여러 노드에 걸쳐 저장소를 관리합니다.\n- 알림 시스템: 사용자나 다른 시스템에 이벤트를 알리기 위해 경보 또는 메시지를 전송합니다.\n- 전체 텍스트 검색: 대량의 텍스트 데이터에 대한 효율적인 검색 기능을 제공합니다.\n- 하트비트: 서비스나 노드의 생존 여부를 점검하여 실행 중이고 이용 가능한지 확인합니다.\n\n## 시스템 디자인 인터뷰에서 뛰어나기 위한 전략 💯\n\n1. 요구 사항 이해 및 명확화:\n   — 기능 요구 사항: 시스템이 수행해야 하는 주요 기능을 파악합니다. 인스타그램의 경우 사진 업로드, 게시물 좋아요 및 댓글 작성, 다른 사용자 팔로우, 사용자 정의 피드 생성 등을 의미합니다.\n   — 비기능 요구 사항: 확장성, 신뢰성, 가용성, 성능, 일관성, 보안, 유지 관리를 포함합니다.\n\n2. 부하 및 트래픽 예상: 시스템을 사용할 사용자 수, 정보를 추가하거나 가져올 때의 속도, 모든 데이터를 저장하는 데 필요한 공간, 필요한 인터넷 용량 등을 파악합니다. 이 정보는 예상 활동량을 관리할 수 있는 시스템을 디자인하는 데 중요합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n3. 데이터 흐름과 아키텍처 설계: 시스템이 어떻게 작동하는지 보여주는 다이어그램을 만드세요. 중요한 부분을 강조하고 서로 어떻게 작동하는지 알려주세요. 이렇게 하면 설계를 더 명확하게 설명할 수 있습니다.\n\n4. 적절한 기술 선택: 필요한 것과 일치하는 데이터베이스, 캐싱 시스템, 부하 분산 장치 및 기타 기술을 선택하세요.\n\n5. 트레이드오프 논의: 설계 결정에서 한 트레이드오프를 설명하세요. 시스템이 얼마나 일관적인지 대비 가능한지, 대답 속도와 한 번에 처리할 수 있는 작업 양을 균형있게 고려하고, 복잡성 대비 사용하기 쉽고 이해하기 쉬운 정도에 대해 이야기해주세요.\n\n6. 반복 및 최적화: 고수준 설계로 시작하여 단계별로 개선하세요. 피드백과 추가 요구사항에 따라 최적화하세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# Instagram 시스템 디자인\n\n이제 Instagram의 아키텍처에 대해 자세히 살펴보겠습니다:\n\n![이미지](/assets/img/2024-06-19-UnderstandingSystemDesignusingInstagramsArchitecture_1.png)\n\n## 기능 요구 사항:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 포스트 서비스: 사용자가 포스트를 업로드하고 가져올 수 있습니다.\n- 좋아요/댓글 서비스: 포스트의 좋아요와 댓글을 관리합니다.\n- 팔로우 서비스: 팔로우 및 언팔로우 작업을 처리하고 팔로워 데이터를 검색합니다.\n- 피드 생성 서비스: 사용자에게 맞춤형 피드를 생성합니다.\n- 메시징 서비스: 사용자가 직접 메시지를 보내고 받을 수 있습니다.\n- 알림 서비스: 사용자가 좋아요, 댓글, 팔로우 및 직접 메시지에 대한 알림을 받습니다.\n- 검색 서비스: 사용자가 다른 사용자, 해시태그 및 위치를 검색할 수 있습니다.\n\n## 비기능 요구사항:\n\n- 확장성: 시스템은 수백만 명의 사용자를 지원하고 그들의 상호 작용을 처리해야 합니다.\n- 신뢰성: 고가용성 및 내결함성이 필수적입니다.\n- 가용성: 시스템은 높은 업타임(99.9% 이상)을 가져야 합니다.\n- 성능: 포스팅, 포스트 가져오기 및 피드 생성에 대한 빠른 응답 시간을 보장해야 합니다.\n- 일관성: 좋아요, 댓글, 팔로우 및 포스트 간 데이터 일관성을 보장해야 합니다.\n- 보안: 시스템은 사용자 데이터와 개인 정보를 보호해야 합니다.\n\n## 추정:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 사용자 기반: 매일 활동하는 5억 명의 사용자를 가정합니다.\n- 초당 게시물: 초당 5,000개의 게시물을 추정합니다.\n- 초당 좋아요/댓글: 초당 50,000개의 좋아요와 댓글을 추정합니다.\n- 팔로워 검색: 초당 10,000개의 팔로워 검색 요청을 추정합니다.\n- 피드 요청: 초당 50,000개의 피드 요청을 가정합니다.\n- 초당 검색 쿼리: 초당 20,000개의 검색 쿼리를 추정합니다.\n- 초당 메시지: 초당 15,000개의 메시지를 발송하는 것을 추정합니다.\n\n## 아키텍처 구성 요소:\n\n1. 사용자: 사용자들은 기기를 통해 응용 프로그램과 상호 작용합니다. 사용자들은 응용 프로그램을 통해 게시, 좋아요, 댓글 및 팔로우와 같은 작업을 수행합니다.\n\n2. 부하 분산기: 단일 서버가 병목현상을 일으키는 것을 방지하기 위해 들어오는 요청을 여러 서버로 분산합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n3. API Gateway: 모든 클라이언트 요청의 입구 역할을 합니다. 인증, 요청 속도 제한 및 적절한 서비스로 요청을 라우팅합니다.\n\n4. 인증 및 요청 속도 제한: 인증된 사용자만 서비스에 액세스할 수 있도록 보장하고, 요청의 수를 제한하여 남용을 방지합니다.\n\n5. 앱 서버 (읽기): 대량의 읽기 작업을 처리하기에 최적화되어 있습니다. 게시물, 댓글, 좋아요, 팔로워, 피드 생성, 검색 쿼리 및 메시지 검색을 위한 요청을 라우팅합니다.\n\n6. 앱 서버 (쓰기): 대량의 쓰기 작업을 처리하기에 최적화되어 있습니다. 게시물 작성, 좋아요 및 댓글 추가, 사용자 팔로우/언팔로우, 메시지 전송, 사용자 데이터 업데이트를 위한 요청을 라우팅합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n7. Redis: 자주 액세스되는 데이터를 저장하는 캐싱 계층으로 작용하여 데이터베이스 부하를 줄이고 응답 시간을 향상시킵니다.\n\n8. 데이터베이스: 사용자 정보, 게시물, 좋아요, 댓글 및 팔로우 데이터를 포함한 모든 영구 데이터를 저장합니다. 데이터베이스는 높은 읽기 및 쓰기 처리량을 지원해야 합니다. (각 서비스의 특정 요구 사항에 따라 더 효율적인 처리를 위해 별도의 데이터베이스를 만들 수 있습니다)\n\n9. Blob Storage: 이미지와 비디오와 같은 대형 이진 객체을 저장합니다. 이미지 및 비디오를 효율적으로 저장하고 배포하여 빠르고 안정적인 미디어 콘텐츠 액세스를 보장합니다.\n\n10. CDN (콘텐츠 전송 네트워크): 이미지 및 비디오를 전 세계적으로 배포하여 전 세계 사용자에 대한 빠른 액세스와 지연 시간을 줄입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n11. 포스트 서비스: 게시물의 생성 및 검색을 관리합니다. 포스트 데이터를 데이터베이스 및 블롭 저장소에 작성하고, 피드 생성 서비스를 업데이트합니다.\n\n12. 좋아요/댓글 서비스: 게시물에 대한 좋아요 및 댓글을 처리합니다. 데이터베이스를 업데이트하고, 피드 생성 서비스에 피드를 새로 고침하도록 알립니다.\n\n13. 팔로우 서비스: 팔로우 및 언팔로우 작업을 관리합니다. 데이터베이스와 피드 생성 서비스에서 팔로우 데이터를 업데이트합니다.\n\n14. 피드 생성 서비스: 사용자의 팔로우 데이터와 상호 작용을 기반으로 개인화된 피드를 생성하고 제공합니다. Redis 및 데이터베이스에서 데이터를 읽어 효율적으로 피드를 생성합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n15. 알림 서비스: 새로운 팔로워, 좋아요 및 댓글과 같은 사용자 활동에 대한 실시간 알림을 전송합니다.\n\n16. 검색 서비스: 게시물, 사용자 및 해시태그에 대한 사용자 검색 쿼리를 처리합니다. 자주 액세스되는 데이터에는 Redis를 활용하고, 드물게 발생하는 쿼리에 대해서는 데이터베이스를 사용합니다. 검색 결과가 최신이며 정확하도록 관리합니다.\n\n17. 메시징 서비스: 사용자 간 실시간 메시징을 가능하게 합니다. 메시지 저장을 위해 전용 데이터베이스를 사용하고, 즉각적인 전달과 알림을 보장하기 위해 실시간 메시징 인프라를 활용합니다.\n\n이러한 구성 요소 및 상호 작용을 이해하면 대규모 응용 프로그램을 위한 견고하고 확장 가능하며 효율적인 시스템을 설계할 수 있습니다. 이러한 아키텍처를 통해 인스타그램은 수백만 명의 사용자를 처리하고 콘텐츠에 빠르고 안정적으로 액세스할 수 있으며 높은 가용성과 성능을 유지할 수 있습니다. 각 구성 요소는 내결함성이 있으며 독립적으로 확장 가능하며 특정 작업 처리에 효율적으로 설계되었습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 결론\n\n시스템 디자인 면접을 성공적으로 통과하기 위해서는 구조적인 원리에 대한 탄탅한 이해, 복잡한 요구사항을 분해하는 능력, 그리고 합리적인 디자인 결정을 내릴 수 있는 기술이 필요합니다. 체계적인 접근 방식을 따르고 현실 세계의 예시를 활용함으로써, 확장 가능하고 효율적인 시스템을 디자인할 수 있는 능력을 보여줄 수 있습니다. 연습이 중요하니, 다양한 디자인 문제에 도전하여 스킬을 향상시키세요.\n\nP.S: 학습 과정 동안 메모를 계속 쌓아왔어요. 본 글이 시스템 디자인에 대해 더 잘 이해하는 데 도움이 되길 바랍니다. 직접 시스템을 디자인하는 과정을 즐기세요! :D\n","ogImage":{"url":"/assets/img/2024-06-19-UnderstandingSystemDesignusingInstagramsArchitecture_0.png"},"coverImage":"/assets/img/2024-06-19-UnderstandingSystemDesignusingInstagramsArchitecture_0.png","tag":["Tech"],"readingTime":9},{"title":"구조화된 복제 JavaScript에서 객체를 깊은 복사하는 가장 쉬운 방법","description":"","date":"2024-06-19 11:33","slug":"2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript","content":"\n깊은 복사는 데이터를 전달하거나 저장하기 위한 정기적인 프로그래밍 작업입니다.\n\n- Shallow copy: 객체의 첫 번째 수준만 복사합니다.\n- Deep copy: 객체의 모든 수준을 복사합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n하지만 이 시간 동안 완벽한 객체 깊은 복사를 위한 내장 방법이 없었고, 신경 써야 했어요.\n\n우리는 항상 서드파티 라이브러리를 의존하여 깊은 복사와 순환 참조를 유지해야 했어요.\n\n지금은 새로운 structuredClone()을 통해 모든 객체를 깊은 복사할 수 있는 쉽고 효율적인 방법이 생겼어요.\n\n![image](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_2.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n쉽게 순환 참조를 복제하고 있어요:\n\n![이미지](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_3.png)\n\nJSON stringify/parse 트릭으로는 할 수 없었던 작업이예요:\n\n![이미지](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_4.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n깊게 들어가 보세요:\n\n![image](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_5.png)\n\n## 알아야 할 제한 사항\n\nstructuredClone()은 매우 강력하지만 알아야 할 중요한 약점이 있습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 함수나 메소드를 복제할 수 없어요\n\n![이미지](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_6.png)\n\n사용하는 특별한 알고리즘 덕분이에요.\n\n![이미지](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_7.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# DOM 요소를 클론할 수 없어요\n\n![이미지1](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_8.png)\n\n![이미지2](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_9.png)\n\n![이미지3](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_10.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# RegExp의 lastIndex 속성을 보존하지 않음\n\n말 그대로, 누가 정규식을 복제하겠어요. 하지만 하나 주목할 점은:\n\n![이미지](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_11.png)\n\n# 다른 제한 사항\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n함수를 사용할 때 예기치 않은 동작을 피하기 위해 그것들을 인지하는 것이 중요합니다.\n\n## 일부 복제하고 이동하기\n\n이것은 좀 더 복잡한 것입니다.\n\n원본에서 클론으로 내부 객체를 복사하는 대신 이동시킵니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n해석 결과에 더 이상 수정할 내용이 없습니다. 해당 내용은 다음과 같습니다:\n\n![image](/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_12.png)\n\nstructuredClone()는 JavaScript 개발자의 도구상자에 속한 귀중한 요소로, 객체 복제를 이전보다 쉽게 만들어줍니다.\n","ogImage":{"url":"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_0.png"},"coverImage":"/assets/img/2024-06-19-structuredCloneTheeasiestwaytodeepcopyobjectsinJavaScript_0.png","tag":["Tech"],"readingTime":5},{"title":"애자일 방법론의 실패률이 268 높다고요","description":"","date":"2024-06-19 11:31","slug":"2024-06-19-268HigherFailureRatesforAgileRight","content":"\n이 기사의 동기는 다음 글에서 비롯되었습니다:\n\n솔직히 말하면, 전체 내용을 읽을 수밖에 없어서 그랬어요. 주요 이유는 결론이 나를 깜짝 놀라게 한 것입니다. 제 고유의 편견도 상당한 역할을 했다고 인정해야 합니다. 제 경험과 이전 지식이 그 반대를 시사했을 때 놀랐습니다. 그러나 반복적으로 난관을 겪는 기업들이 애자일을 도입하려 들고 있는 것을 관찰했고, 부분적 도입이 전혀 없는 것보다 나쁠 수 있다는 것을 알게 되었습니다. 그렇다면, 이 기사는 어떠한 새로운 통찰을 제공할까요?\n\n# 영향 공학\n\n먼저 알아야 할 사실은, 이 기사가 사실상 책 'Impact Engineering'의 홍보 자료라는 것입니다. 이것은 주황색 깃발이 될 수 있지만, 이는 내용을 자동으로 차단하지는 않습니다. 이 책이 홍보하는 방법론 개발 과정에서 준아데 알리가 중요한 발견을 했을 수도 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n그리고 실제로, 이전에 본 적이 있어서 일부로 관심을 끌었던 것이 있었습니다:\n\n이것은 몇 년 동안의 나의 관찰과 일치합니다. 많은 조직이 Agile를 채택하려고 시도했지만 중도에 멈추는 것을 보았습니다. 이상적인 계획과 절대적인 통제에 대한 폭포수 습관을 버리는 마지막 단계가 불가능한 꿈인 것처럼 보이고, 동시에 Agile는 뛰어난 유연성과 기본기를 갖춘 높은 성과 팀을 필요로 합니다.\n\n그렇다면 우리는 높은 성과를 낼 수 있는 사람이 아닌 사람이 있음을 받아들여야 할까요? 모두가 리오넬 메시나 마이클 조던이 아니라고 말하듯이, 맞나요? 그렇다면, Agile가 초월적인 팀에게만 효과적인, 모두를 위해 적합하지 않은 원치 않는 꿈이라는 결론이 가능한가요?\n\n# 메트릭\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n'영향 엔지니어링'이 어떻게 작동하는지에 대한 명확한 설명이 없지만, 지표들은 주로 집중해야 할 방향을 제시하는 것으로 보입니다:\n\n- 명확한 요구 사항: 개발 전에 명확하게 정의된 요구 사항을 가진 프로젝트는 성공할 가능성이 더 높습니다.\n- 심리적 안전감: 소프트웨어 엔지니어가 문제를 빠르게 논의하고 해결할 수 있는 안전한 환경에서는 성공률이 더 높습니다.\n- 현실 세계적 중요성: 현실의 문제를 기반으로 하는 프로젝트는 더 성공할 가능성이 높습니다.\n- 문서화: 개발이 시작되기 전에 완전한 명세 또는 요구 사항 문서를 갖는 것도 성공 가능성을 높입니다.\n- 지연된 변경 사항 없음: 개발 프로세스 후반에 중요한 변경 사항을 피하는 것은 성공률을 약간 향상시킵니다.\n\n따라서, 애자일 방법론이 성공할 수 있는 영역과 그렇지 않을 수 있는 영역이 존재한다는 점을 알 수 있습니다. 심리적 안전감 관련하여 애자일이 이를 100% 지원한다는 것은 명확하지만, 메트릭에서 이를 반영하면 애자일을 시도하는 회사들이 이 측면에서 실패하고 있는 것으로 보입니다. 반면, 선호를 표현하더라도 다른 세 가지 애자일 가치 - ‘체계적인 문서보다 실행 중인 소프트웨어', ‘계약 협상보다 고객 협력', '계획 따르기보다 변화에 대응하기’ -은 부담스럽고 재검토가 필요할 수 있습니다.\n\n# 실패\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n모든 지표는 실패 비율을 측정하며, 이곳에 핵심 질문이 있습니다: 실패가 어떻게 정의되는가?\n\n전체 기사를 찾아보았지만 명확한 정의를 찾을 수 없었습니다.\n\n실패 비율이 어떻게 정의되는지 이해하는 데 제일 가까운 것은 책 저자의 인용구를 기사의 결과 차트와 교차 참조한 것이었습니다. 인용구는 \"Agile 관행을 채택한 프로젝트 중 65%가 제때 전달되지 못하면서, Agile의 붐 주의에 대해 의문을 제기할 시간이다.\"라고 말합니다. 결과 차트에는 \"Agile 요구 사항 엔지니어링(개발이 명확한 요구 사항 전에 시작됨, 완전한 명세서 없음, 개발 후반부에 중요한 변경 발생)\"의 \"실패 비율\"인 65%가 나와 있습니다. 따라서, 실패는 \"납기 미달\"로 정의된다고 결론을 내리는 것이 맞다고 생각합니다.\n\n이에 대해 몇 가지 의문이 듭니다. 이 연구에서 새로운 정보에 적응하지 못하는 것을 실패로 간주합니다. 이게 어떤 뜻인가요? 제품을 전달하기 전에 모든 것을 예측할 수 있다고 가정하는 건가요? 모든 것을 자세히 예측하는 비용이 초기 프로토타입을 만들고 테스트하는 비용보다 낮다고 가정하는 건가요? 그렇다면 시장 조사는 대안들보다 더 저렴하고 정확한가요?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n위 내용을 보면 저자가 새로운 사실이 발견될 때 적응하지 못하는 능력을 긍정적인 특성으로 측정하는 것인지 궁금해집니다. 또는 저자의 비유를 따라, 금연 실패를 측정하는 것일까요? — 금연을 하지 못하기 때문에, 이 사실을 인정하고 최고의 흡연자가 되기 위해 최선을 다해야 합니다.\n\n# 숫자들\n\n해당 연구의 또 다른 주황색 신호는 참가자 수가 비교적 적다는 것입니다. 구체적으로, \"마지막으로 성공한 프로젝트를 경험한 481명의 소프트웨어 엔지니어와 마지막으로 실패한 프로젝트를 경험한 119명\"으로 기사에 따르면 정확히 600명의 참가자가 있습니다. 산업 다변화 정도, 모든 프로젝트가 특정 유형인지, 그리고 질문들이 어떻게 로딩되었는지가 명확하지 않습니다. 게다가 이 분배를 살펴본다면 대부분의 엔지니어가 성공적이었지만 대부분의 Agile 프로젝트가 실패했다고 보고했습니다. 따라서 산업에서 Agile이 상당한 비중을 차지하고 있음에도 불구하고, 그들은 관련 통계적 표현과 함께 데이터 수집을 보장하지 않았습니다. 따라서 정확히 600명의 소프트웨어 엔지니어 참가는 상당히 존경받을만하지만 대표적이라고 말할 수는 없습니다.\n\n비교적 다른 결과를 보여주며 훨씬 튼튼한 기초를 갖춘 두 가지 다른 연구가 있습니다. 그 중 하나는 훌륭한 방법론을 갖추고 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n가장 잘 알려진 보고서 중 하나는 Standish Group의 CHAOS 보고서입니다. 이 보고서는 1만 건 이상의 소프트웨어 프로젝트(프로젝트, 소프트웨어 엔지니어가 아닌)를 기반으로 하며, 작은 프로젝트에서 애자일이 50% 이상의 성공률을 보여줍니다. 사실, 자세히 보면 프로젝트의 크기가 가장 중요한 요소임을 알 수 있습니다. 프로젝트가 클수록 실패 가능성이 높아집니다. 따라서, 애자일이 프로젝트를 작은 단위로 나누어 서로 연계되는 작은 결과물을 만드는 아이디어는 훨씬 더 나은 결과를 제공합니다. CHAOS 보고서 2015를 참조하세요.\n\n가장 주목할 만한 것은 물론 \"가속화\"라는 책에서 세부적으로 설명되어 있는 DORA 지표입니다. Nicole Forsgren이 쓴 이 책은 2014년부터 매년 수행되고 있으며, 매년 약 3만명의 참가자로부터 정보를 수집합니다. 이전 지표들과 달리, 프로젝트의 성공 또는 실패를 논의하는 대신 네 가지 실질적인 목표 지표를 설정합니다. 제공하는 결론 중 하나는 애자일 중 하나인 지속적인 전달이 최상의 결과를 제공한다는 것입니다. 보고서와 방법론은 여기서 확인하세요.\n\n# 습관\n\n\"충격 공학\" 저자의 방식으로, 기사를 시작할 때 우리는 습관을 바꿀 수 없다는 접근을 제안합니다. 이는 체중 감량이나 흡연을 그만두는 것이 어렵듯이, 폭포수 방법론을 따르는 본능을 버리는 것도 똑같이 어렵다는 것을 시사하는 것 같습니다. 이 경우에는 제안된 폭포수 개념을 다시 검토하는 것이 합리적입니다. 우리는 현실적이어야 하며, 변화할 의지가 없거나 의지가 부족하다면, 그것을 받아들이고 우리 자신에게 적응하는 것이 더 나을 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n그러나 다른 접근 방식이 있습니다.\n\n환경을 변경하세요.\n\n이 아이디어는 DORA 지표의 결과와 일치합니다. 사람을 바꾸려는 대신 환경을 바꿀 수 있습니다. 사람들은 환경에 적응합니다. 예를 들어, 금연령령은 환경을 바꿔서 흡연자들이 더 적게 피우거나 전혀 그만두도록 적응해야 했습니다. 침대옆 탁자에 책을 두는 등 작은 행동은 읽는 습관을 되찾도록 도와줄 수 있습니다. 이것은 소프트웨어 개발에도 적용할 수 있습니다. 우리는 습관을 바꾸기 위해 환경을 조정할 수 있는데, 경쟁력이 떨어지는 방법론에 안주할 필요는 없습니다.\n\n환경을 변경하고 그 효과에 대해 거의 1년 전에 다른 이야기에서 썼습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n감사합니다. 보통 소프트웨어 엔지니어링을 이해하고 적용하는 방법에 대해 생각하면서 이야기를 쓰는 것을 좋아해요. 무엇을 개선할 수 있는지 고민하게 만들기도 해요. 만약 기사가 마음에 드셨다면 박수를 치거나 댓글을 남겨주세요. 더 많은 통찰과 토론을 위해 제 매체에서 가장 성공적인 이야기들을 둘러보세요.\n","ogImage":{"url":"/assets/img/2024-06-19-268HigherFailureRatesforAgileRight_0.png"},"coverImage":"/assets/img/2024-06-19-268HigherFailureRatesforAgileRight_0.png","tag":["Tech"],"readingTime":6}],"page":"42","totalPageCount":116,"totalPageGroupCount":6,"lastPageGroup":20,"currentPageGroup":2},"__N_SSG":true}
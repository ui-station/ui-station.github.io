{"pageProps":{"post":{"title":"독일 텔레콤 디지털 iOS 개발자 인터뷰 경험","description":"","date":"2024-05-17 17:55","slug":"2024-05-17-DeutscheTelekomdigitalIosdeveloperInterviewExperience","content":"\n\n<img src=\"/assets/img/2024-05-17-DeutscheTelekomdigitalIosdeveloperInterviewExperience_0.png\" />\n\n- 첫 번째 라운드\n\n아이폰 및 Swift 기초에 관련된 25개의 객관식 문제로 이루어진 온라인 테스트였어요.\n\n2. 사무실에서의 면접\n\n<div class=\"content-ad\"></div>\n\nRound 1: 기술 면접\n\nQ: struct와 class의 차이점은 무엇인가요? 왜 struct는 가볍고 성능이 좋은가요?\n\nQ: Swift에서의 메모리 할당은 어떻게 이루어지나요?\n\nQ: 코드 예시와 함께 클로저에 대해 설명해주세요\n\n<div class=\"content-ad\"></div>\n\n다음은 한국어로 번역된 정보입니다:\n\nQ: 클래스 및 구조체 출력 질문\n\nQ: 클로저 이스케이핑\nQ: 알 수 없는 변수\n\nQ: final 및 static은 무엇인가요?\n\nQ: iOS에서 프레임워크와 모듈은 무엇인가요?\nQ: 프로토콜과 델리게이트\n\n<div class=\"content-ad\"></div>\n\nRound 2: 기술 면접\nQ: 클래스 대 구조체\nQ: 구조체가 가벼운 이유\nQ: Combine 프레임워크란 무엇인가요?\nQ: 프로토콜 기반 프로그래밍이 무엇인가요?\nQ: Swift UI의 기본\nQ: MVVM\n\n<div class=\"content-ad\"></div>\n\nQ: 제품에 관한 기본 앱을 디자인해 보세요. 한 화면에는 모든 제품의 목록이 표시되고, 다른 화면에는 제품의 상세 내용이 표시되어야 합니다. (MVVM)\n\nQ: 프로토콜 및 델리게이트\n\nQ: 동시성, 멀티스레딩\n\nQ: 글로벌 비동기 및 동기 출력 질문\nQ: async await 키워드\n\n<div class=\"content-ad\"></div>\n\n**라운드 3: 관리직 면접**\n\n그걸로 선택되지 않았어요 😭","ogImage":{"url":"/assets/img/2024-05-17-DeutscheTelekomdigitalIosdeveloperInterviewExperience_0.png"},"coverImage":"/assets/img/2024-05-17-DeutscheTelekomdigitalIosdeveloperInterviewExperience_0.png","tag":["Tech"],"readingTime":1},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\",\n    ol: \"ol\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"img\", {\n      src: \"/assets/img/2024-05-17-DeutscheTelekomdigitalIosdeveloperInterviewExperience_0.png\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"첫 번째 라운드\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"아이폰 및 Swift 기초에 관련된 25개의 객관식 문제로 이루어진 온라인 테스트였어요.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"사무실에서의 면접\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Round 1: 기술 면접\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Q: struct와 class의 차이점은 무엇인가요? 왜 struct는 가볍고 성능이 좋은가요?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Q: Swift에서의 메모리 할당은 어떻게 이루어지나요?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Q: 코드 예시와 함께 클로저에 대해 설명해주세요\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음은 한국어로 번역된 정보입니다:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Q: 클래스 및 구조체 출력 질문\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Q: 클로저 이스케이핑\\nQ: 알 수 없는 변수\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Q: final 및 static은 무엇인가요?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Q: iOS에서 프레임워크와 모듈은 무엇인가요?\\nQ: 프로토콜과 델리게이트\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Round 2: 기술 면접\\nQ: 클래스 대 구조체\\nQ: 구조체가 가벼운 이유\\nQ: Combine 프레임워크란 무엇인가요?\\nQ: 프로토콜 기반 프로그래밍이 무엇인가요?\\nQ: Swift UI의 기본\\nQ: MVVM\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Q: 제품에 관한 기본 앱을 디자인해 보세요. 한 화면에는 모든 제품의 목록이 표시되고, 다른 화면에는 제품의 상세 내용이 표시되어야 합니다. (MVVM)\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Q: 프로토콜 및 델리게이트\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Q: 동시성, 멀티스레딩\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Q: 글로벌 비동기 및 동기 출력 질문\\nQ: async await 키워드\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"라운드 3: 관리직 면접\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그걸로 선택되지 않았어요 😭\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}
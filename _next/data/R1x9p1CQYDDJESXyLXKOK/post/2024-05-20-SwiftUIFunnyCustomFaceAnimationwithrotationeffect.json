{"pageProps":{"post":{"title":"SwiftUI 웃기고 독특한 사용자 정의 얼굴 애니메이션 회전 효과","description":"","date":"2024-05-20 16:11","slug":"2024-05-20-SwiftUIFunnyCustomFaceAnimationwithrotationeffect","content":"\n\n\n![Funny Custom Face Animation](/assets/img/2024-05-20-SwiftUIFunnyCustomFaceAnimationwithrotationeffect_0.png)\n\n저는 원형과 둥근 직사각형 같은 형태를 사용하여 사용자 정의 얼굴을 만들어보았어요. 눈이 회전하는 애니메이션도 추가했답니다.\n\n```swift\nstruct FunnyFaceView: View {\n    \n    // MARK: - 속성\n    @State private var isRotate: Bool = false\n    @State private var rotationAngle: Double = 0\n    \n    // MARK: - Body\n    var body: some View {\n        ZStack {\n            faceView()\n            facePartsView()\n        }\n        .onAppear {\n            withAnimation(Animation.linear(duration: 1).repeatForever(autoreverses: false)) {\n                rotationAngle = 360\n            }\n        }\n    }\n}\n\nextension FunnyFaceView {\n    \n    @ViewBuilder\n    private func faceView() -> some View {\n        Circle()\n            .fill(Color.yellow)\n            .frame(width: 300, height: 300)\n    }\n    \n    @ViewBuilder\n    private func facePartsView() -> some View {\n        VStack {\n            eyesView()\n            mouthView()\n        }\n    }\n    \n    @ViewBuilder\n    private func eyesView() -> some View {\n        HStack {\n            eyeView(offset: 10)\n            eyeView(offset: -10)\n        }\n        .offset(y: -50)\n    }\n}\n\n// MARK: - 도우미 뷰\nextension FunnyFaceView {\n    @ViewBuilder\n    private func eyeView(offset: CGFloat) -> some View {\n        ZStack {\n            Circle()\n                .fill(Color.white)\n                .frame(width: 50, height: 50)\n            Circle()\n                .fill(Color.black)\n                .frame(width: 10, height: 10)\n                .offset(x: offset)\n                .rotationEffect(.degrees(rotationAngle))\n        }\n        .onAppear {\n            isRotate.toggle()\n        }\n    }\n    \n    @ViewBuilder\n    private func mouthView() -> some View {\n        RoundedRectangle(cornerRadius: 20, style: .continuous)\n            .fill(Color.white)\n            .frame(width: 150, height: 20)\n            .offset(y: 50)\n    }\n}\n\n#if DEBUG\n#Preview {\n    FunnyFaceView()\n}\n#endif\n```\n\n![Funny Custom Face Animation](https://miro.medium.com/v2/resize:fit:590/1*ZUIvBP0Uf6Me8MkBYtu0Sg.gif)\n\n\n<div class=\"content-ad\"></div>\n\n감사합니다!","ogImage":{"url":"/assets/img/2024-05-20-SwiftUIFunnyCustomFaceAnimationwithrotationeffect_0.png"},"coverImage":"/assets/img/2024-05-20-SwiftUIFunnyCustomFaceAnimationwithrotationeffect_0.png","tag":["Tech"],"readingTime":3},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-SwiftUIFunnyCustomFaceAnimationwithrotationeffect_0.png\",\n        alt: \"Funny Custom Face Animation\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"저는 원형과 둥근 직사각형 같은 형태를 사용하여 사용자 정의 얼굴을 만들어보았어요. 눈이 회전하는 애니메이션도 추가했답니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-swift\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"struct\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"FunnyFaceView\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"View\"\n        }), \" {\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// MARK: - 속성\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" isRotate: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Bool\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@State\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" rotationAngle: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Double\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// MARK: - Body\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" body: \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"some\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"View\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ZStack\"\n        }), \" {\\n            faceView()\\n            facePartsView()\\n        }\\n        .onAppear {\\n            withAnimation(\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Animation\"\n        }), \".linear(duration: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \").repeatForever(autoreverses: \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"false\"\n        }), \")) {\\n                rotationAngle \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"360\"\n        }), \"\\n            }\\n        }\\n    }\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"extension\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"FunnyFaceView\"\n        }), \" {\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@ViewBuilder\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"faceView\"\n        }), \"() -> \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"some\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"View\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Circle\"\n        }), \"()\\n            .fill(\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \".yellow)\\n            .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"300\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"300\"\n        }), \")\\n    }\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@ViewBuilder\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"facePartsView\"\n        }), \"() -> \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"some\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"View\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"VStack\"\n        }), \" {\\n            eyesView()\\n            mouthView()\\n        }\\n    }\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@ViewBuilder\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"eyesView\"\n        }), \"() -> \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"some\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"View\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"HStack\"\n        }), \" {\\n            eyeView(offset: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \")\\n            eyeView(offset: \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \")\\n        }\\n        .offset(y: \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"-\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"50\"\n        }), \")\\n    }\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// MARK: - 도우미 뷰\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"extension\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"FunnyFaceView\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@ViewBuilder\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"eyeView\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"offset\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"CGFloat\"\n        }), \") -> \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"some\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"View\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"ZStack\"\n        }), \" {\\n            \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Circle\"\n        }), \"()\\n                .fill(\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \".white)\\n                .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"50\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"50\"\n        }), \")\\n            \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Circle\"\n        }), \"()\\n                .fill(\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \".black)\\n                .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \")\\n                .offset(x: offset)\\n                .rotationEffect(.degrees(rotationAngle))\\n        }\\n        .onAppear {\\n            isRotate.toggle()\\n        }\\n    }\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-meta\",\n          children: \"@ViewBuilder\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"private\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"mouthView\"\n        }), \"() -> \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"some\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"View\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"RoundedRectangle\"\n        }), \"(cornerRadius: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \", style: .continuous)\\n            .fill(\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Color\"\n        }), \".white)\\n            .frame(width: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"150\"\n        }), \", height: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"20\"\n        }), \")\\n            .offset(y: \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"50\"\n        }), \")\\n    }\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"#if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"DEBUG\"\n        }), \"\\n#\", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Preview\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"FunnyFaceView\"\n        }), \"()\\n}\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"#endif\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://miro.medium.com/v2/resize:fit:590/1*ZUIvBP0Uf6Me8MkBYtu0Sg.gif\",\n        alt: \"Funny Custom Face Animation\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"감사합니다!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}
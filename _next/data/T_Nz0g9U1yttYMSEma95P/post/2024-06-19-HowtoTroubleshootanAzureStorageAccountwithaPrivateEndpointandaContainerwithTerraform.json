{"pageProps":{"post":{"title":"Azure Storage Account에 개인 엔드포인트와 Terraform을 사용하여 컨테이너 문제 해결하는 방법","description":"","date":"2024-06-19 13:28","slug":"2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform","content":"\n<img src=\"/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_0.png\" />\n\n오늘은 Terraform으로 Azure Storage Account와 Private Endpoint를 배포할 때 발생하는 일반적인 오류에 대해 이야기해보겠습니다.\n\n저희가 스토리지 계정 컨테이너를 추가하려고 시도하면, 다음과 같은 오류가 발생합니다:\n\n# 1. 우리의 시나리오\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 테라폼이 실행 중인 가상 머신이 있습니다.\n\n- 리소스 그룹 \"kopicloud-core-dev-we-rg\"\n- 가상 네트워크 \"kopicloud-core-dev-we-vnet\"\n- 서브넷 \"kopicloud-core-dev-we-subnet\"\n\n2. 기존의 \"privatelink.blob.core.windows.net\" 프라이빗 DNS 영역이 있습니다.\n\n- 리소스 그룹 \"kopicloud-core-dev-we-dns-rg\"\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n3. 새로운 Azure Storage Account와 프라이빗 엔드포인트를 배포할 것입니다.\n\n- 리소스 그룹 \"kopicloud-storage-dev-we-rg\"\n- 가상 네트워크 \"kopicloud-storage-dev-we-vnet\"\n- 서브넷 \"kopicloud-storage-dev-we-endpoint-subnet\"\n\n# 2. Azure Storage Account와 프라이빗 엔드포인트를 배포하는 Terraform 코드\n\n이 코드에 대해 설명은 이 이야기에서 하지 않겠습니다. 더 자세한 내용은 \"Terraform을 사용한 Azure Storage Account의 프라이빗 엔드포인트\" 이야기를 확인해주세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아래는 \"network-variables.tf\" 파일입니다:\n\n```js\nvariable \"network-vnet-cidr\" {\n  type        = string\n  description = \"네트워크 VNET의 CIDR\"\n}\n\nvariable \"network-endpoint-subnet-cidr\" {\n  type        = string\n  description = \"네트워크 서브넷의 CIDR\"\n}\n```\n\n아래는 \"network.tf\" 파일입니다:\n\n```js\n# 네트워크를 위한 리소스 그룹 생성\nresource \"azurerm_resource_group\" \"network-rg\" {\n  name     = \"kopicloud-storage-dev-we-rg\"\n  location = var.location\n}\n\n# 네트워크 VNET 생성\nresource \"azurerm_virtual_network\" \"network-vnet\" {\n  name                = \"kopicloud-storage-dev-we-vnet\"\n  address_space       = [var.network-vnet-cidr]\n  resource_group_name = azurerm_resource_group.network-rg.name\n  location            = azurerm_resource_group.network-rg.location\n}\n\n# Endpoint 서브넷 생성\nresource \"azurerm_subnet\" \"endpoint-subnet\" {\n  name                 = \"kopicloud-storage-dev-we-endpoint-subnet\"\n  address_prefixes     = [var.network-endpoint-subnet-cidr]\n  virtual_network_name = azurerm_virtual_network.network-vnet.name\n  resource_group_name  = azurerm_resource_group.network-rg.name\n\n  private_endpoint_network_policies_enabled = true\n\n  service_endpoints = [\"Microsoft.Storage\"]\n}\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n\"storage-account.tf\" 파일:\n\n```js\n# 기존 Private DNS Zone 참조\ndata \"azurerm_private_dns_zone\" \"dns-zone\" {\n  name                = \"privatelink.blob.core.windows.net\"\n  resource_group_name = \"kopicloud-core-dev-we-dns-rg\"\n}\n\n# Private DNS Zone 네트워크 링크 생성\nresource \"azurerm_private_dns_zone_virtual_network_link\" \"network_link\" {\n  name                  = \"kopicloud-storage-dev-we-vnet-link\"\n  resource_group_name = data.azurerm_private_dns_zone.dns-zone.resource_group_name\n  private_dns_zone_name = data.azurerm_private_dns_zone.dns-zone.name\n  virtual_network_id    = azurerm_virtual_network.network-vnet.id\n}\n\n# 스토리지 계정 생성\nresource \"azurerm_storage_account\" \"storage\" {\n  name                = \"kopicloudstoragedevwesta\"\n  resource_group_name = azurerm_resource_group.network-rg.name\n  location            = azurerm_resource_group.network-rg.location\n\n  account_kind             = \"StorageV2\"\n  account_tier             = \"Standard\"\n  account_replication_type = \"LRS\"\n}\n\n# 프라이빗 엔드포인트 생성\nresource \"azurerm_private_endpoint\" \"endpoint\" {\n  name                = \"kopicloudstoragedevwesta-pe\"\n  resource_group_name = azurerm_resource_group.network-rg.name\n  location            = azurerm_resource_group.network-rg.location\n  subnet_id           = azurerm_subnet.endpoint-subnet.id\n\n  private_service_connection {\n    name                           = \"kopicloudstoragedevwesta-psc\"\n    private_connection_resource_id = azurerm_storage_account.storage.id\n    is_manual_connection           = false\n    subresource_names              = [\"blob\"]\n  }\n}\n\n# DNS A 레코드 생성\nresource \"azurerm_private_dns_a_record\" \"dns_a\" {\n  name                = \"kopicloudstoragedevwesta\"\n  resource_group_name = data.azurerm_private_dns_zone.dns-zone.resource_group_name\n  zone_name = data.azurerm_private_dns_zone.dns-zone.name\n  ttl                 = 300\n  records             = [azurerm_private_endpoint.endpoint.private_service_connection.0.private_ip_address]\n}\n```\n\n# 3. 공개 액세스 해제\n\n기본적으로 이 코드는 공개 액세스가 있는 스토리지 계정을 생성합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![이미지](/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_1.png)\n\n공개 액세스를 종료해야만 Private Endpoint를 구현하는 의미가 있습니다.\n\n따라서 \"azurerm_storage_account\" 리소스를 수정하여 public_network_access_enabled = false 라인을 추가하겠습니다.\n\n```js\n// 스토리지 계정 생성\nresource \"azurerm_storage_account\" \"storage\" {\n  name                = \"${lower(replace(var.company,\" \",\"-\"))}${var.app_name}${var.environment}${var.shortlocation}sta\"\n  resource_group_name = azurerm_resource_group.network-rg.name\n  location            = azurerm_resource_group.network-rg.location\n\n  account_kind             = \"StorageV2\"\n  account_tier             = \"Standard\"\n  account_replication_type = \"LRS\"\n\n  public_network_access_enabled = false\n}\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n\"Terraform Apply\" 명령을 실행하여 공개 액세스가 비활성화되었음을 확인했습니다.\n\n![이미지](/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_2.png)\n\n# 4. 스토리지 계정 컨테이너 생성\n\n이제 다음 코드로 스토리지 계정 컨테이너를 생성할 차례입니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\n// 외부 저장소 계정용 Azure Storage 컨테이너 생성\nresource \"azurerm_storage_container\" \"external\" {\n  name                  = \"container\"\n  storage_account_name  = azurerm_storage_account.storage.name\n  container_access_type = \"private\"\n}\n```\n\n\"Terraform Apply\" 명령을 실행했는데 오류가 발생했습니다.\n\n# 4. 특정 네트워크에서 액세스 권한 활성화\n\n따라서 이 문제를 해결하기 위해 특정 네트워크에서의 공개 액세스를 허용할 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n그럼 \"azurerm_storage_account\" 리소스를 수정하여 public_network_access_enabled = true 라인을 추가하겠습니다.\n\n```js\n// 저장소 계정 생성\nresource \"azurerm_storage_account\" \"storage\" {\n  name                = \"${lower(replace(var.company,\" \",\"-\"))}${var.app_name}${var.environment}${var.shortlocation}sta\"\n  resource_group_name = azurerm_resource_group.network-rg.name\n  location            = azurerm_resource_group.network-rg.location\n  account_kind             = \"StorageV2\"\n  account_tier             = \"Standard\"\n  account_replication_type = \"LRS\"\n\n  public_network_access_enabled = true\n}\n```\n\n또한 지정된 네트워크에서 액세스 허용하도록 \"Azure Storage Account Network Rules\" 리소스를 생성해야 합니다; 이 경우 Storage Account Subnet에서 액세스를 허용할 것입니다.\n\n```js\n# Azure Storage Account Network Rules 생성\nresource \"azurerm_storage_account_network_rules\" \"rules\" {\n  storage_account_id = azurerm_storage_account.storage.id\n\n  default_action = \"Deny\"\n  virtual_network_subnet_ids = [ azurerm_subnet.endpoint-subnet.id ]\n  bypass         = [\"Metrics\", \"Logging\", \"AzureServices\"]\n}\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n“Terraform Apply” 명령을 실행했을 때 다시 403 오류가 발생했어요.\n\n# 5. Azure Storage Account 네트워크 규칙 업데이트\n\n가시성을 위해 규칙을 변경하여 VM이 Terraform을 실행할 때 서브넷에서의 트래픽을 허용하도록 할게요. 우리는 데이터를 사용하여 서브넷 ID를 가져올 거에요.\n\n```js\n# 핵심 서브넷을 참조합니다\ndata \"azurerm_subnet\" \"core\" {\n  name                 = \"kopicloud-core-dev-we-subnet\"\n  virtual_network_name = \"kopicloud-core-dev-we-vnet\"\n  resource_group_name  = \"kopicloud-core-dev-we-rg\"\n}\n\n# Azure Storage Account 네트워크 규칙 생성\nresource \"azurerm_storage_account_network_rules\" \"rules\" {\n  storage_account_id = azurerm_storage_account.storage.id\n\n  default_action = \"Deny\"\n  virtual_network_subnet_ids = [ azurerm_subnet.endpoint-subnet.id, data.azurerm_subnet.core.id ]\n  bypass         = [\"Metrics\", \"Logging\", \"AzureServices\"]\n}\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n\"Terraform Apply\" 명령을 실행했는데 다시 403 오류가 발생했어요.\n\n포털을 살펴보니 규칙이 구현되지 않았다는 것을 알았어요. 컨테이너가 이전에 실패했기 때문이에요.\n\n<img src=\"/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_3.png\"/>\n\n# 6. 코어와 스토리지 가상 네트워크 간 피어링 생성하기\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n그 후에, 어쩌면 두 가상 네트워크 사이에 피어링이 필요할지도 모른다고 생각했어요.\n\n그래서 \"peering.tf\" 파일을 만들고 이 코드를 추가했어요:\n\n```js\nlocals {\n  core_rg_name = \"kopicloud-core-dev-we-rg\"\n  core_vnet_name = \"kopicloud-core-dev-we-vnet\"\n}\n\n// Core VNET에 대한 참조\ndata \"azurerm_virtual_network\" \"core\" {\n  name                = local.core_vnet_name\n  resource_group_name = local.core_rg_name\n}\n\n// Core에서 스토리지로 피어링 생성\nresource \"azurerm_virtual_network_peering\" \"core-to-storage\" {\n  name                      = \"Core-to-Storage\"\n  resource_group_name       = local.core_rg_name\n  virtual_network_name      = local.core_vnet_name\n  remote_virtual_network_id = azurerm_virtual_network.network-vnet.id\n}\n\n// 스토리지에서 Core로 피어링 생성\nresource \"azurerm_virtual_network_peering\" \"storage-to-core\" {\n  name                      = \"Storage-to-Core\"\n  resource_group_name       = azurerm_resource_group.network-rg.name\n  virtual_network_name      = azurerm_virtual_network.network-vnet.name\n  remote_virtual_network_id = data.azurerm_virtual_network.core.id\n}\n```\n\n그리고 \"Terraform Apply\" 명령어를 실행했더니, 마침내 우리 코드가 잘 실행되고 있어요!\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n최종 네트워크 구성은 다음과 같아야 합니다:\n\n![이미지](/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_4.png)\n\n그리고 이것이 전부에요. 만약 이 이야기를 좋아하셨다면 👏을 눌러 서포트를 보여주세요. 읽어 주셔서 감사합니다!\n","ogImage":{"url":"/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_0.png"},"coverImage":"/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_0.png","tag":["Tech"],"readingTime":12},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<img src=\"/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_0.png\">\n<p>오늘은 Terraform으로 Azure Storage Account와 Private Endpoint를 배포할 때 발생하는 일반적인 오류에 대해 이야기해보겠습니다.</p>\n<p>저희가 스토리지 계정 컨테이너를 추가하려고 시도하면, 다음과 같은 오류가 발생합니다:</p>\n<h1>1. 우리의 시나리오</h1>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<ul>\n<li>\n<p>테라폼이 실행 중인 가상 머신이 있습니다.</p>\n</li>\n<li>\n<p>리소스 그룹 \"kopicloud-core-dev-we-rg\"</p>\n</li>\n<li>\n<p>가상 네트워크 \"kopicloud-core-dev-we-vnet\"</p>\n</li>\n<li>\n<p>서브넷 \"kopicloud-core-dev-we-subnet\"</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>기존의 \"privatelink.blob.core.windows.net\" 프라이빗 DNS 영역이 있습니다.</li>\n</ol>\n<ul>\n<li>리소스 그룹 \"kopicloud-core-dev-we-dns-rg\"</li>\n</ul>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<ol start=\"3\">\n<li>새로운 Azure Storage Account와 프라이빗 엔드포인트를 배포할 것입니다.</li>\n</ol>\n<ul>\n<li>리소스 그룹 \"kopicloud-storage-dev-we-rg\"</li>\n<li>가상 네트워크 \"kopicloud-storage-dev-we-vnet\"</li>\n<li>서브넷 \"kopicloud-storage-dev-we-endpoint-subnet\"</li>\n</ul>\n<h1>2. Azure Storage Account와 프라이빗 엔드포인트를 배포하는 Terraform 코드</h1>\n<p>이 코드에 대해 설명은 이 이야기에서 하지 않겠습니다. 더 자세한 내용은 \"Terraform을 사용한 Azure Storage Account의 프라이빗 엔드포인트\" 이야기를 확인해주세요.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>아래는 \"network-variables.tf\" 파일입니다:</p>\n<pre><code class=\"hljs language-js\">variable <span class=\"hljs-string\">\"network-vnet-cidr\"</span> {\n  type        = string\n  description = <span class=\"hljs-string\">\"네트워크 VNET의 CIDR\"</span>\n}\n\nvariable <span class=\"hljs-string\">\"network-endpoint-subnet-cidr\"</span> {\n  type        = string\n  description = <span class=\"hljs-string\">\"네트워크 서브넷의 CIDR\"</span>\n}\n</code></pre>\n<p>아래는 \"network.tf\" 파일입니다:</p>\n<pre><code class=\"hljs language-js\"># 네트워크를 위한 리소스 그룹 생성\nresource <span class=\"hljs-string\">\"azurerm_resource_group\"</span> <span class=\"hljs-string\">\"network-rg\"</span> {\n  name     = <span class=\"hljs-string\">\"kopicloud-storage-dev-we-rg\"</span>\n  location = <span class=\"hljs-keyword\">var</span>.<span class=\"hljs-property\">location</span>\n}\n\n# 네트워크 <span class=\"hljs-variable constant_\">VNET</span> 생성\nresource <span class=\"hljs-string\">\"azurerm_virtual_network\"</span> <span class=\"hljs-string\">\"network-vnet\"</span> {\n  name                = <span class=\"hljs-string\">\"kopicloud-storage-dev-we-vnet\"</span>\n  address_space       = [<span class=\"hljs-keyword\">var</span>.<span class=\"hljs-property\">network</span>-vnet-cidr]\n  resource_group_name = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">name</span>\n  location            = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">location</span>\n}\n\n# <span class=\"hljs-title class_\">Endpoint</span> 서브넷 생성\nresource <span class=\"hljs-string\">\"azurerm_subnet\"</span> <span class=\"hljs-string\">\"endpoint-subnet\"</span> {\n  name                 = <span class=\"hljs-string\">\"kopicloud-storage-dev-we-endpoint-subnet\"</span>\n  address_prefixes     = [<span class=\"hljs-keyword\">var</span>.<span class=\"hljs-property\">network</span>-endpoint-subnet-cidr]\n  virtual_network_name = azurerm_virtual_network.<span class=\"hljs-property\">network</span>-vnet.<span class=\"hljs-property\">name</span>\n  resource_group_name  = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">name</span>\n\n  private_endpoint_network_policies_enabled = <span class=\"hljs-literal\">true</span>\n\n  service_endpoints = [<span class=\"hljs-string\">\"Microsoft.Storage\"</span>]\n}\n</code></pre>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>\"storage-account.tf\" 파일:</p>\n<pre><code class=\"hljs language-js\"># 기존 <span class=\"hljs-title class_\">Private</span> <span class=\"hljs-variable constant_\">DNS</span> <span class=\"hljs-title class_\">Zone</span> 참조\ndata <span class=\"hljs-string\">\"azurerm_private_dns_zone\"</span> <span class=\"hljs-string\">\"dns-zone\"</span> {\n  name                = <span class=\"hljs-string\">\"privatelink.blob.core.windows.net\"</span>\n  resource_group_name = <span class=\"hljs-string\">\"kopicloud-core-dev-we-dns-rg\"</span>\n}\n\n# <span class=\"hljs-title class_\">Private</span> <span class=\"hljs-variable constant_\">DNS</span> <span class=\"hljs-title class_\">Zone</span> 네트워크 링크 생성\nresource <span class=\"hljs-string\">\"azurerm_private_dns_zone_virtual_network_link\"</span> <span class=\"hljs-string\">\"network_link\"</span> {\n  name                  = <span class=\"hljs-string\">\"kopicloud-storage-dev-we-vnet-link\"</span>\n  resource_group_name = data.<span class=\"hljs-property\">azurerm_private_dns_zone</span>.<span class=\"hljs-property\">dns</span>-zone.<span class=\"hljs-property\">resource_group_name</span>\n  private_dns_zone_name = data.<span class=\"hljs-property\">azurerm_private_dns_zone</span>.<span class=\"hljs-property\">dns</span>-zone.<span class=\"hljs-property\">name</span>\n  virtual_network_id    = azurerm_virtual_network.<span class=\"hljs-property\">network</span>-vnet.<span class=\"hljs-property\">id</span>\n}\n\n# 스토리지 계정 생성\nresource <span class=\"hljs-string\">\"azurerm_storage_account\"</span> <span class=\"hljs-string\">\"storage\"</span> {\n  name                = <span class=\"hljs-string\">\"kopicloudstoragedevwesta\"</span>\n  resource_group_name = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">name</span>\n  location            = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">location</span>\n\n  account_kind             = <span class=\"hljs-string\">\"StorageV2\"</span>\n  account_tier             = <span class=\"hljs-string\">\"Standard\"</span>\n  account_replication_type = <span class=\"hljs-string\">\"LRS\"</span>\n}\n\n# 프라이빗 엔드포인트 생성\nresource <span class=\"hljs-string\">\"azurerm_private_endpoint\"</span> <span class=\"hljs-string\">\"endpoint\"</span> {\n  name                = <span class=\"hljs-string\">\"kopicloudstoragedevwesta-pe\"</span>\n  resource_group_name = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">name</span>\n  location            = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">location</span>\n  subnet_id           = azurerm_subnet.<span class=\"hljs-property\">endpoint</span>-subnet.<span class=\"hljs-property\">id</span>\n\n  private_service_connection {\n    name                           = <span class=\"hljs-string\">\"kopicloudstoragedevwesta-psc\"</span>\n    private_connection_resource_id = azurerm_storage_account.<span class=\"hljs-property\">storage</span>.<span class=\"hljs-property\">id</span>\n    is_manual_connection           = <span class=\"hljs-literal\">false</span>\n    subresource_names              = [<span class=\"hljs-string\">\"blob\"</span>]\n  }\n}\n\n# <span class=\"hljs-variable constant_\">DNS</span> A 레코드 생성\nresource <span class=\"hljs-string\">\"azurerm_private_dns_a_record\"</span> <span class=\"hljs-string\">\"dns_a\"</span> {\n  name                = <span class=\"hljs-string\">\"kopicloudstoragedevwesta\"</span>\n  resource_group_name = data.<span class=\"hljs-property\">azurerm_private_dns_zone</span>.<span class=\"hljs-property\">dns</span>-zone.<span class=\"hljs-property\">resource_group_name</span>\n  zone_name = data.<span class=\"hljs-property\">azurerm_private_dns_zone</span>.<span class=\"hljs-property\">dns</span>-zone.<span class=\"hljs-property\">name</span>\n  ttl                 = <span class=\"hljs-number\">300</span>\n  records             = [azurerm_private_endpoint.<span class=\"hljs-property\">endpoint</span>.<span class=\"hljs-property\">private_service_connection</span><span class=\"hljs-number\">.0</span>.<span class=\"hljs-property\">private_ip_address</span>]\n}\n</code></pre>\n<h1>3. 공개 액세스 해제</h1>\n<p>기본적으로 이 코드는 공개 액세스가 있는 스토리지 계정을 생성합니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p><img src=\"/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_1.png\" alt=\"이미지\"></p>\n<p>공개 액세스를 종료해야만 Private Endpoint를 구현하는 의미가 있습니다.</p>\n<p>따라서 \"azurerm_storage_account\" 리소스를 수정하여 public_network_access_enabled = false 라인을 추가하겠습니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 스토리지 계정 생성</span>\nresource <span class=\"hljs-string\">\"azurerm_storage_account\"</span> <span class=\"hljs-string\">\"storage\"</span> {\n  name                = <span class=\"hljs-string\">\"${lower(replace(var.company,\"</span> <span class=\"hljs-string\">\",\"</span>-<span class=\"hljs-string\">\"))}${var.app_name}${var.environment}${var.shortlocation}sta\"</span>\n  resource_group_name = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">name</span>\n  location            = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">location</span>\n\n  account_kind             = <span class=\"hljs-string\">\"StorageV2\"</span>\n  account_tier             = <span class=\"hljs-string\">\"Standard\"</span>\n  account_replication_type = <span class=\"hljs-string\">\"LRS\"</span>\n\n  public_network_access_enabled = <span class=\"hljs-literal\">false</span>\n}\n</code></pre>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>\"Terraform Apply\" 명령을 실행하여 공개 액세스가 비활성화되었음을 확인했습니다.</p>\n<p><img src=\"/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_2.png\" alt=\"이미지\"></p>\n<h1>4. 스토리지 계정 컨테이너 생성</h1>\n<p>이제 다음 코드로 스토리지 계정 컨테이너를 생성할 차례입니다:</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 외부 저장소 계정용 Azure Storage 컨테이너 생성</span>\nresource <span class=\"hljs-string\">\"azurerm_storage_container\"</span> <span class=\"hljs-string\">\"external\"</span> {\n  name                  = <span class=\"hljs-string\">\"container\"</span>\n  storage_account_name  = azurerm_storage_account.<span class=\"hljs-property\">storage</span>.<span class=\"hljs-property\">name</span>\n  container_access_type = <span class=\"hljs-string\">\"private\"</span>\n}\n</code></pre>\n<p>\"Terraform Apply\" 명령을 실행했는데 오류가 발생했습니다.</p>\n<h1>4. 특정 네트워크에서 액세스 권한 활성화</h1>\n<p>따라서 이 문제를 해결하기 위해 특정 네트워크에서의 공개 액세스를 허용할 것입니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>그럼 \"azurerm_storage_account\" 리소스를 수정하여 public_network_access_enabled = true 라인을 추가하겠습니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 저장소 계정 생성</span>\nresource <span class=\"hljs-string\">\"azurerm_storage_account\"</span> <span class=\"hljs-string\">\"storage\"</span> {\n  name                = <span class=\"hljs-string\">\"${lower(replace(var.company,\"</span> <span class=\"hljs-string\">\",\"</span>-<span class=\"hljs-string\">\"))}${var.app_name}${var.environment}${var.shortlocation}sta\"</span>\n  resource_group_name = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">name</span>\n  location            = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">location</span>\n  account_kind             = <span class=\"hljs-string\">\"StorageV2\"</span>\n  account_tier             = <span class=\"hljs-string\">\"Standard\"</span>\n  account_replication_type = <span class=\"hljs-string\">\"LRS\"</span>\n\n  public_network_access_enabled = <span class=\"hljs-literal\">true</span>\n}\n</code></pre>\n<p>또한 지정된 네트워크에서 액세스 허용하도록 \"Azure Storage Account Network Rules\" 리소스를 생성해야 합니다; 이 경우 Storage Account Subnet에서 액세스를 허용할 것입니다.</p>\n<pre><code class=\"hljs language-js\"># <span class=\"hljs-title class_\">Azure</span> <span class=\"hljs-title class_\">Storage</span> <span class=\"hljs-title class_\">Account</span> <span class=\"hljs-title class_\">Network</span> <span class=\"hljs-title class_\">Rules</span> 생성\nresource <span class=\"hljs-string\">\"azurerm_storage_account_network_rules\"</span> <span class=\"hljs-string\">\"rules\"</span> {\n  storage_account_id = azurerm_storage_account.<span class=\"hljs-property\">storage</span>.<span class=\"hljs-property\">id</span>\n\n  default_action = <span class=\"hljs-string\">\"Deny\"</span>\n  virtual_network_subnet_ids = [ azurerm_subnet.<span class=\"hljs-property\">endpoint</span>-subnet.<span class=\"hljs-property\">id</span> ]\n  bypass         = [<span class=\"hljs-string\">\"Metrics\"</span>, <span class=\"hljs-string\">\"Logging\"</span>, <span class=\"hljs-string\">\"AzureServices\"</span>]\n}\n</code></pre>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>“Terraform Apply” 명령을 실행했을 때 다시 403 오류가 발생했어요.</p>\n<h1>5. Azure Storage Account 네트워크 규칙 업데이트</h1>\n<p>가시성을 위해 규칙을 변경하여 VM이 Terraform을 실행할 때 서브넷에서의 트래픽을 허용하도록 할게요. 우리는 데이터를 사용하여 서브넷 ID를 가져올 거에요.</p>\n<pre><code class=\"hljs language-js\"># 핵심 서브넷을 참조합니다\ndata <span class=\"hljs-string\">\"azurerm_subnet\"</span> <span class=\"hljs-string\">\"core\"</span> {\n  name                 = <span class=\"hljs-string\">\"kopicloud-core-dev-we-subnet\"</span>\n  virtual_network_name = <span class=\"hljs-string\">\"kopicloud-core-dev-we-vnet\"</span>\n  resource_group_name  = <span class=\"hljs-string\">\"kopicloud-core-dev-we-rg\"</span>\n}\n\n# <span class=\"hljs-title class_\">Azure</span> <span class=\"hljs-title class_\">Storage</span> <span class=\"hljs-title class_\">Account</span> 네트워크 규칙 생성\nresource <span class=\"hljs-string\">\"azurerm_storage_account_network_rules\"</span> <span class=\"hljs-string\">\"rules\"</span> {\n  storage_account_id = azurerm_storage_account.<span class=\"hljs-property\">storage</span>.<span class=\"hljs-property\">id</span>\n\n  default_action = <span class=\"hljs-string\">\"Deny\"</span>\n  virtual_network_subnet_ids = [ azurerm_subnet.<span class=\"hljs-property\">endpoint</span>-subnet.<span class=\"hljs-property\">id</span>, data.<span class=\"hljs-property\">azurerm_subnet</span>.<span class=\"hljs-property\">core</span>.<span class=\"hljs-property\">id</span> ]\n  bypass         = [<span class=\"hljs-string\">\"Metrics\"</span>, <span class=\"hljs-string\">\"Logging\"</span>, <span class=\"hljs-string\">\"AzureServices\"</span>]\n}\n</code></pre>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>\"Terraform Apply\" 명령을 실행했는데 다시 403 오류가 발생했어요.</p>\n<p>포털을 살펴보니 규칙이 구현되지 않았다는 것을 알았어요. 컨테이너가 이전에 실패했기 때문이에요.</p>\n<img src=\"/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_3.png\">\n<h1>6. 코어와 스토리지 가상 네트워크 간 피어링 생성하기</h1>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>그 후에, 어쩌면 두 가상 네트워크 사이에 피어링이 필요할지도 모른다고 생각했어요.</p>\n<p>그래서 \"peering.tf\" 파일을 만들고 이 코드를 추가했어요:</p>\n<pre><code class=\"hljs language-js\">locals {\n  core_rg_name = <span class=\"hljs-string\">\"kopicloud-core-dev-we-rg\"</span>\n  core_vnet_name = <span class=\"hljs-string\">\"kopicloud-core-dev-we-vnet\"</span>\n}\n\n<span class=\"hljs-comment\">// Core VNET에 대한 참조</span>\ndata <span class=\"hljs-string\">\"azurerm_virtual_network\"</span> <span class=\"hljs-string\">\"core\"</span> {\n  name                = local.<span class=\"hljs-property\">core_vnet_name</span>\n  resource_group_name = local.<span class=\"hljs-property\">core_rg_name</span>\n}\n\n<span class=\"hljs-comment\">// Core에서 스토리지로 피어링 생성</span>\nresource <span class=\"hljs-string\">\"azurerm_virtual_network_peering\"</span> <span class=\"hljs-string\">\"core-to-storage\"</span> {\n  name                      = <span class=\"hljs-string\">\"Core-to-Storage\"</span>\n  resource_group_name       = local.<span class=\"hljs-property\">core_rg_name</span>\n  virtual_network_name      = local.<span class=\"hljs-property\">core_vnet_name</span>\n  remote_virtual_network_id = azurerm_virtual_network.<span class=\"hljs-property\">network</span>-vnet.<span class=\"hljs-property\">id</span>\n}\n\n<span class=\"hljs-comment\">// 스토리지에서 Core로 피어링 생성</span>\nresource <span class=\"hljs-string\">\"azurerm_virtual_network_peering\"</span> <span class=\"hljs-string\">\"storage-to-core\"</span> {\n  name                      = <span class=\"hljs-string\">\"Storage-to-Core\"</span>\n  resource_group_name       = azurerm_resource_group.<span class=\"hljs-property\">network</span>-rg.<span class=\"hljs-property\">name</span>\n  virtual_network_name      = azurerm_virtual_network.<span class=\"hljs-property\">network</span>-vnet.<span class=\"hljs-property\">name</span>\n  remote_virtual_network_id = data.<span class=\"hljs-property\">azurerm_virtual_network</span>.<span class=\"hljs-property\">core</span>.<span class=\"hljs-property\">id</span>\n}\n</code></pre>\n<p>그리고 \"Terraform Apply\" 명령어를 실행했더니, 마침내 우리 코드가 잘 실행되고 있어요!</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>최종 네트워크 구성은 다음과 같아야 합니다:</p>\n<p><img src=\"/assets/img/2024-06-19-HowtoTroubleshootanAzureStorageAccountwithaPrivateEndpointandaContainerwithTerraform_4.png\" alt=\"이미지\"></p>\n<p>그리고 이것이 전부에요. 만약 이 이야기를 좋아하셨다면 👏을 눌러 서포트를 보여주세요. 읽어 주셔서 감사합니다!</p>\n</body>\n</html>\n"},"__N_SSG":true}
{"pageProps":{"post":{"title":"파이썬에서 데이터 시각화 기술과 코드 예제","description":"","date":"2024-05-20 18:34","slug":"2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples","content":"\n\n데이터 시각화는 데이터에서 통찰을 얻고 전달하는 데 강력한 도구입니다. 이 기사에서는 Python을 사용하여 타이타닉 데이터셋을 중심으로 다양한 데이터 시각화 기법을 탐색하겠습니다. Matplotlib 및 Seaborn과 같은 인기있는 라이브러리를 사용하여 유의미한 시각화를 만들 것입니다. 추가적으로, 모든 플롯에는 시각적 명확성과 일관성을 높이기 위해 빨간색을 사용할 것입니다.\n\n![image](/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_0.png)\n\n## 데이터셋 소개\n\n타이타닉 데이터셋은 다양한 데이터 분석 및 기계 학습 작업에 사용되는 고전적인 데이터셋입니다. 타이타닉호 승객에 대한 정보를 포함하며 그들의 인구 통계, 티켓 등급, 요금 및 생존 상태에 대한 정보가 포함되어 있습니다. 타이타닉 데이터셋을 로드하고 구조를 간단히 살펴보겠습니다:\n\n<div class=\"content-ad\"></div>\n\n```python\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# 타이타닉 데이터셋 불러오기\ntitanic = sns.load_dataset('titanic')\n```\n\n# 1. 숫자 변수에 대한 히스토그램\n\n히스토그램은 숫자 변수의 분포를 시각화하는 데 유용합니다. 나이와 요금에 대한 히스토그램을 그려보겠습니다:\n\n```python\n# 나이에 대한 히스토그램 그리기\nplt.figure(figsize=(8, 6))\nsns.histplot(titanic['age'].dropna(), bins=30, kde=True, color='red')\nplt.title('나이 분포')\nplt.xlabel('나이')\nplt.ylabel('빈도')\nplt.show()\n```\n\n<div class=\"content-ad\"></div>\n\n\n<img src=\"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_1.png\" />\n\n```js\n# 요금에 대한 히스토그램 작성\nplt.figure(figsize=(8, 6))\nsns.histplot(titanic['fare'], bins=30, kde=True, color='blue')\nplt.title('요금 분포')\nplt.xlabel('요금')\nplt.ylabel('빈도')\nplt.show()\n```\n\n<img src=\"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_2.png\" />\n\n히스토그램을 통해 승객들의 나이와 요금 분포에 대한 통찰을 얻을 수 있습니다.\n\n\n<div class=\"content-ad\"></div>\n\n# 2. 범주형 변수에 대한 막대 플롯\n\n막대 플롯은 범주형 변수의 분포를 시각화하는 데 효과적입니다. 탑승객 클래스와 생존 상태에 대한 막대 플롯을 그려보겠습니다:\n\n```js\n# 승객 클래스에 대한 막대 플롯 그리기\nplt.figure(figsize=(6, 4))\nsns.countplot(x='class', data=titanic, color='red')\nplt.title('승객 클래스 분포')\nplt.xlabel('클래스')\nplt.ylabel('수')\nplt.show()\n```\n\n<img src=\"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_3.png\" />\n\n<div class=\"content-ad\"></div>\n\n```md\n# 생존 상태에 대한 막대 그래프 플롯하기\nplt.figure(figsize=(8, 6))\nsns.countplot(x='survived', data=titanic, color='red')\nplt.title('생존 상태 분포')\nplt.xlabel('생존 상태')\nplt.ylabel('카운트')\nplt.show()\n```\n\n![이미지](/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_4.png)\n\n막대 그래프는 승객들이 다른 클래스 및 생존 상태에 분포된 정보를 제공합니다.\n\n# 3. 아웃라이어 감지를 위한 상자 그림(Box Plot)\n\n\n<div class=\"content-ad\"></div>\n\n상자 수염 도표는 이상치를 감지하고 숫자 변수의 분포를 시각화하는 데 유용합니다. 나이와 요금에 대한 상자 수염 도표를 그려보겠습니다:\n\n```js\n# 나이에 대한 상자 수염 도표 그리기\nplt.figure(figsize=(8, 6))\nsns.boxplot(x='age', data=titanic, color='red')\nplt.title('나이 분포 (상자 수염 도표)')\nplt.xlabel('나이')\nplt.show()\n```\n\n<img src=\"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_5.png\" />\n\n```js\n# 요금에 대한 상자 수염 도표 그리기\nplt.figure(figsize=(8, 6))\nsns.boxplot(x='fare', data=titanic, color='green')\nplt.title('요금 분포 (상자 수염 도표)')\nplt.xlabel('요금')\nplt.show()\n```\n\n<div class=\"content-ad\"></div>\n\n\n![Box plots](/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_6.png)\n\nBox plots는 이상값을 식별하고 연령 및 요금의 분포를 이해하는 데 도움이 됩니다.\n\n# 결론\n\n데이터 시각화는 데이터로부터 통찰력을 얻고 발견한 결과를 효과적으로 전달하는 데 중요합니다. 이 기사에서는 Matplotlib 및 Seaborn과 같은 Python 라이브러리를 사용하여 다양한 데이터 시각화 기술을 살펴보았습니다. 숫자형 및 범주형 변수의 분포를 시각화하고 이상값을 감지하며 Titanic 데이터셋에 대한 통찰력을 얻었습니다. 모든 플롯에 대해 빨간색을 사용함으로써 시각적 명확성과 시각화의 일관성을 보장했습니다.\n\n\n<div class=\"content-ad\"></div>\n\n복잡한 데이터셋을 이해하고 정보를 얻기 위해서는 효과적인 데이터 시각화가 필수적입니다. 데이터에서 숨겨진 패턴과 관계를 발견하기 위해 다양한 시각화 기술을 실험해보세요.\n\n향후 기사에서는 고급 시각화 기술에 대해 더 깊이 파고들고 더 복잡한 데이터셋을 탐색할 것입니다. 더 많은 통찰력 있는 콘텐츠를 기대해 주세요!\n\n# Python Fundamentals\n\n소중한 시간과 관심에 감사드립니다! 🚀\nPython Fundamentals에서 더 많은 콘텐츠를 찾아보실 수 있습니다. 💫","ogImage":{"url":"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_0.png"},"coverImage":"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_0.png","tag":["Tech"],"readingTime":4},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"데이터 시각화는 데이터에서 통찰을 얻고 전달하는 데 강력한 도구입니다. 이 기사에서는 Python을 사용하여 타이타닉 데이터셋을 중심으로 다양한 데이터 시각화 기법을 탐색하겠습니다. Matplotlib 및 Seaborn과 같은 인기있는 라이브러리를 사용하여 유의미한 시각화를 만들 것입니다. 추가적으로, 모든 플롯에는 시각적 명확성과 일관성을 높이기 위해 빨간색을 사용할 것입니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_0.png\",\n        alt: \"image\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"데이터셋 소개\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"타이타닉 데이터셋은 다양한 데이터 분석 및 기계 학습 작업에 사용되는 고전적인 데이터셋입니다. 타이타닉호 승객에 대한 정보를 포함하며 그들의 인구 통계, 티켓 등급, 요금 및 생존 상태에 대한 정보가 포함되어 있습니다. 타이타닉 데이터셋을 로드하고 구조를 간단히 살펴보겠습니다:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-python\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" pandas \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"as\"\n        }), \" pd\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" matplotlib.pyplot \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"as\"\n        }), \" plt\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"import\"\n        }), \" seaborn \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"as\"\n        }), \" sns\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"# 타이타닉 데이터셋 불러오기\"\n        }), \"\\ntitanic = sns.load_dataset(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'titanic'\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"1. 숫자 변수에 대한 히스토그램\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"히스토그램은 숫자 변수의 분포를 시각화하는 데 유용합니다. 나이와 요금에 대한 히스토그램을 그려보겠습니다:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-python\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"# 나이에 대한 히스토그램 그리기\"\n        }), \"\\nplt.figure(figsize=(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"6\"\n        }), \"))\\nsns.histplot(titanic[\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'age'\"\n        }), \"].dropna(), bins=\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30\"\n        }), \", kde=\", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"True\"\n        }), \", color=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'red'\"\n        }), \")\\nplt.title(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'나이 분포'\"\n        }), \")\\nplt.xlabel(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'나이'\"\n        }), \")\\nplt.ylabel(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'빈도'\"\n        }), \")\\nplt.show()\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_1.png\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"# 요금에 대한 히스토그램 작성\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"figure\"\n        }), \"(figsize=(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"6\"\n        }), \"))\\nsns.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"histplot\"\n        }), \"(titanic[\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'fare'\"\n        }), \"], bins=\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30\"\n        }), \", kde=\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"True\"\n        }), \", color=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'blue'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"title\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'요금 분포'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"xlabel\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'요금'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"ylabel\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'빈도'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"show\"\n        }), \"()\\n\"]\n      })\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_2.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"히스토그램을 통해 승객들의 나이와 요금 분포에 대한 통찰을 얻을 수 있습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"2. 범주형 변수에 대한 막대 플롯\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"막대 플롯은 범주형 변수의 분포를 시각화하는 데 효과적입니다. 탑승객 클래스와 생존 상태에 대한 막대 플롯을 그려보겠습니다:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"# 승객 클래스에 대한 막대 플롯 그리기\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"figure\"\n        }), \"(figsize=(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"6\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), \"))\\nsns.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"countplot\"\n        }), \"(x=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'class'\"\n        }), \", data=titanic, color=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'red'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"title\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'승객 클래스 분포'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"xlabel\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'클래스'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"ylabel\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'수'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"show\"\n        }), \"()\\n\"]\n      })\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_3.png\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-md\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-section\",\n          children: \"# 생존 상태에 대한 막대 그래프 플롯하기\"\n        }), \"\\nplt.figure(figsize=(8, 6))\\nsns.countplot(x='survived', data=titanic, color='red')\\nplt.title('생존 상태 분포')\\nplt.xlabel('생존 상태')\\nplt.ylabel('카운트')\\nplt.show()\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_4.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"막대 그래프는 승객들이 다른 클래스 및 생존 상태에 분포된 정보를 제공합니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"3. 아웃라이어 감지를 위한 상자 그림(Box Plot)\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"상자 수염 도표는 이상치를 감지하고 숫자 변수의 분포를 시각화하는 데 유용합니다. 나이와 요금에 대한 상자 수염 도표를 그려보겠습니다:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"# 나이에 대한 상자 수염 도표 그리기\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"figure\"\n        }), \"(figsize=(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"6\"\n        }), \"))\\nsns.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"boxplot\"\n        }), \"(x=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'age'\"\n        }), \", data=titanic, color=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'red'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"title\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'나이 분포 (상자 수염 도표)'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"xlabel\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'나이'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"show\"\n        }), \"()\\n\"]\n      })\n    }), \"\\n\", _jsx(\"img\", {\n      src: \"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_5.png\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"# 요금에 대한 상자 수염 도표 그리기\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"figure\"\n        }), \"(figsize=(\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"6\"\n        }), \"))\\nsns.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"boxplot\"\n        }), \"(x=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'fare'\"\n        }), \", data=titanic, color=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'green'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"title\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'요금 분포 (상자 수염 도표)'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"xlabel\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'요금'\"\n        }), \")\\nplt.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"show\"\n        }), \"()\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-20-DataVisualizationTechniquesinPythonwithCodeExamples_6.png\",\n        alt: \"Box plots\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Box plots는 이상값을 식별하고 연령 및 요금의 분포를 이해하는 데 도움이 됩니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"결론\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"데이터 시각화는 데이터로부터 통찰력을 얻고 발견한 결과를 효과적으로 전달하는 데 중요합니다. 이 기사에서는 Matplotlib 및 Seaborn과 같은 Python 라이브러리를 사용하여 다양한 데이터 시각화 기술을 살펴보았습니다. 숫자형 및 범주형 변수의 분포를 시각화하고 이상값을 감지하며 Titanic 데이터셋에 대한 통찰력을 얻었습니다. 모든 플롯에 대해 빨간색을 사용함으로써 시각적 명확성과 시각화의 일관성을 보장했습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"복잡한 데이터셋을 이해하고 정보를 얻기 위해서는 효과적인 데이터 시각화가 필수적입니다. 데이터에서 숨겨진 패턴과 관계를 발견하기 위해 다양한 시각화 기술을 실험해보세요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"향후 기사에서는 고급 시각화 기술에 대해 더 깊이 파고들고 더 복잡한 데이터셋을 탐색할 것입니다. 더 많은 통찰력 있는 콘텐츠를 기대해 주세요!\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Python Fundamentals\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"소중한 시간과 관심에 감사드립니다! 🚀\\nPython Fundamentals에서 더 많은 콘텐츠를 찾아보실 수 있습니다. 💫\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}
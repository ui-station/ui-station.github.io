{"pageProps":{"post":{"title":"맥OS에서 RVM 설치하기 단계별로","description":"","date":"2024-05-17 17:46","slug":"2024-05-17-InstallRVMinmacOSstepbystep","content":"\n\n오직 나 한테만 말하고 싶어서 죄송한데, 덕분에 글쓰기를 멈출 수가 없어 😛\n\n# 필수 준비물\n\n- Homebrew 🍺\n\n# 시작해봅시다!\n\n<div class=\"content-ad\"></div>\n\n1. GnuPG 설치\n\n```bash\n$ brew install gnupg\n```\n\n2. GPG 키 설치 (첫 번째 방법 또는 두 번째 방법 중 선택)\n\n2.1 첫 번째 방법\n\n<div class=\"content-ad\"></div>\n\n\n$ gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\n\n\n2.2 Second way\n\n\n$ gpg --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\n\n\n3. Install RVM\n\n\n<div class=\"content-ad\"></div>\n\n```js\n$ \\curl -sSL https://get.rvm.io | bash\n```\n\n4. 콘솔에서 감사 메시지 🙏를 받게 됩니다.\n\n5. 모든 터미널을 종료하세요.\n\n6. 새 터미널을 열고 이겼어요! 해보세요.\n\n<div class=\"content-ad\"></div>\n\n```js\n$ rvm 리스트\n```\n\n7. 이 메시지가 나타납니다.\n\n```js\n# 아직 rvm 루비가 설치되지 않았습니다. 'rvm 도움말 설치'를 시도해보세요.\n```\n\n8. 2.7.1과 같은 몇 가지 루비 버전을 설치하세요.\n\n<div class=\"content-ad\"></div>\n\n- 예전 버전인 2.3.1 등을 사용하고 싶다면 아래 팁 항목을 확인해주세요 😉\n- 버전 3 이상을 사용하고 싶다면 아래 루비 버전 3+에 대한 참고사항을 확인해주세요 😁\n\n```bash\n$ rvm install 2.7.1\n```\n\n9. 설치가 완료된 후 사용 가능한 루비 버전을 확인해보세요.\n\n```bash\n$ rvm list\nruby-2.7.1 [ x86_64 ]\n# 기본 루비가 설정되지 않았습니다. 'rvm alias create default <ruby>'를 시도해보세요.\n```\n\n<div class=\"content-ad\"></div>\n\n10. 기본 루비 버전을 만듭니다\n\n```js\n$ rvm alias create default 2.7.1\n```\n\n11. 그게 다에요! 즐겨주세요 🎉\n\n# 팁 💡\n\n<div class=\"content-ad\"></div>\n\n```js\n루비의 이전 버전을 사용하는 경우, openssl과 관련된 아래와 같은 오류 메시지가 발생할 수 있습니다.\n\n```\n/Users/pagorn/.rvm/src/rubygems-3.0.8/lib/rubygems/core_ext/kernel_require.rb:54:in `require': cannot load such file -- openssl (LoadError)\n\n\n따라서, rvm에서 openssl을 설치한 다음 이 openssl을 사용하여 이전 버전의 루비를 설치해야 합니다.\n\n\n$ rvm pkg install openssl\n$ rvm install 2.3.1 --with-openssl-dir=$HOME/.rvm/usr\n\n\n<div class=\"content-ad\"></div>\n\n\n# Ruby 버전 3+에 대한 참고 사항\n\n루비 v3를 설치할 때는 특정 openssl 위치를 지정해야 할 수 있습니다.\n\n설치하기 전에 openssl 위치를 확인해주세요.\n\n- 위치 A\n\n\n<div class=\"content-ad\"></div>\n\n```js\n$ ls /usr/local/opt | grep openssl\nopenssl\nopenssl@1.1\nopenssl@3\nopenssl@3.1\n```\n\n```js\n$ rvm install ruby-3.1.0 --with-openssl-dir=/usr/local/opt/openssl@3.1\n```\n\n- 위치 B\n\n```js\n$ ls /opt/homebrew/opt | grep openssl\nopenssl\nopenssl@1.1\nopenssl@3\nopenssl@3.1\n```\n\n<div class=\"content-ad\"></div>\n\n```js\n$ rvm install ruby-3.1.0 --with-openssl-dir=/opt/homebrew/opt/openssl@3.1\n```\n\n# 참고 자료\n\n- https://formulae.brew.sh/formula/gnupg\n- https://rvm.io/\n- https://stackoverflow.com/questions/54895263/how-to-install-gpg2-via-homebrew\n- https://github.com/rvm/rvm/issues/4607#issuecomment-619422100\n- https://github.com/rvm/rvm/issues/4607#issuecomment-621343322\n- https://mac.install.guide/homebrew/3.html\n","ogImage":{"url":"/assets/img/2024-05-17-InstallRVMinmacOSstepbystep_0.png"},"coverImage":"/assets/img/2024-05-17-InstallRVMinmacOSstepbystep_0.png","tag":["Tech"],"readingTime":3},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    div: \"div\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"오직 나 한테만 말하고 싶어서 죄송한데, 덕분에 글쓰기를 멈출 수가 없어 😛\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"필수 준비물\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Homebrew 🍺\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"시작해봅시다!\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"GnuPG 설치\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-bash\",\n        children: \"$ brew install gnupg\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"2\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"GPG 키 설치 (첫 번째 방법 또는 두 번째 방법 중 선택)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"2.1 첫 번째 방법\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"$ gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"2.2 Second way\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"$ gpg --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Install RVM\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ \\\\curl -sSL \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"https\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"//get.rvm.io | bash\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"4\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"콘솔에서 감사 메시지 🙏를 받게 됩니다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"모든 터미널을 종료하세요.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"새 터미널을 열고 이겼어요! 해보세요.\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"$ rvm 리스트\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"7\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"이 메시지가 나타납니다.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"# 아직 rvm 루비가 설치되지 않았습니다. \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'rvm 도움말 설치'\"\n        }), \"를 시도해보세요.\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"8\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"2.7.1과 같은 몇 가지 루비 버전을 설치하세요.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"예전 버전인 2.3.1 등을 사용하고 싶다면 아래 팁 항목을 확인해주세요 😉\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"버전 3 이상을 사용하고 싶다면 아래 루비 버전 3+에 대한 참고사항을 확인해주세요 😁\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-bash\",\n        children: \"$ rvm install 2.7.1\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"9\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"설치가 완료된 후 사용 가능한 루비 버전을 확인해보세요.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-bash\",\n        children: [\"$ rvm list\\nruby-2.7.1 [ x86_64 ]\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"# 기본 루비가 설정되지 않았습니다. 'rvm alias create default <ruby>'를 시도해보세요.\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"10\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"기본 루비 버전을 만듭니다\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ rvm alias create \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"default\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2.7\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".1\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"11\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"그게 다에요! 즐겨주세요 🎉\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"팁 💡\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"루비의 이전 버전을 사용하는 경우, openssl과 관련된 아래와 같은 오류 메시지가 발생할 수 있습니다.\\n\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"/Users/pagorn/.rvm/src/rubygems-3.0.8/lib/rubygems/core_ext/kernel_require.rb:54\", _jsx(_components.div, {}), \" `require': cannot load such file -- openssl (LoadError)\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"따라서, rvm에서 openssl을 설치한 다음 이 openssl을 사용하여 이전 버전의 루비를 설치해야 합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"$ rvm pkg install openssl\\n$ rvm install 2.3.1 --with-openssl-dir=$HOME/.rvm/usr\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Ruby 버전 3+에 대한 참고 사항\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"루비 v3를 설치할 때는 특정 openssl 위치를 지정해야 할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"설치하기 전에 openssl 위치를 확인해주세요.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"위치 A\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ ls /usr/local/opt | grep openssl\\nopenssl\\nopenssl@\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.1\"\n        }), \"\\nopenssl@\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \"\\nopenssl@\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3.1\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ rvm install ruby-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3.1\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".0\"\n        }), \" --\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"with\"\n        }), \"-openssl-dir=\", _jsx(_components.span, {\n          className: \"hljs-regexp\",\n          children: \"/usr/\"\n        }), \"local/opt/openssl@\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3.1\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"위치 B\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ ls /opt/homebrew/opt | grep openssl\\nopenssl\\nopenssl@\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.1\"\n        }), \"\\nopenssl@\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \"\\nopenssl@\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3.1\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ rvm install ruby-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3.1\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".0\"\n        }), \" --\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"with\"\n        }), \"-openssl-dir=\", _jsx(_components.span, {\n          className: \"hljs-regexp\",\n          children: \"/opt/\"\n        }), \"homebrew/opt/openssl@\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3.1\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"참고 자료\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"https://formulae.brew.sh/formula/gnupg\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://rvm.io/\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://stackoverflow.com/questions/54895263/how-to-install-gpg2-via-homebrew\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://github.com/rvm/rvm/issues/4607#issuecomment-619422100\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://github.com/rvm/rvm/issues/4607#issuecomment-621343322\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"https://mac.install.guide/homebrew/3.html\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}
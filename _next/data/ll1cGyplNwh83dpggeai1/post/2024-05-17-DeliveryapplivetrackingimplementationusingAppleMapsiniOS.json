{"pageProps":{"post":{"title":"iOS에서 Apple Maps를 사용하여 배송 앱 실시간 추적 구현","description":"","date":"2024-05-17 17:57","slug":"2024-05-17-DeliveryapplivetrackingimplementationusingAppleMapsiniOS","content":"\n\nUIKit 및 MapKit을 사용하여 Apple 지도에서 라이브 추적 구현을 성취했습니다.\n\n[GitHub Repo](https://github.com/VSofficial/Zomato-Live-tracking-Clone-iOS-)\n\n[YouTube](https://www.youtube.com/shorts/Qzi_vZw4p4Q)\n\n<div class=\"content-ad\"></div>\n\n지도에서 MKAnnoatation을 사용하여 사용자 정의 주석(맵 마커)을 정의하는 것으로 시작해 봅시다.\n\n```js\nclass CustomAnnotation: NSObject, MKAnnotation {\n    var coordinate: CLLocationCoordinate2D\n    var title: String?\n    private let pathCoordinates: [CLLocationCoordinate2D]\n    \n    init(coordinates: [CLLocationCoordinate2D], title: String?) {\n        self.coordinate = coordinates.first ?? CLLocationCoordinate2D(latitude: 0, longitude: 0)\n        self.title = title\n        self.pathCoordinates = coordinates\n        super.init()\n    }\n}\n```\n\n그런 다음 맵에서 마커의 사용자 정의 뷰(심볼)를 생성합니다.\n\n```js\n// 지도의 주석용 사용자 정의 뷰\npublic class CustomAnnotationView: MKAnnotationView {\n    override init(annotation: MKAnnotation?, reuseIdentifier: String?) {\n        super.init(annotation: annotation, reuseIdentifier: reuseIdentifier)\n        self.image = UIImage(named: \"delivery\")\n    }\n    \n    required init?(coder aDecoder: NSCoder) {\n        fatalError(\"init(coder:) has not been implemented\")\n    }\n}\n```\n\n<div class=\"content-ad\"></div>\n\n이제 우리가 MKMapViewDelegate를 사용하여 맵에 사용자 정의 주석을 구현하는 부분으로 넘어가 봅시다.\n\n```swift\nextension ViewController: MKMapViewDelegate {\n    \n    func mapView(_ mapView: MKMapView, viewFor annotation: MKAnnotation) -> MKAnnotationView? {\n        guard let annotation = annotation as? CustomAnnotation else {\n            return nil\n        }\n        let identifier = \"CustomAnnotationView\"\n        var annotationView = mapView.dequeueReusableAnnotationView(withIdentifier: identifier) as? MKPinAnnotationView\n        \n        if annotationView == nil {\n            annotationView = MKPinAnnotationView(annotation: annotation, reuseIdentifier: identifier)\n            annotationView?.canShowCallout = true\n        } else {\n            annotationView?.annotation = annotation\n        }\n        return annotationView\n    }\n}\n```\n\n다음으로 리다라를 따라가며\n\n```swift\nextension ViewController {\n    func mapView(_ mapView: MKMapView, rendererFor overlay: MKOverlay) -> MKOverlayRenderer {\n        if overlay is MKPolyline {\n            let renderer = MKPolylineRenderer(overlay: overlay)\n            renderer.strokeColor = UIColor.systemTeal\n            renderer.lineWidth = 6\n            return renderer\n        }\n        return MKOverlayRenderer(overlay: overlay)\n    }\n}\n```\n\n<div class=\"content-ad\"></div>\n\n위의 코드는 지도에 이동 (배송) 경로를 포함하는 스트로크 라인을 보여주는 데 도움이 됩니다.\n\n이제, 주요 기능이 구현된 섹션으로 이동해 보겠습니다.\n\n```js\n// MapKit에서 지도의 주요 구성\n    private func configureMap() {\n        mapView.delegate = self\n        \n        let pathCoordinates = [\n            CLLocationCoordinate2D(latitude: Double(startLatitude)!, longitude: Double(startLongitude)!),\n            CLLocationCoordinate2D(latitude: Double(endLatitude)!, longitude: Double(endLongitude)!),\n        ]\n        \n        let annotation = CustomAnnotation(coordinates: pathCoordinates, title: \"Moving Pins\")\n        mapView.addAnnotation(annotation)\n        \n        let regionRadius: CLLocationDistance = 350\n        let region = MKCoordinateRegion(center: pathCoordinates.first!, latitudinalMeters: regionRadius, longitudinalMeters: regionRadius)\n        \n        let request = MKDirections.Request()\n        request.source = MKMapItem(placemark: MKPlacemark(coordinate: pathCoordinates[0]))\n        request.destination = MKMapItem(placemark: MKPlacemark(coordinate: pathCoordinates[1]))\n        request.transportType = .automobile\n        \n        let directions = MKDirections(request: request)\n        directions.calculate { (response, error) in\n            guard let route = response?.routes.first else {\n                if let error = error {\n                    print(\"방향을 가져오는 중 에러 발생: \\(error.localizedDescription)\")\n                }\n                return\n            }\n            self.mapView.addOverlay(route.polyline)\n            self.addPinAndFollowRoute(route: route, duration: TimeInterval(self.timedVariable))\n        }\n        mapView.setRegion(region, animated: true)\n    }\n    \n    // 배달원용 경로 따르는 알고리즘\n    func addPinAndFollowRoute(route: MKRoute, duration: TimeInterval) {\n        let pin = MKPointAnnotation()\n        pin.coordinate = route.polyline.coordinate\n        mapView.addAnnotation(pin)\n        \n        var elapsedTime: TimeInterval = 0.0\n        let totalDuration = duration\n        let pointCount = route.polyline.pointCount\n        \n        Timer.scheduledTimer(withTimeInterval: 0.01, repeats: true) { timer in\n            elapsedTime += 0.01\n            \n            if elapsedTime >= totalDuration {\n                self.showAlert()\n                self.ordertitle.text = \"주문 배달 완료!! 🎉🎉 \"\n                timer.invalidate()\n                return\n            }\n            \n            let fraction = elapsedTime / totalDuration\n            let index = Int(fraction * Double(pointCount - 1))\n            \n            if index < pointCount - 1 {\n                let startCoordinate = route.polyline.points()[index].coordinate\n                let endCoordinate = route.polyline.points()[index + 1].coordinate\n                let interpolatedCoordinate = self.interpolateCoordinate(startCoordinate, endCoordinate, fraction)\n                \n                UIView.animate(withDuration: 0.01) { // 부드러운 이동을 위한 애니메이션 시간 감소\n                    pin.coordinate = interpolatedCoordinate\n                }\n            }\n        }\n    }\n\n    func interpolateCoordinate(_ start: CLLocationCoordinate2D, _ end: CLLocationCoordinate2D, _ fraction: Double) -> CLLocationCoordinate2D {\n        let lat = start.latitude + (end.latitude - start.latitude) * fraction\n        let lon = start.longitude + (end.longitude - start.longitude) * fraction\n        return CLLocationCoordinate2D(latitude: lat, longitude: lon)\n    }\n    \n    // 주문 배달 메시지\n    func showAlert() {\n          let alert = UIAlertController(title: \"주문 배달 완료\", message: \"식사를 즐기세요\", preferredStyle: .alert)\n          let okAction = UIAlertAction(title: \"확인\", style: .default) { _ in\n              // 필요하다면 확인 작업 처리\n          }\n          alert.addAction(okAction)\n          present(alert, animated: true, completion: nil)\n      }\n\n}\n```\n\npathCoordinates는 시작 및 끝 위치의 좌표를 정의합니다.\n\n<div class=\"content-ad\"></div>\n\n```swift\nregion 변수는 우리의 배송 위치가 위치한 지역만 표시하는 데 사용됩니다.\n\nfunc addPinAndFollowRoute(route: MKRoute, duration: TimeInterval)\n\n위의 함수는 경로를 따라가는 데 사용됩니다. 여행을 완료하는 데 필요한 시간과 경로를 정의할 수 있습니다.\n\nvar errorMessage: String?\nvar startLatitude: String = \"0\"\nvar startLongitude: String = \"0.0\"\nvar endLatitude: String = \"0.0\"\nvar endLongitude: String = \"0.0\"\nvar timedVariable: Int = 1\n```\n\n<div class=\"content-ad\"></div>\n\n위 변수들은 ViewController에 정의되어 있으며 하드 코딩된 값이나 API 응답에서 가져온 값으로 수정할 수 있습니다.\n\nconfigureMap() 내에서 route의 정의 (이미 위 코드에 포함되어 있음)\n\n```js\nguard let route = response?.routes.first else {\n                if let error = error {\n                    print(\"Error getting directions: \\(error.localizedDescription)\")\n                }\n                return\n            }\n```\n\n그리고 여기서 우리 애플리케이션이 완료됩니다.\n\n<div class=\"content-ad\"></div>\n\nGitHub 저장소 및 YouTube 비디오를 첨부했어요. 코드베이스와 애플리케이션 데모를 확인해보세요!","ogImage":{"url":"/assets/img/2024-05-17-DeliveryapplivetrackingimplementationusingAppleMapsiniOS_0.png"},"coverImage":"/assets/img/2024-05-17-DeliveryapplivetrackingimplementationusingAppleMapsiniOS_0.png","tag":["Tech"],"readingTime":8},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"UIKit 및 MapKit을 사용하여 Apple 지도에서 라이브 추적 구현을 성취했습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/VSofficial/Zomato-Live-tracking-Clone-iOS-\",\n        children: \"GitHub Repo\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.youtube.com/shorts/Qzi_vZw4p4Q\",\n        children: \"YouTube\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"지도에서 MKAnnoatation을 사용하여 사용자 정의 주석(맵 마커)을 정의하는 것으로 시작해 봅시다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAnnotation\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"NSObject\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MKAnnotation\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"coordinate\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CLLocationCoordinate2D\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"title\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"String\"\n        }), \"?\\n    private \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"pathCoordinates\"\n        }), \": [\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CLLocationCoordinate2D\"\n        }), \"]\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"init\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"coordinates: [CLLocationCoordinate2D], title: \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"String\"\n          }), \"?\"]\n        }), \") {\\n        self.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"coordinate\"\n        }), \" = coordinates.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"first\"\n        }), \" ?? \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CLLocationCoordinate2D\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"latitude\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"longitude\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \")\\n        self.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"title\"\n        }), \" = title\\n        self.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"pathCoordinates\"\n        }), \" = coordinates\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"super\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"init\"\n        }), \"()\\n    }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그런 다음 맵에서 마커의 사용자 정의 뷰(심볼)를 생성합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 지도의 주석용 사용자 정의 뷰\"\n        }), \"\\npublic \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"class\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAnnotationView\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MKAnnotationView\"\n        }), \" {\\n    override \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"init\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"annotation: MKAnnotation?, reuseIdentifier: \", _jsx(_components.span, {\n            className: \"hljs-built_in\",\n            children: \"String\"\n          }), \"?\"]\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-variable language_\",\n          children: \"super\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"init\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"annotation\"\n        }), \": annotation, \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"reuseIdentifier\"\n        }), \": reuseIdentifier)\\n        self.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"image\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UIImage\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"named\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"delivery\\\"\"\n        }), \")\\n    }\\n    \\n    required init?(coder \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"aDecoder\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"NSCoder\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"fatalError\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"init(coder:) has not been implemented\\\"\"\n        }), \")\\n    }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제 우리가 MKMapViewDelegate를 사용하여 맵에 사용자 정의 주석을 구현하는 부분으로 넘어가 봅시다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-swift\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"extension\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ViewController\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MKMapViewDelegate\"\n        }), \" {\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"mapView\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"_\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"mapView\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKMapView\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"viewFor\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"annotation\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKAnnotation\"\n        }), \") -> \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKAnnotationView\"\n        }), \"? {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"guard\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" annotation \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" annotation \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"as?\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"CustomAnnotation\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"else\"\n        }), \" {\\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"nil\"\n        }), \"\\n        }\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" identifier \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"CustomAnnotationView\\\"\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" annotationView \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" mapView.dequeueReusableAnnotationView(withIdentifier: identifier) \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"as?\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKPinAnnotationView\"\n        }), \"\\n        \\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" annotationView \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"==\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"nil\"\n        }), \" {\\n            annotationView \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKPinAnnotationView\"\n        }), \"(annotation: annotation, reuseIdentifier: identifier)\\n            annotationView\", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"?\"\n        }), \".canShowCallout \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \"\\n        } \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"else\"\n        }), \" {\\n            annotationView\", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"?\"\n        }), \".annotation \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" annotation\\n        }\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" annotationView\\n    }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음으로 리다라를 따라가며\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-swift\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"extension\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"ViewController\"\n        }), \" {\\n    \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"mapView\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"_\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"mapView\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKMapView\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"rendererFor\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"overlay\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKOverlay\"\n        }), \") -> \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKOverlayRenderer\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" overlay \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"is\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKPolyline\"\n        }), \" {\\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" renderer \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKPolylineRenderer\"\n        }), \"(overlay: overlay)\\n            renderer.strokeColor \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"UIColor\"\n        }), \".systemTeal\\n            renderer.lineWidth \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"6\"\n        }), \"\\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" renderer\\n        }\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKOverlayRenderer\"\n        }), \"(overlay: overlay)\\n    }\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"위의 코드는 지도에 이동 (배송) 경로를 포함하는 스트로크 라인을 보여주는 데 도움이 됩니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이제, 주요 기능이 구현된 섹션으로 이동해 보겠습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// MapKit에서 지도의 주요 구성\"\n        }), \"\\n    private func \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"configureMap\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n        mapView.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"delegate\"\n        }), \" = self\\n        \\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" pathCoordinates = [\\n            \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CLLocationCoordinate2D\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"latitude\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Double\"\n        }), \"(startLatitude)!, \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"longitude\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Double\"\n        }), \"(startLongitude)!),\\n            \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CLLocationCoordinate2D\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"latitude\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Double\"\n        }), \"(endLatitude)!, \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"longitude\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Double\"\n        }), \"(endLongitude)!),\\n        ]\\n        \\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" annotation = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CustomAnnotation\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"coordinates\"\n        }), \": pathCoordinates, \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"title\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Moving Pins\\\"\"\n        }), \")\\n        mapView.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"addAnnotation\"\n        }), \"(annotation)\\n        \\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"regionRadius\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CLLocationDistance\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"350\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" region = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MKCoordinateRegion\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"center\"\n        }), \": pathCoordinates.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"first\"\n        }), \"!, \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"latitudinalMeters\"\n        }), \": regionRadius, \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"longitudinalMeters\"\n        }), \": regionRadius)\\n        \\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" request = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MKDirections\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Request\"\n        }), \"()\\n        request.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"source\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MKMapItem\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"placemark\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MKPlacemark\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"coordinate\"\n        }), \": pathCoordinates[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"]))\\n        request.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"destination\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MKMapItem\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"placemark\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MKPlacemark\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"coordinate\"\n        }), \": pathCoordinates[\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \"]))\\n        request.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"transportType\"\n        }), \" = .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"automobile\"\n        }), \"\\n        \\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" directions = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MKDirections\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"request\"\n        }), \": request)\\n        directions.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"calculate\"\n        }), \" { (response, error) \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"in\"\n        }), \"\\n            guard \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" route = response?.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"routes\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"first\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"else\"\n        }), \" {\\n                \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" error = error {\\n                    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"print\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"방향을 가져오는 중 에러 발생: \\\\(error.localizedDescription)\\\"\"\n        }), \")\\n                }\\n                \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \"\\n            }\\n            self.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"mapView\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"addOverlay\"\n        }), \"(route.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"polyline\"\n        }), \")\\n            self.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"addPinAndFollowRoute\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"route\"\n        }), \": route, \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"duration\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"TimeInterval\"\n        }), \"(self.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"timedVariable\"\n        }), \"))\\n        }\\n        mapView.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"setRegion\"\n        }), \"(region, \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"animated\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \")\\n    }\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 배달원용 경로 따르는 알고리즘\"\n        }), \"\\n    func \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"addPinAndFollowRoute\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"route: MKRoute, duration: TimeInterval\"\n        }), \") {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" pin = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"MKPointAnnotation\"\n        }), \"()\\n        pin.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"coordinate\"\n        }), \" = route.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"polyline\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"coordinate\"\n        }), \"\\n        mapView.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"addAnnotation\"\n        }), \"(pin)\\n        \\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"elapsedTime\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"TimeInterval\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.0\"\n        }), \"\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" totalDuration = duration\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" pointCount = route.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"polyline\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"pointCount\"\n        }), \"\\n        \\n        \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Timer\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"scheduledTimer\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"withTimeInterval: \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0.01\"\n          }), \", repeats: \", _jsx(_components.span, {\n            className: \"hljs-literal\",\n            children: \"true\"\n          })]\n        }), \") { timer \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"in\"\n        }), \"\\n            elapsedTime += \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.01\"\n        }), \"\\n            \\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" elapsedTime >= totalDuration {\\n                self.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"showAlert\"\n        }), \"()\\n                self.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"ordertitle\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"text\"\n        }), \" = \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"주문 배달 완료!! 🎉🎉 \\\"\"\n        }), \"\\n                timer.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"invalidate\"\n        }), \"()\\n                \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \"\\n            }\\n            \\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" fraction = elapsedTime / totalDuration\\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" index = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Int\"\n        }), \"(fraction * \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Double\"\n        }), \"(pointCount - \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \"))\\n            \\n            \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" index < pointCount - \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \" {\\n                \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" startCoordinate = route.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"polyline\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"points\"\n        }), \"()[index].\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"coordinate\"\n        }), \"\\n                \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" endCoordinate = route.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"polyline\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"points\"\n        }), \"()[index + \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \"].\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"coordinate\"\n        }), \"\\n                \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" interpolatedCoordinate = self.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"interpolateCoordinate\"\n        }), \"(startCoordinate, endCoordinate, fraction)\\n                \\n                \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UIView\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"animate\"\n        }), \"(\", _jsxs(_components.span, {\n          className: \"hljs-params\",\n          children: [\"withDuration: \", _jsx(_components.span, {\n            className: \"hljs-number\",\n            children: \"0.01\"\n          })]\n        }), \") { \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 부드러운 이동을 위한 애니메이션 시간 감소\"\n        }), \"\\n                    pin.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"coordinate\"\n        }), \" = interpolatedCoordinate\\n                }\\n            }\\n        }\\n    }\\n\\n    func \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"interpolateCoordinate\"\n        }), \"(_ \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"start\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CLLocationCoordinate2D\"\n        }), \", _ \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"end\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CLLocationCoordinate2D\"\n        }), \", _ \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"fraction\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Double\"\n        }), \") -> \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CLLocationCoordinate2D\"\n        }), \" {\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" lat = start.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"latitude\"\n        }), \" + (end.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"latitude\"\n        }), \" - start.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"latitude\"\n        }), \") * fraction\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" lon = start.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"longitude\"\n        }), \" + (end.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"longitude\"\n        }), \" - start.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"longitude\"\n        }), \") * fraction\\n        \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"CLLocationCoordinate2D\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"latitude\"\n        }), \": lat, \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"longitude\"\n        }), \": lon)\\n    }\\n    \\n    \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 주문 배달 메시지\"\n        }), \"\\n    func \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"showAlert\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\"\n        }), \") {\\n          \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" alert = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UIAlertController\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"title\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"주문 배달 완료\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"message\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"식사를 즐기세요\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"preferredStyle\"\n        }), \": .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"alert\"\n        }), \")\\n          \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" okAction = \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"UIAlertAction\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"title\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"확인\\\"\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"style\"\n        }), \": .\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"default\"\n        }), \") { _ \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"in\"\n        }), \"\\n              \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"// 필요하다면 확인 작업 처리\"\n        }), \"\\n          }\\n          alert.\", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"addAction\"\n        }), \"(okAction)\\n          \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"present\"\n        }), \"(alert, \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"animated\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: \"true\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"completion\"\n        }), \": nil)\\n      }\\n\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"pathCoordinates는 시작 및 끝 위치의 좌표를 정의합니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-swift\",\n        children: [\"region 변수는 우리의 배송 위치가 위치한 지역만 표시하는 데 사용됩니다.\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"func\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"addPinAndFollowRoute\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"route\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"MKRoute\"\n        }), \", \", _jsx(_components.span, {\n          className: \"hljs-params\",\n          children: \"duration\"\n        }), \": \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"TimeInterval\"\n        }), \")\\n\\n위의 함수는 경로를 따라가는 데 사용됩니다. 여행을 완료하는 데 필요한 시간과 경로를 정의할 수 있습니다.\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" errorMessage: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"String\"\n        }), \"?\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" startLatitude: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"0\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" startLongitude: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"0.0\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" endLatitude: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"0.0\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" endLongitude: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"String\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"0.0\\\"\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"var\"\n        }), \" timedVariable: \", _jsx(_components.span, {\n          className: \"hljs-type\",\n          children: \"Int\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"위 변수들은 ViewController에 정의되어 있으며 하드 코딩된 값이나 API 응답에서 가져온 값으로 수정할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"configureMap() 내에서 route의 정의 (이미 위 코드에 포함되어 있음)\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"guard \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" route = response?.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"routes\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"first\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"else\"\n        }), \" {\\n                \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"if\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"let\"\n        }), \" error = error {\\n                    \", _jsx(_components.span, {\n          className: \"hljs-title function_\",\n          children: \"print\"\n        }), \"(\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Error getting directions: \\\\(error.localizedDescription)\\\"\"\n        }), \")\\n                }\\n                \", _jsx(_components.span, {\n          className: \"hljs-keyword\",\n          children: \"return\"\n        }), \"\\n            }\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그리고 여기서 우리 애플리케이션이 완료됩니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GitHub 저장소 및 YouTube 비디오를 첨부했어요. 코드베이스와 애플리케이션 데모를 확인해보세요!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}
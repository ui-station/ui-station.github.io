{"pageProps":{"post":{"title":"리눅스 시스템을 위한 10가지 문제 해결 명령어","description":"","date":"2024-05-23 15:10","slug":"2024-05-23-10TroubleshootingCommandsforLinuxSystems","content":"\n\n Markdown\n![이미지](/assets/img/2024-05-23-10TroubleshootingCommandsforLinuxSystems_0.png)\n\n# 1. CPU를 가장 많이 사용하는 프로세스 확인하는 방법\n\n```js\n$ ps H -eo pid,pcpu | sort -nk2 | tail\n31396  0.6\n31396  0.6\n31396  0.6\n31396  0.6\n31396  0.6\n31396  0.6\n31396  0.6\n31396  0.6\n30904  1.0\n30914  1.0\n```\n\n가장 CPU를 많이 사용하는 PID는 30914입니다. 음성오버: 실제로는 31396입니다.\n\n\n<div class=\"content-ad\"></div>\n\n# 2. 가장 CPU 소모가 많은 프로세스의 PID에 해당하는 서비스 이름은 무엇인가요?\n\n첫 번째 방법:\n\n```js\n$ ps aux | fgrep 30914\nwork 30914  1.0  0.8 309568 71668 ?  Sl   Feb02 124:44 ./router2 –conf=rs.conf\n```\n\n해당 프로세스는 ./router2입니다.\n\n<div class=\"content-ad\"></div>\n\n번호 두 방법:\n\n```js\n$ ll /proc/30914\nlrwxrwxrwx  1 work work 0 2월 10일 13:27 cwd -> /home/work/im-env/router2\nlrwxrwxrwx  1 work work 0 2월 10일 13:27 exe -> /home/work/im-env/router2/router2\n```\n\n음성 안내: 멋져요, 전체 경로가 모두 나와 있네요.\n\n# 3. 특정 포트의 연결 상태를 확인하는 방법은 무엇인가요?\n\n<div class=\"content-ad\"></div>\n\nMethod One:\n\n```js\n$ netstat -lap | fgrep 22022\ntcp        0      0 1.2.3.4:22022          *:*                         LISTEN      31396/imui\ntcp        0      0 1.2.3.4:22022          1.2.3.4:46642          ESTABLISHED 31396/imui\ntcp        0      0 1.2.3.4:22022          1.2.3.4:46640          ESTABLISHED 31396/imui\n```\n\nMethod Two:\n\n```js\n$ /usr/sbin/lsof -i :22022\nCOMMAND   PID USER   FD   TYPE   DEVICE SIZE NODE NAME\nrouter  30904 work   50u  IPv4 69065770       TCP 1.2.3.4:46638->1.2.3.4:22022 (ESTABLISHED)\nrouter  30904 work   51u  IPv4 69065772       TCP 1.2.3.4:46639->1.2.3.4:22022 (ESTABLISHED)\nrouter  30904 work   52u  IPv4 69065774       TCP 1.2.3.4:46640->1.2.3.4:22022 (ESTABLISHED)\n```\n\n<div class=\"content-ad\"></div>\n\n# 4. 기계의 연결 수를 확인하는 방법은?\n\n1.2.3.4의 SSH 데몬(sshd)이 22번 포트에서 수신 대기 중입니다. 1.2.3.4의 sshd 서비스에 대한 다양한 상태의 연결 수 (TIME_WAIT/CLOSE_WAIT/ESTABLISHED)를 어떻게 카운트할 수 있을까요?\n\n```js\n$ netstat -n | grep 1.2.3.4:22 | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'\n\n$ netstat -lnpta | grep ssh | egrep \"TIME_WAIT | CLOSE_WAIT | ESTABLISHED\"\n```\n\n참고: netstat은 네트워크 연결 문제를 추적하는 데 자주 사용되는 도구이며, grep/awk와 결합하면 강력한 도구가 됩니다.\n\n<div class=\"content-ad\"></div>\n\n# 5. 사전 백업 로그에서 데이터 쿼리하기\n\n사전 백업 서비스.2022-06-26.log.bz2 로그에서 키워드 1.2.3.4을 포함하는 항목은 몇 개인가요?\n\n```js\n$ bzcat service.2022-06-26.log.bz2 | grep '1.2.3.4' | wc -l\n\n$ bzgrep '1.2.3.4' service.2022-06-26.log.bz2 | wc -l\n\n$ less service.2022-06-26.log.bz2 | grep '10.37.9.11' | wc -l\n```\n\n참고: 온라인 로그 파일은 일반적으로 bz2로 압축된 후 보존됩니다. 쿼리를 위해 해제하면 많은 공간과 시간이 소비됩니다. 따라서, 연구 및 개발 동료들이 숙달해야할 bzcat 및 bzgrep는 필수 도구입니다.\n\n<div class=\"content-ad\"></div>\n\n# 6. 백업 서비스 팁\n\n백업을 위해 /opt/web/service_web 디렉토리를 패킹하되 로그 디렉토리는 제외하고, 패킹한 파일을 /opt/backup 디렉토리에 저장하세요.\n\n```js\n$ tar -zcvf /opt/backup/service_web.tar.gz \\\n    -exclude /opt/web/service_web/logs \\\n    /opt/web/service_web\n```\n\n참고: 이 명령은 온라인 애플리케이션에서 흔히 사용됩니다. 프로젝트를 패킹하고 이전해야 할 때 로그 디렉토리를 제외해야 할 때가 종종 있습니다. 이런 시나리오에서는 `exclude` 매개변수를 잘 활용하는 것이 중요합니다.\n\n<div class=\"content-ad\"></div>\n\n# 7. 쓰레드 카운트 조회\n\n서버의 서비스를 위해 실행 중인 전체 쓰레드 수를 조회합니다. 기계의 쓰레드 수가 경고 임계값을 초과할 때 해당 프로세스와 쓰레드 정보를 빠르게 식별해야 합니다.\n\n```js\n$ ps -eLf | wc -l\n\n$ pstree -p | wc -l\n```\n\n# 8. 디스크 경고, 가장 큰 파일 비우기\n\n<div class=\"content-ad\"></div>\n\n많은 예외 로그 파일을 찾아 서버에서 실행 중인 Tomcat 서버에서 생성된 파일을 공간을 확보하세요. 파일에 \"log\" 키워드가 포함되어 있고 1GB보다 큰 경우를 가정합니다.\n\n단계 1: 파일 찾기.\n\n```js\n$ find / -type f -name \"*log*\" | xargs ls -lSh | more\n\n$ du -a / | sort -rn | grep log | more\n\n$ find / -name '*log*' -size +1000M -exec du -h {} \\;\n```\n\n단계 2: 파일을 비우기.\n\n<div class=\"content-ad\"></div>\n\n가정적으로 찾은 파일이 a.log인 경우, 해당 파일을 완전히 비우는 올바른 방법은:\n\n```js\n$ echo \"\" > a.log\n```\n\n이렇게 하면 파일 공간이 즉시 해제됩니다.\n\n많은 사람들이 사용하는 방법:\n\n<div class=\"content-ad\"></div>\n\n```js\n$ rm -rf a.log\n```\n\n파일을 삭제하면서도 Tomcat 서비스가 여전히 실행 중인 경우 공간이 즉시 해제되지 않을 수 있습니다. 공간을 확보하려면 Tomcat을 다시 시작해야 합니다.\n\n# 9. 파일 표시, 주석 필터링\n\n서버.conf 파일을 표시하고 #로 시작하는 주석 줄을 마스킹합니다.\n\n<div class=\"content-ad\"></div>\n\n```js\n$ sed -n '/^[#]/!p' server.conf\n\n$ sed -e '/^#/d' server.conf\n\n$ grep -v \"^#\" server.conf\n```\n\n# 10. 디스크 IO 예외 해결 방법\n\n디스크 IO 예외, 예를 들어 느린 쓰기 또는 높은 현재 사용량과 같은 문제를 해결하는 방법을 알아보세요. 높은 디스크 IO 예외를 일으키는 프로세스 ID를 식별해야 합니다.\n\n단계 1:\n\n<div class=\"content-ad\"></div>\n\n```sh\n$ iotop -o\n```\n\n현재 디스크에 쓰기 중인 모든 프로세스 ID를 보십시오.\n\n단계 2: 만약 쓰기 표시기가 낮고 주요 쓰기 작업이 거의 없다면, 디스크 자체를 확인해야 합니다. 시스템을 확인할 수 있습니다.\n\n```sh\n$ dmesg\n```\n\n<div class=\"content-ad\"></div>\n\n차후에 한 번 `/var/log/message` 파일을 확인해보세요. 여기에 어떤 디스크 오류 메시지가 있는지 확인할 수 있어요. 동시에, 쓰기 속도가 느린 디스크에 빈 파일을 만들어보세요. 디스크의 고장으로 인해 쓰기가 안 되는지 확인할 수 있어요.","ogImage":{"url":"/assets/img/2024-05-23-10TroubleshootingCommandsforLinuxSystems_0.png"},"coverImage":"/assets/img/2024-05-23-10TroubleshootingCommandsforLinuxSystems_0.png","tag":["Tech"],"readingTime":5},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Markdown\\n\", _jsx(_components.img, {\n        src: \"/assets/img/2024-05-23-10TroubleshootingCommandsforLinuxSystems_0.png\",\n        alt: \"이미지\"\n      })]\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"1. CPU를 가장 많이 사용하는 프로세스 확인하는 방법\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ ps H -eo pid,pcpu | sort -nk2 | tail\\n\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"31396\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.6\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"31396\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.6\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"31396\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.6\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"31396\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.6\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"31396\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.6\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"31396\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.6\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"31396\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.6\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"31396\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.6\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30904\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.0\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30914\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.0\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"가장 CPU를 많이 사용하는 PID는 30914입니다. 음성오버: 실제로는 31396입니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"2. 가장 CPU 소모가 많은 프로세스의 PID에 해당하는 서비스 이름은 무엇인가요?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"첫 번째 방법:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ ps aux | fgrep \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30914\"\n        }), \"\\nwork \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30914\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.0\"\n        }), \"  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0.8\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"309568\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"71668\"\n        }), \" ?  \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Sl\"\n        }), \"   \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"Feb02\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"124\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"44\"\n        }), \" ./router2 –conf=rs.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"conf\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"해당 프로세스는 ./router2입니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"번호 두 방법:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ ll /proc/\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30914\"\n        }), \"\\nlrwxrwxrwx  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \" work work \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \"월 \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \"일 \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"13\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"27\"\n        }), \" cwd -> \", _jsx(_components.span, {\n          className: \"hljs-regexp\",\n          children: \"/home/\"\n        }), \"work/im-env/router2\\nlrwxrwxrwx  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \" work work \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), \"월 \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"10\"\n        }), \"일 \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"13\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"27\"\n        }), \" exe -> \", _jsx(_components.span, {\n          className: \"hljs-regexp\",\n          children: \"/home/\"\n        }), \"work/im-env/router2/router2\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"음성 안내: 멋져요, 전체 경로가 모두 나와 있네요.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"3. 특정 포트의 연결 상태를 확인하는 방법은 무엇인가요?\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Method One:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ netstat -lap | fgrep \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"22022\"\n        }), \"\\ntcp        \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"      \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"22022\"\n        }), \"          *:*                         \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"LISTEN\"\n        }), \"      \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"31396\"\n        }), \"/imui\\ntcp        \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"      \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"22022\"\n        }), \"          \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"46642\"\n        }), \"          \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"ESTABLISHED\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"31396\"\n        }), \"/imui\\ntcp        \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \"      \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"0\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"22022\"\n        }), \"          \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"46640\"\n        }), \"          \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"ESTABLISHED\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"31396\"\n        }), \"/imui\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Method Two:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ /usr/sbin/lsof -i :\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"22022\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"COMMAND\"\n        }), \"   \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"PID\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"USER\"\n        }), \"   \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"FD\"\n        }), \"   \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"TYPE\"\n        }), \"   \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"DEVICE\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"SIZE\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"NODE\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"NAME\"\n        }), \"\\nrouter  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30904\"\n        }), \" work   50u  \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"IPv4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"69065770\"\n        }), \"       \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"TCP\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"46638\"\n        }), \"->\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"22022\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"ESTABLISHED\"\n        }), \")\\nrouter  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30904\"\n        }), \" work   51u  \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"IPv4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"69065772\"\n        }), \"       \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"TCP\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"46639\"\n        }), \"->\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"22022\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"ESTABLISHED\"\n        }), \")\\nrouter  \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"30904\"\n        }), \" work   52u  \", _jsx(_components.span, {\n          className: \"hljs-title class_\",\n          children: \"IPv4\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"69065774\"\n        }), \"       \", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"TCP\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"46640\"\n        }), \"->\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"22022\"\n        }), \" (\", _jsx(_components.span, {\n          className: \"hljs-variable constant_\",\n          children: \"ESTABLISHED\"\n        }), \")\\n\"]\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"4. 기계의 연결 수를 확인하는 방법은?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"1.2.3.4의 SSH 데몬(sshd)이 22번 포트에서 수신 대기 중입니다. 1.2.3.4의 sshd 서비스에 대한 다양한 상태의 연결 수 (TIME_WAIT/CLOSE_WAIT/ESTABLISHED)를 어떻게 카운트할 수 있을까요?\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ netstat -n | grep \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1.2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".4\"\n        }), \":\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"22\"\n        }), \" | awk \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'\"\n        }), \"\\n\\n$ netstat -lnpta | grep ssh | egrep \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"TIME_WAIT | CLOSE_WAIT | ESTABLISHED\\\"\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"참고: netstat은 네트워크 연결 문제를 추적하는 데 자주 사용되는 도구이며, grep/awk와 결합하면 강력한 도구가 됩니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"5. 사전 백업 로그에서 데이터 쿼리하기\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"사전 백업 서비스.2022-06-26.log.bz2 로그에서 키워드 1.2.3.4을 포함하는 항목은 몇 개인가요?\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ bzcat service\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".2022\"\n        }), \"-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"06\"\n        }), \"-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"26.\"\n        }), \"log.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"bz2\"\n        }), \" | grep \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'1.2.3.4'\"\n        }), \" | wc -l\\n\\n$ bzgrep \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'1.2.3.4'\"\n        }), \" service\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".2022\"\n        }), \"-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"06\"\n        }), \"-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"26.\"\n        }), \"log.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"bz2\"\n        }), \" | wc -l\\n\\n$ less service\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \".2022\"\n        }), \"-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"06\"\n        }), \"-\", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"26.\"\n        }), \"log.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"bz2\"\n        }), \" | grep \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'10.37.9.11'\"\n        }), \" | wc -l\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"참고: 온라인 로그 파일은 일반적으로 bz2로 압축된 후 보존됩니다. 쿼리를 위해 해제하면 많은 공간과 시간이 소비됩니다. 따라서, 연구 및 개발 동료들이 숙달해야할 bzcat 및 bzgrep는 필수 도구입니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"6. 백업 서비스 팁\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"백업을 위해 /opt/web/service_web 디렉토리를 패킹하되 로그 디렉토리는 제외하고, 패킹한 파일을 /opt/backup 디렉토리에 저장하세요.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ tar -zcvf /opt/backup/service_web.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"tar\"\n        }), \".\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"gz\"\n        }), \" \\\\\\n    -exclude /opt/web/service_web/logs \\\\\\n    /opt/web/service_web\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"참고: 이 명령은 온라인 애플리케이션에서 흔히 사용됩니다. 프로젝트를 패킹하고 이전해야 할 때 로그 디렉토리를 제외해야 할 때가 종종 있습니다. 이런 시나리오에서는 \", _jsx(_components.code, {\n        children: \"exclude\"\n      }), \" 매개변수를 잘 활용하는 것이 중요합니다.\"]\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"7. 쓰레드 카운트 조회\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"서버의 서비스를 위해 실행 중인 전체 쓰레드 수를 조회합니다. 기계의 쓰레드 수가 경고 임계값을 초과할 때 해당 프로세스와 쓰레드 정보를 빠르게 식별해야 합니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-js\",\n        children: \"$ ps -eLf | wc -l\\n\\n$ pstree -p | wc -l\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"8. 디스크 경고, 가장 큰 파일 비우기\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"많은 예외 로그 파일을 찾아 서버에서 실행 중인 Tomcat 서버에서 생성된 파일을 공간을 확보하세요. 파일에 \\\"log\\\" 키워드가 포함되어 있고 1GB보다 큰 경우를 가정합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"단계 1: 파일 찾기.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ find / -type f -name \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"*log*\\\"\"\n        }), \" | xargs ls -lSh | more\\n\\n$ du -a / | sort -rn | grep log | more\\n\\n$ find / -name \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'*log*'\"\n        }), \" -size +1000M -exec du -h {} \\\\;\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"단계 2: 파일을 비우기.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"가정적으로 찾은 파일이 a.log인 경우, 해당 파일을 완전히 비우는 올바른 방법은:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ echo \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"\\\"\"\n        }), \" > a.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"log\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이렇게 하면 파일 공간이 즉시 해제됩니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"많은 사람들이 사용하는 방법:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ rm -rf a.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"log\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"파일을 삭제하면서도 Tomcat 서비스가 여전히 실행 중인 경우 공간이 즉시 해제되지 않을 수 있습니다. 공간을 확보하려면 Tomcat을 다시 시작해야 합니다.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"9. 파일 표시, 주석 필터링\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"서버.conf 파일을 표시하고 #로 시작하는 주석 줄을 마스킹합니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-js\",\n        children: [\"$ sed -n \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'/^[#]/!p'\"\n        }), \" server.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"conf\"\n        }), \"\\n\\n$ sed -e \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'/^#/d'\"\n        }), \" server.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"conf\"\n        }), \"\\n\\n$ grep -v \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"^#\\\"\"\n        }), \" server.\", _jsx(_components.span, {\n          className: \"hljs-property\",\n          children: \"conf\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"10. 디스크 IO 예외 해결 방법\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"디스크 IO 예외, 예를 들어 느린 쓰기 또는 높은 현재 사용량과 같은 문제를 해결하는 방법을 알아보세요. 높은 디스크 IO 예외를 일으키는 프로세스 ID를 식별해야 합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"단계 1:\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-sh\",\n        children: \"$ iotop -o\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"현재 디스크에 쓰기 중인 모든 프로세스 ID를 보십시오.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"단계 2: 만약 쓰기 표시기가 낮고 주요 쓰기 작업이 거의 없다면, 디스크 자체를 확인해야 합니다. 시스템을 확인할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-sh\",\n        children: \"$ dmesg\\n\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"차후에 한 번 \", _jsx(_components.code, {\n        children: \"/var/log/message\"\n      }), \" 파일을 확인해보세요. 여기에 어떤 디스크 오류 메시지가 있는지 확인할 수 있어요. 동시에, 쓰기 속도가 느린 디스크에 빈 파일을 만들어보세요. 디스크의 고장으로 인해 쓰기가 안 되는지 확인할 수 있어요.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}
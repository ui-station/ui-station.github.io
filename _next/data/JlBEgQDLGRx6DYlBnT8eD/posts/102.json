{"pageProps":{"posts":[{"title":"ESP32와 Firebase 시작하기","description":"","date":"2024-05-18 18:42","slug":"2024-05-18-GettingstartedwithESP32andFirebase","content":"\n## IOT\n\n![Getting started with ESP32 and Firebase](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_0.png)\n\n이 튜토리얼에서는 ESP32를 Google의 Firebase 백엔드에 가장 빠르게 연결하는 방법을 보여드리겠습니다. Firebase는 개발자들이 아이디어를 신속하게 프로토타이핑할 수 있는 매우 편리한 옵션으로 자리 잡았습니다. 본 튜토리얼에서는 Apple 워치를 위한 실시간 온도 모니터링 솔루션 개발을 위한 기초 작업을 다루며, 이 기사는 ESP32와 Firebase 간의 링크 설정에 중점을 두고 있습니다. 이후 기사에서는 watchOS 애플리케이션에 중점을 둘 것입니다.\n\n# 하드웨어 요구사항\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 튜토리얼을 완료하기 위해 다음 하드웨어가 필요합니다:\n\n- ESP32 개발 보드 (어떤 ESP32 보드든 상관없습니다. 이 튜토리얼에서는 ESP32 DevKit v3를 사용할 것입니다).\n- DHT11 온도 및 습도 센서.\n\n# 백엔드 설정\n\n백엔드로 Google의 Firebase를 사용할 것이며, 시작하려면 Firebase로 이동하여 Google 계정으로 로그인하십시오.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n새 프로젝트를 생성하려면 추가 프로젝트 옵션을 선택하세요. 프로젝트 이름을 입력하고 적절한 이름을 선택한 후 파란색 계속 버튼을 선택하세요. 내 프로젝트를 \"스마트 홈이\"라고 부르겠어요.\n\n![이미지](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_1.png)\n\n이 프로젝트에 대해 구글 애널리틱스를 사용 안 함으로 설정하세요. 이 프로젝트에는 필요하지 않습니다. 마지막으로, 프로젝트를 만들기 위해 \"프로젝트 만들기\"를 선택하세요.\n\n![이미지](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_2.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nFirebase에서 프로젝트 설정을 시작합니다. 완료되면 계속 선택하고 Firebase 콘솔의 프로젝트 개요 페이지로 이동됩니다.\n\n![프로젝트 개요 페이지](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_3.png)\n\n첫 번째로 할 일은 프로젝트의 인증 옵션을 설정하는 것입니다. 왼쪽 상단의 인증 메뉴 옵션을 선택하면 인증 페이지로 이동합니다. '시작하기' 버튼을 선택하세요.\n\n![인증 페이지](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_4.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![ESP32 Firebase Tutorial Step 1](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_5.png)\n\n첫 번째 단계로 ESP32 장치에 대해 익명 로그인을 사용할 것입니다. 이후 자습서에서 더 똑똑한 로그인 방법을 만들 것입니다. 아래와 같이 익명 로그인을 활성화하고 저장 옵션을 선택하세요.\n\n![ESP32 Firebase Tutorial Step 2](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_6.png)\n\n다음으로 모든 센서 데이터를 저장할 데이터베이스를 만들어야 합니다. 이를 위해 좌측 상단에 있는 Realtime Database 메뉴 옵션을 선택하고 Realtime Database 페이지로 이동합니다. 데이터베이스 생성 메뉴를 초기화하려면 데이터베이스 생성 버튼을 선택하세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![image](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_7.png)\n\n![image](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_8.png)\n\n데이터베이스 생성 메뉴에서 가장 가까운 위치를 선택한 다음, \"다음\"을 선택하세요. 데이터베이스를 잠긴 모드 또는 테스트 모드로 초기화할 수 있는 옵션이 표시됩니다. 현재는 테스트 모드를 선택하세요. 주요 차이점은 테스트 모드에서는 30일 동안 데이터베이스에 무단 액세스를 허용하는 데이터베이스 액세스 규칙이 적용됩니다. 프로젝트를 제품으로 이동할 예정이라면 향후 이 기능을 비활성화해야 합니다. \"활성화\" 버튼을 선택하세요.\n\n![image](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_9.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n마지막으로 새로운 빈 데이터베이스가 있는 새 페이지가 나타날 것입니다. 이제 모든 준비가 끝났어요!\n\n![이미지](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_10.png)\n\n계속 진행하기 전에 임베디드 애플리케이션에서 나중에 사용할 두 가지 항목을 복사하여 보관해야 합니다. 먼저 필요한 것은 실시간 데이터베이스 URL입니다. 실시간 데이터베이스 페이지의 URL을 복사하여 찾을 수 있으며, 이 경우에는 https://smart-hommie-default-rtdb.firebaseio.com 입니다.\n\n![이미지](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_11.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n프로젝트를 API 키를 저장해야 할 두 번째 항목입니다. API 키를 얻으려면 페이지 상단 오른쪽에 있는 설정 아이콘을 선택한 다음 프로젝트 설정 메뉴 항목을 선택하여 프로젝트 설정 페이지로 이동하세요.\n\n![프로젝트 설정 페이지](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_12.png)\n\n프로젝트 설정 페이지에서 Web API 키가 표시됩니다. 이를 복사하여 저장하세요.\n\n![Web API 키](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_13.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n저희들은 임베디드 애플리케이션을 시작할 준비가 되었습니다.\n\n## 개발 환경 설정\n\n가장 먼저 해야 할 일은 ESP32 개발 환경을 설정하는 것입니다. 이 튜토리얼에서는 Visual Studio Code 및 PlatformIO 플러그인을 사용할 것입니다.\n\n만약 아직 VSCode를 설치하지 않았다면, 여기서 다운로드하고 설치해주세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아래 지침에 따라 PlatformIO를 설치해야 합니다. 모든 것이 잘 진행되었다면 아래 첨부된 이미지처럼 오른쪽 메뉴에 PlatformIO가 나타날 것입니다.\n\n![PlatformIO Menu](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_14.png)\n\n먼저 우리가 해야 할 일은 PlatformIO용 ESP32 플랫폼을 설치하는 것입니다. PlatformIO 메뉴 아이콘을 선택하여 PlatformIO 홈페이지에 들어가십시오.\n\n![PlatformIO Home Page](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_15.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n플랫폼 메뉴 옵션을 선택하고 임베디드 페이지를 선택합니다. \"Esp\"를 입력하여 Espressif 프레임워크를 찾은 다음 Espressif 32 옵션을 선택합니다. 설치 버튼을 선택하여 플랫폼을 설치합니다.\n\n![이미지](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_16.png)\n\n![이미지](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_17.png)\n\n이제 임베디드 어플리케이션을 위한 새 프로젝트를 만들어 봅시다. 홈페이지로 돌아가서 \"새 프로젝트 만들기\" 메뉴를 선택합니다. 프로젝트 위저드가 표시되며, 프로젝트에 이름을 지정하고 EPS32 보드를 선택해야 합니다. 이 프로젝트에서는 Arduino 라이브러리를 사용할 예정이므로 기본 설정을 유지하고 '완료'를 선택하세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_18.png\" />\n\n마지막으로 프로젝트에서 사용할 mobizt의 라이브러리를 추가해야 합니다. 홈페이지에서 라이브러리 페이지로 이동하고 아래 그림과 같이 FirebaseESP32 라이브러리를 검색하십시오.\n\n<img src=\"/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_19.png\" />\n\n마지막으로 아래 그림과 같이 라이브러리를 프로젝트에 추가하십시오.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_20.png\" />\n\n# 임베디드 어플리케이션\n\n프로젝트 탐색기에서 main.cpp 파일을 엽니다.\n\n<img src=\"/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_21.png\" />\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n우리 애플리케이션에서 필요한 모든 라이브러리를 불러와야 해요. Arduino 라이브러리는 기본적으로 이미 있어야 합니다:\n\n```js\n#include <Arduino.h>\n#include <WiFi.h>\n#include <FirebaseESP32.h>\n```\n\n다음으로 FirebaseESP32 라이브러리에서 사용되는 몇 가지 도우미 라이브러리를 추가해야 해요. TokenHelper 라이브러리는 토큰 생성 프로세스를 관리하는 데 사용되고, RTDBHelper 라이브러리는 Firebase Realtime Database에서 오는 데이터를 출력하기 위한 도우미 함수를 제공해요:\n\n```js\n//토큰 생성 프로세스 정보를 제공합니다.\n#include \"addons/TokenHelper.h\"\n//RTDB payload 출력 정보 및 다른 도우미 함수를 제공합니다.\n#include \"addons/RTDBHelper.h\"\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n여러 센서에서 오는 데이터를 구분하는 데 사용할 수 있는 고유한 장치 ID를 정의해야 합니다.\n\n```js\n// 장치 ID\n#define DEVICE_UID \"1X\"\n```\n\n다음으로 WiFi 자격 증명을 입력해야 합니다. WIFI_AP를 WiFi 식별자로, WIFI_PASSWORD를 WiFi 비밀번호로 대체하세요.\n\n참고: 임베디드 애플리케이션에 암호 정보를 하드코딩하는 것은 좋지 않은 생각입니다. 제품 케이스에서는 안전한 장치 등록 프로세스를 포함하는 장치 프로비저닝 전략을 적용해야 합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n// Wi-Fi 인증 정보\n#define WIFI_SSID \"WIFI_AP\"\n#define WIFI_PASSWORD \"WIFI_PASSWORD\"\n\n다음으로, Firebase 프로젝트 API 키를 저장하는 상수를 추가해야 합니다. 앞서 언급했듯이 Firebase 프로젝트 설정 페이지에서 API 키를 얻을 수 있습니다. API_KEY를 여러분의 API 키로 대체해주세요. 비슷하게 Firebase 실시간 데이터베이스 URL을 포함하여 본인의 URL로 대체해야 합니다.\n\n// 여러분의 Firebase 프로젝트 웹 API 키\n#define API_KEY \"API_KEY\"\n// 여러분의 Firebase 실시간 데이터베이스 URL\n#define DATABASE_URL \"https://smart-hommie-default-rtdb.firebaseio.com\"\n\n그 다음으로, FirebaseESP32 라이브러리의 3개 객체를 초기화해야 합니다. 이 객체는 애플리케이션을 Firebase에 연결하는 데 중요합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n먼저 유용한 몇 가지 전역 변수를 정의합니다.\n\n```js\n// 장치 위치 설정\nString device_location = \"거실\";\n// Firebase 실시간 데이터베이스 객체\nFirebaseData fbdo;\n// Firebase 인증 객체\nFirebaseAuth auth;\n// Firebase 구성 객체\nFirebaseConfig config;\n// Firebase 데이터베이스 경로\nString databasePath = \"\";\n// Firebase 고유 식별자\nString fuid = \"\";\n// 장치 부팅 후 경과된 시간을 저장합니다.\nunsigned long elapsedMillis = 0;\n// 센서 업데이트 주기를 10초로 설정합니다.\nunsigned long update_interval = 10000;\n// 초기 Firebase 업데이트를 테스트하기 위한 더미 카운터\nint count = 0;\n// 장치 인증 상태를 저장합니다.\nbool isAuthenticated = false;\n```\n\n첫 번째 필요한 함수는 WiFi 설정입니다. WiFi_Init()이라는 함수를 정의합니다. Arduino 프레임워크에서 제공하는 내장 WiFi API를 사용합니다. WiFi.begin() 함수를 사용하여 자격 증명을 사용하여 WiFi 연결을 초기화한 후, WiFi.status() 함수를 사용하여 연결이 성공적인지 300ms마다 확인한 후, WiFi.localIP() 함수를 사용하여 로컬 IP 주소를 출력합니다. 사용하고 싶을 수 있는 다른 WiFi 관련 기능은 Arduino WiFi API 설명서를 확인해주세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\nvoid Wifi_Init() {\n  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);\n  Serial.print(\"Wi-Fi에 연결 중입니다\");\n  while (WiFi.status() != WL_CONNECTED){\n    Serial.print(\".\");\n    delay(300);\n  }\n  Serial.println();\n  Serial.print(\"IP 주소로 연결됨: \");\n  Serial.println(WiFi.localIP());\n  Serial.println();\n}\n```\n\n이제 Firebase 초기화 함수를 구현해야 합니다. 이 함수는 Firebase 백엔드에 연결하고 디바이스를 인증하며 Firebase 라이브러리를 초기화합니다. 먼저 API 키와 데이터베이스 URL을 구성 객체에 전달하고 설정 시 WiFi 재연결을 활성화합니다. 그런 다음 익명으로 디바이스를 가입하려고 시도합니다. 가입이 성공하면 모든 디바이스 데이터가 기록될 데이터베이스 경로(Temp_Sensor라고 합니다.)를 정의하고, 가입이 성공하면 auth 객체에서 얻은 Firebase 고유 식별자를 통해 Firebase 식별자를 추가합니다. Firebase 인증 기능을 더 자세히 알아보려면 여기에서 라이브러리 문서를 확인하세요. 가입을 완료한 후 Firebase.begin() 함수로 Firebase 라이브러리를 초기화합니다.\n\n참고: Firebase.signUp()을 실행할 때마다 백엔드에 새로운 익명 사용자가 생성됩니다. 이는 디바이스를 켜고 끌 때마다 새로운 사용자가 생성된다는 것을 의미합니다.\n\n```js\nvoid firebase_init() {\n  // firebase API Key 구성\n  config.api_key = API_KEY;\n  // firebase 실시간 데이터베이스 URL 구성\n  config.database_url = DATABASE_URL;\n  // WiFi 재연결 활성화\n  Firebase.reconnectWiFi(true);\n  Serial.println(\"------------------------------------\");\n  Serial.println(\"새 사용자 가입 중...\");\n  // 익명으로 Firebase에 로그인\n  if (Firebase.signUp(&config, &auth, \"\", \"\"))\n  {\n    Serial.println(\"성공\");\n    isAuthenticated = true;\n    // 이 디바이스에 대해 업데이트가 로드될 데이터베이스 경로 설정\n    databasePath = \"/\" + device_location;\n    fuid = auth.token.uid.c_str();\n  }\n  else\n  {\n    Serial.printf(\"실패, %s\\n\", config.signer.signupError.message.c_str());\n    isAuthenticated = false;\n  }\n  // 장기적인 토큰 생성 작업에 대한 콜백 함수 할당, addons/TokenHelper.h 참조\n  config.token_status_callback = tokenStatusCallback;\n  // Firebase 라이브러리 초기화\n  Firebase.begin(&config, &auth);\n}\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n위의 모든 것을 종합하면, 우리의 설정 함수는 다음과 같이 보일 것입니다:\n\n```js\nvoid setup() {\n// 로컬 진단을 위한 시리얼 통신 초기화\nSerial.begin(115200);\n// 위치 WiFi와의 연결 초기화\nWifi_Init();\n// Firebase 구성 및 익명으로 가입\nfirebase_init();\n}\n```\n\n마지막으로, 모든 것이 올바르게 설정되었는지 테스트하는 샘플 데이터를 Firebase 데이터베이스에 업로드하는 테스트 함수를 구현해 봅시다. database_test()라는 새 함수를 만들겠습니다. 업데이트를 수행하기 전에 10초가 경과했는지 확인하고, 장치가 인증되었는지, 마지막으로 Firebase 라이브러리가 준비되었는지 확인합니다. 업데이트하기 전에 값을 설정하려는 실시간 데이터베이스의 노드 경로를 지정하고, 그 값으로 더미 카운터를 업데이트합니다. 10초마다 Firebase.set() 함수를 사용하여 이전 값들을 새로운 업데이트된 값으로 덮어씁니다. 기타 Firebase 함수는 여기에서 FirebaseESP32 API 문서를 참조하십시오.\n\n```js\nvoid database_test() {\n// 10초가 경과하고, 장치가 인증되었으며 Firebase 서비스가 준비되었는지 확인\nif (millis() - elapsedMillis > update_interval && isAuthenticated && Firebase.ready())\n{\nelapsedMillis = millis();\nSerial.println(\"------------------------------------\");\nSerial.println(\"Set int test...\");\n// 데이터의 키 값을 지정하고 경로에 추가\nString node = path + \"/value\";\n// 카운트 값을 Firebase 실시간 데이터베이스에 보내기\nif (Firebase.set(fbdo, node.c_str(), count++))\n{\nSerial.println(\"PASSED\");\nSerial.println(\"PATH: \" + fbdo.dataPath());\nSerial.println(\"TYPE: \" + fbdo.dataType());\nSerial.println(\"ETag: \" + fbdo.ETag());\nSerial.print(\"VALUE: \");\nprintResult(fbdo); //addons/RTDBHelper.h 참조\nSerial.println(\"------------------------------------\");\nSerial.println();\n}\nelse\n{\nSerial.println(\"FAILED\");\nSerial.println(\"REASON: \" + fbdo.errorReason());\nSerial.println(\"------------------------------------\");\nSerial.println();\n}\n}\n}\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n마침내 함수를 메인 루프에 다음과 같이 배치하십시오:\n\n```js\nvoid loop() {\n    database_test();\n}\n```\n\n우리의 코드는 더미 테스트를 수행할 준비가 완료되었습니다. ESP32 보드를 USB 포트에 연결하고 아래에 표시된 하단 패널의 컴파일 버튼을 눌러 코드를 컴파일하십시오:\n\n![이미지](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_22.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n빌드가 성공하면, 컴파일 버튼 오른쪽에 있는 업로드 버튼을 사용하여 코드를 ESP32 장치에 업로드합니다.\n\n![upload button](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_23.png)\n\n모든 것이 잘 진행되었다면, Firebase 콘솔의 Realtime Database 브라우저로 돌아가서 아래 그림과 같이 10초마다 업데이트가 오는 것을 확인할 수 있습니다:\n\n![database browser](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_24.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n시리얼 통신 인터페이스를 사용하여 10초마다 전송되는 다음 출력값을 확인할 수도 있습니다.\n\n![Image](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_25.png)\n\n# DHT11 온도 센서 통합\n\n마지막으로 온도 센서를 통합해 봅시다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n먼저, 하드웨어 연결이 올바른지 확인해야 합니다. DHT11 센서는 I2C 주변 장치를 사용하며 두 개의 핀이 필요합니다. DHT11 핀 할당을 검토해 봅시다:\n\n![DHT11 Pin Allocation](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_26.png)\n\n![DHT11 Pinout](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_27.png)\n\n다음 표는 DHT22/DHT11 핀 배치를 보여줍니다. 센서가 당신을 향하고 있을 때, 핀 번호는 왼쪽부터 오른쪽까지 1부터 시작합니다. 이 예제에서는 GPIO4를 사용할 것이므로, 하드웨어 배선은 다음과 같이 될 것입니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![image](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_28.png)\n\nNow that we have our hardware configuration setup, let’s update our embedded application to utilise the DHT11 sensor. Let’s start by adding the DHT library from Adafruit to our project:\n\n![image](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_29.png)\n\n![image](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_30.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nDHT 라이브러리를 imports에 추가해 보겠습니다.\n\n```js\n#include <Arduino.h>\n#include <WiFi.h>\n#include <FirebaseESP32.h>\n#include \"DHT.h\"\n```\n\n그러고 나서 DHT11 라이브러리를 설정해야 합니다. 이를 위해 센서 업데이트를 받을 GPIO 핀을 지정하고, DHT 센서 종류도 명시해야 합니다. 라이브러리는 DHT22 센서와도 호환되므로 사용 중인 DHT 센서를 지정해 주어야 합니다.\n\n```js\n// DHT 센서와 연결된 디지털 핀\n#define DHTPIN 4\n#define DHTTYPE DHT11\n// DHT 센서 초기화\nDHT dht(DHTPIN, DHTTYPE);\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n그럼 온도를 저장할 전역 변수를 정의해야 합니다.\n\n참고: DHT11은 습도를 추적하기도 하지만, 이 튜토리얼에서는 온도 측정만 다루겠습니다.\n\n```js\n// 센서 측정값을 저장할 변수\nfloat temperature = 0;\nfloat humidity = 0;\n// 업데이트된 센서 값 저장을 위한 JSON 객체(Firebase로 전송할 값)\nFirebaseJson temperature_json;\nFirebaseJson humidity_json;\n```\n\n그리고 setup() 함수를 업데이트하여 DHT 라이브러리를 초기화해야 합니다. 이 라이브러리는 I2C 설정을 다룰 것입니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\nvoid setup() {\n// 로컬 진단을 위한 시리얼 통신을 초기화합니다\nSerial.begin(115200);\n// 위치 WiFi 연결을 초기화합니다\nWifi_Init();\n// Firebase 구성 및 익명으로 가입을 초기화합니다\nfirebase_init();\n// DHT 라이브러리를 초기화합니다\ndht.begin();\n// 온도 및 습도 JSON 데이터를 초기화합니다\ntemperature_json.add(\"deviceuid\", DEVICE_UID);\ntemperature_json.add(\"name\", \"DHT11-Temp\");\ntemperature_json.add(\"type\", \"Temperature\");\ntemperature_json.add(\"location\", device_location);\ntemperature_json.add(\"value\", temperature);\n// 초기 온도 값을 출력합니다\nString jsonStr;\ntemperature_json.toString(jsonStr, true);\nSerial.println(jsonStr);\nhumidity_json.add(\"deviceuid\", DEVICE_UID);\nhumidity_json.add(\"name\", \"DHT11-Hum\");\nhumidity_json.add(\"type\", \"Humidity\");\nhumidity_json.add(\"location\", device_location);\nhumidity_json.add(\"value\", humidity);\n// 초기 습도 값을 출력합니다\nString jsonStr2;\nhumidity_json.toString(jsonStr2, true);\nSerial.println(jsonStr2);\n}\n```\n\n그런 다음 센서 데이터를 업데이트하고 후에 Firebase로 보낼 글로벌 JSON 객체 변수에 저장할 updateSensorReadings() 함수를 도입합니다.\n\n```js\nvoid updateSensorReadings() {\nSerial.println(\"------------------------------------\");\nSerial.println(\"센서 데이터를 읽는 중...\");\ntemperature = dht.readTemperature();\nhumidity = dht.readHumidity();\n// 읽기 실패 여부를 확인하고 조기에 종료합니다.\nif (isnan(temperature) || isnan(humidity)) {\n Serial.println(F(\"DHT 센서에서 읽기 실패!\"));\n return;\n}\nSerial.printf(\"온도 읽기: %.2f \\n\", temperature);\nSerial.printf(\"습도 읽기: %.2f \\n\", humidity);\ntemperature_json.set(\"value\", temperature);\nhumidity_json.set(\"value\", humidity);\n}\n```\n\n다음으로 예전의 database_test() 함수를 삭제하고 새로운 uploadSensorData() 함수로 교체해야 합니다. 노드 설명을 온도와 습도로 변경했습니다. 마지막으로 Firebase.set() 대신 Firebase.setJSON() 함수를 사용하여 온도와 습도 정보를 가진 두 개의 JSON 객체를 전달합니다. 마지막으로 main while 루프에서 database_test() 함수를 새로운 uploadSensorData() 함수로 교체합니다. 최종 코드 버전은 Github에서 확인할 수 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\nvoid uploadSensorData() {\nif (millis() - elapsedMillis > update_interval && isAuthenticated && Firebase.ready())\n{\n elapsedMillis = millis();\n updateSensorReadings();\n String temperature_node = databasePath + \"/temperature\";\n String humidity_node = databasePath + \"/humidity\";\n if (Firebase.setJSON(fbdo, temperature_node.c_str(), temperature_json))\n {\n Serial.println(\"PASSED\");\n Serial.println(\"PATH: \" + fbdo.dataPath());\n Serial.println(\"TYPE: \" + fbdo.dataType());\n Serial.println(\"ETag: \" + fbdo.ETag());\n Serial.print(\"VALUE: \");\n printResult(fbdo); //see addons/RTDBHelper.h\n Serial.println(\"------------------------------------\");\n Serial.println();\n }\n else\n {\n Serial.println(\"FAILED\");\n Serial.println(\"REASON: \" + fbdo.errorReason());\n Serial.println(\"------------------------------------\");\n Serial.println();\n }\nif (Firebase.setJSON(fbdo, humidity_node.c_str(), humidity_json))\n{\n Serial.println(\"PASSED\");\n Serial.println(\"PATH: \" + fbdo.dataPath());\n Serial.println(\"TYPE: \" + fbdo.dataType());\n Serial.println(\"ETag: \" + fbdo.ETag());\n Serial.print(\"VALUE: \");\n printResult(fbdo); //see addons/RTDBHelper.h\n Serial.println(\"------------------------------------\");\n Serial.println();\n }\n else\n {\n Serial.println(\"FAILED\");\n Serial.println(\"REASON: \" + fbdo.errorReason());\n Serial.println(\"------------------------------------\");\n Serial.println();\n  }\n }\n}\nvoid loop() {\n uploadSensorData();\n }\n```\n\n이 새로운 버전을 컴파일하고 업로드하십시오. Firebase 데이터베이스를 확인하여 방 온도의 실시간 온도 값을 표시합니다.\n\n<img src=\"/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_31.png\" />\n\n애플리케이션을 더 현실적으로 만들기 위해 데이터베이스에 흥미로운 센서 데이터를 채워 넣어야 합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n향후 튜토리얼을 따랐다면, 장치의 위치와 장치 UID를 변경하여 서로 다른 방에서 오는 다양한 센서 데이터를 시뮬레이션할 수 있습니다. 만약 4개의 ESP32와 4개의 DHT11 센서를 가지고 있다면, 각각을 별도의 방에 설치할 수도 있습니다. 이 튜토리얼에서는 다음과 같은 접근 방식을 취했습니다.\n\n![image](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_32.png)\n\n최종 결과는 이제 실시간 데이터베이스에 각 방에서 온 센서 데이터가 포함될 것입니다:\n\n![image](/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_33.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n대박이다! 당신은 ESP32 장치를 Firebase와 성공적으로 통합했어요.\n\n# 결론\n\n마무리하면, 우리는 어떠한 ESP32 장치도 익명으로 가입하고 10초마다 온도 측정을 Realtime Database로 전송할 수 있는 새로운 Firebase 프로젝트를 설정했어요. 다음 튜토리얼에서는 모든 방에서의 실시간 업데이트를 제공해주는 watchOS 애플리케이션을 만들 것이에요.\n\n이 튜토리얼의 최종 코드는 여기의 Github에서 찾을 수 있어요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n마지막으로, mobizt 팀원들에게 무한한 감사와 사랑을 전합니다. 이 멋진 FirebaseESP32 라이브러리를 우리에게 제공해줘서 정말 감사합니다. 그 안에는 Firebase Cloud Messages를 보낼 수 있는 능력을 비롯한 다양한 기능이 있습니다. 다음 IoT 프로젝트 중 하나에 매우 유용할 수 있을 거에요.\n\n# 자료들\n","ogImage":{"url":"/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_0.png"},"coverImage":"/assets/img/2024-05-18-GettingstartedwithESP32andFirebase_0.png","tag":["Tech"],"readingTime":25},{"title":"스마티 홈의 스마트한 솔루션 - 사무실의 보조 조명","description":"","date":"2024-05-18 18:40","slug":"2024-05-18-SmartieSolutionsbySmartieHomeSecondaryLightinOffice","content":"\n![Office Light](/assets/img/2024-05-18-SmartieSolutionsbySmartieHomeSecondaryLightinOffice_0.png)\n\n약 6년 전, 사무실을 디자인하고 설정할 때 레이아웃에 스마트 솔루션을 통합했습니다. 6년이 지난 지금도이 솔루션은 나의 일상 루틴 중 하나입니다. 그렇게 유용하다고 느껴 다른 비슷한 솔루션을 찾고있는 사람들과 이 경험을 공유하면 유익할 것이라고 생각했습니다.\n\n## 문제점\n\n저녁 늦게 사무실에서 근무할 때 필요한 빛 조명을 조절할 수있는 광원이 필요했습니다. 사무실에는 팬이 달린 주요 광원이 있지만, 스마트 라이트가 설치되어 있더라도 상당히 밝습니다. 최저 설정일 때도 상당량의 빛을 내뿜습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 이론\n\n여러 가지 다른 색상으로 변환 가능한 보조 조명이 이상적입니다. 스위치나 휴대폰으로 제어할 수 있어, 늦은 밤 코딩 세션에 완벽합니다.\n\n## 해결책\n\n오늘날, 스마트 조명 솔루션에 대한 여러 가지 옵션이 더 많이 제공되고 있습니다. 그러나 저는 내 결정을 지지하며, 선택의 기회가 주어진다면 다시 이 스마트 솔루션을 선택할 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n사무실을 디자인할 때, 화이트보드와 책상을 배치했지만 코너에 부엌을 설치하여 켜고 끌 수 있는 보조 조명도 원했습니다. 초기에는 이전에 구매한 Hue 조명을 사용하여 주 조명을 설치했습니다. 그러나 세 개의 조명에서 나오는 높은 밝기때문에 즉시 후회했습니다. Hue 조명은 한 두 개일 때 좋지만 한 곳에 세 개의 조명이 모여 있으면 상당히 강력할 수 있습니다. (어두울 때 가끔 켜 둡니다만 보통 꺼 두었습니다)\n\n두 번째 고려 사항은 Hue 라이트 스트립이었는데, 6년 전에는 HomeKit을 지원하는 유일한 라이트 스트립이었습니다 (Matter 이전에 어댑터를 사용했습니다). 그러나 개별 LED가 주목을 끌었으며 무언가 뒤에 부착할 때 더 나은 것으로 보였습니다. 이로 인해 나는 U자 모양의 상자를 만들어 라이트 스트립을 내려고하고, 화이트보드 한쪽 위에 빛이 비치도록 설정할까 고민했습니다. 그러나 그것은 매우 복잡한 작업처럼 느껴졌고, 특히 나는 막 이사를 한 집에 이사했을 때 DIY 프로젝트를 다룰 준비가 되어 있지 않았습니다.\n\n세 번째로 선택한 해결책은 Nanoleaf 캔버스 월 라이트를 사용하는 것이었습니다. Nanoleaf 조명을 어떻게 알게 된 것인지 정확히 모르지만, 초기에 HomeKit을 지원하고 애플 스토어에서 판매되었거나 그들의 광고 영상에서 완전히 사용자 정의 가능하다는 점이 얼마나 멋진지 보여줬던 것일지 모르겠습니다. 그 당시 Nanoleaf는 캔버스 월 라이트만 있었으며, 모든 해결책과 선택지를 갖고 있지는 않았습니다.\n\nNanoleaf 캔버스 벽은 코너에 설치되어 내 책상의 스위치, 홈 앱 또는 움직임을 통해 활성화될 수 있습니다. 스마트 라이트는 훌륭하지만, 이것을 스마트하게 만드는 것은 Eve 모션 센서와의 연결입니다. 만약 8시부터 10시 사이에 방 안에서 움직임을 감지하면 Nanoleaf를 낮은 50%의 노란빛 강도로 자동으로 켜집니다. 놀라움을 피하기 위해요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/assets/img/2024-05-18-SmartieSolutionsbySmartieHomeSecondaryLightinOffice_1.png\" />\n\n## 제품\n\nNanoleaf Canvas 스마터 키트\n\nEve 모션\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 결과\n\n나는 이 라이트를 6년 동안 사무실에 설치해 놓고 있었고, 바꾸려는 계획은 없습니다. 패널에 문제가 두 가지 발생했지만, 나놀리프는 그것들을 완전히 교체하고 부담해 주었습니다. 그들의 지원은 훌륭했습니다. 움직임 감지 센서가 설치되어 있어 사무실에 유용한 추가 요소가 되었습니다. 이것이 주요 조명은 아니지만, 거의 매일 사용하여 사무실의 \"주요\" 조명 소스가 되었습니다.\n\n재미있는 기능은 홈 앱의 색상 선택기를 사용하여 색상을 변경할 수 있는 능력입니다. 18개월 된 아들은 스스로 색상을 선택하고 변경하는 것을 좋아하며, 아이에게 색상을 가르치는 좋은 도구가 되었습니다.\n\n💯 확실한 스마트한 솔루션이죠!\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n문제가 발생했을 때 스마트한 해결책을 찾고 싶다면 저희에게 연락해주세요. 스마트 기술을 활용해 스마트한 해결책을 찾아보도록 하죠!\n","ogImage":{"url":"/assets/img/2024-05-18-SmartieSolutionsbySmartieHomeSecondaryLightinOffice_0.png"},"coverImage":"/assets/img/2024-05-18-SmartieSolutionsbySmartieHomeSecondaryLightinOffice_0.png","tag":["Tech"],"readingTime":4},{"title":"인도의 TOP 10 홈 자동화 기업 인스타 오토메이션 선두를 달린다","description":"","date":"2024-05-18 18:38","slug":"2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead","content":"\n현재의 스마트 라이프 시대에는, 인도의 현대 가정에서 홈 오토메이션이 중요한 역할을 하고 있어요. 조명과 온도를 제어하거나 보안 시스템과 엔터테인먼트 장치를 관리하는 등, 홈 오토메이션은 편리함, 편안함, 그리고 효율성을 제공해줘요. 하지만, 적합한 인테그레이터를 찾는 것은 조금 어려울 수 있어요. 여러분의 검색을 도와드리기 위해, 인도의 최고 10개 홈 오토메이션 회사 목록을 만들어봤어요. 이 목록에서는 인스타 오토메이션즈가 자리한 훌륭한 세 번째 위치를 차지했어요.\n\n# 1. 스마트론:\n\n![이미지](/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_0.png)\n\n스마트론은 인도 홈 오토메이션 산업에서 유명한 이름으로, 스마트 홈을 위한 혁신적인 솔루션을 제공해요. 연동성과 사용자 친화적 인터페이스에 초점을 맞춰, 스마트론은 조명, 보안, 엔터테인먼트, 그리고 에너지 관리를 포함한 다양한 오토메이션 요구를 충족해줘요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nhttps://www.smartron.com/\n\n# 2. Legrand:\n\n![image](/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_1.png)\n\nLegrand 홈 자동화는 최신 기술을 활용하여 편의, 편안함 및 보안을 향상시키는 혁신적인 솔루션을 제공합니다. 사용자 친화적 인터페이스와 직관적인 제어에 중점을 둔 Legrand의 시스템을 통해 소유주는 스마트폰 앱이나 음성 명령을 통해 어디에서든 조명, 기후 제어, 보안 카메라 등을 쉽게 관리할 수 있습니다. 모듈식 접근 방식은 확장 가능성을 제공하여 소형 아파트와 대형 부동산의 요구 사항을 모두 수용할 수 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nhttps://www.legrand.co.in/\n\n# 3. 인스타 자동화:\n\n![인스타 자동화](/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_2.png)\n\n인스타 자동화는 고객 만족과 우수성에 대한 약속으로 우리 목록에서 세 번째 자리를 차지했습니다. 인도의 선도적인 홈 자동화 회사로서, 인스타 자동화는 모든 소비자의 독특한 요구 사항을 충족시키기 위해 맞춤형 솔루션을 제공합니다. 자동 조명 및 기후 제어부터 고급 보안 시스템 및 오디오-비디오 솔루션까지, 인스타 자동화는 숙련된 전문가 팀에 의해 지원되는 일류 제품 및 서비스를 제공합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 연락처 정보!\n\n웹사이트: [www.inautomations.com](www.inautomations.com)\n\n이메일: contact@inautomations.com\n\n전화: +91 7760535115\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 4. Cubical Labs:\n\n![Cubical Labs](/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_3.png)\n\nCubical Labs은 혁신적인 자동화 솔루션 범위를 통해 개인화된 스마트 홈 경험을 만드는 데 특화되어 있습니다. 가전제품 제어, 에너지 사용 모니터링 또는 주택 보안 강화와 같은 작업을 수행할 때, Cubical Labs는 인도 전역의 주택 소유자들을 위해 원활한 통합 및 사용 편의성을 보장합니다.\n\n[웹사이트 바로가기](http://www.cubical.in/smart-homes/index.html#)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 5. Oakter:\n\n![Oakter](/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_4.png)\n\nOakter은 일상적인 작업을 간편하게 하고 편안함을 높이기 위해 설계된 사용자 친화적인 스마트 홈 솔루션으로 알려져 있습니다. 가격 대비성과 신뢰성에 중점을 둔 Oakter는 스마트 플러그, 스위치 및 센서를 포함한 다양한 제품을 제공하여 소비자가 필요에 맞게 맞춤형 자동화 설정을 생성할 수 있도록 지원합니다.\n\n[oakter.com](https://www.oakter.com)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 6. Wipro:\n\n![Wipro](/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_5.png)\n\nWipro Limited은 인도 방갈로르에 본사를 둔 다국적 기업으로, 세계에서 가장 큰 IT 서비스 기업 중 하나입니다. 정보 기술, 컨설팅 및 비즈니스 프로세스 서비스 분야의 전문 지식을 바탕으로, Wipro는 가정 자동화를 포함한 다양한 산업에 혁신적인 솔루션을 제공합니다.\n\n[www.wipro.com](www.wipro.com)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 7. Crestron:\n\n![Crestron](/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_6.png)\n\nCrestron은 스마트 홈을 위한 포괄적인 솔루션을 제공하는 홈 자동화 산업에서 유명한 브랜드입니다. 차세대 기술과 원활한 통합에 초점을 맞춘 Crestron은 조명, 보안, 엔터테인먼트 및 환경 제어를 포함한 다양한 자동화 요구를 충족시킵니다.\n\n[Crestron 웹사이트 바로가기](https://www.crestron.com/Products/Market-Solutions/Crestron-Home)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 8. Control4\n\n![Control4](/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_7.png)\n\nControl4은 세계적으로 인정받는 브랜드로, 비교할 수 없는 성능과 호화로움을 제공하는 프리미엄 홈 자동화 시스템으로 유명합니다. Control4는 다양한 제품 및 통합 기능을 보유하고 있어, 고급 주택 프로젝트 및 정교한 자동화 솔루션을 원하는 고급 아파트에 맞춤화된 서비스를 제공합니다.\n\n[www.control4.com](www.control4.com)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 9. Schneider Electronics:\n\n![Schneider Electronics](/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_8.png)\n\nSchneider Electronics은 1836년 프랑스에서 설립된 글로벌 리더로, 에너지 절약 및 지속 가능한 제품에 전문화되어 있습니다. 인도에서는 모바일 애플리케이션을 통해 제어할 수 있는 조명 제어 및 보안 장치를 포함한 종합적인 홈 자동화 솔루션을 제공하고 있습니다. 특징적인 점은 엔지니어팀을 통해 설치 서비스를 제공하여 주택 소유자에게 원활한 경험을 제공한다는 점입니다. Schneider Electronics는 도모틱 시스템 전문 지식을 바탕으로 현대 생활에 맞는 고급 자동화 솔루션을 제공합니다.\n\n[흑진 전자](https://www.se.com/in/en/product-category/2200-home-automation/)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 10. 필립스 자동화 솔루션:\n\n![image](/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_9.png)\n\n필립스는 1891년 설립된 유명한 글로벌 브랜드로, 1930년 이래로 인도 시장에서 상당한 영향력을 행사해왔습니다. 높은 브랜드 가치에 기반한 평판으로 필립스는 특히 인도 소비자들에게 신뢰받는 가정 조명 솔루션을 제공합니다. 스마트 LED 전구와 같은 앱 제어 기기의 다양한 제품군을 통해 필립스는 인도 가정의 변화하는 요구를 충족시키고 있습니다. 필립스는 신뢰할 수 있고 편리한 솔루션을 제공하여 인도 전역의 소비자들에게 지원을 이어가고 있습니다.\n\n[필립스 스마트 홈 자동화 제품 보러가기](https://www.philips.co.in/c-m-ac/app-enabled-products/smart-home-automation)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 결론\n\n요약하자면, 인도의 최고 10개 홈 자동화 회사들의 영역은 광범위하고 다양하지만, 인스타 오토메이션은 탁월한 리더로 두각을 나타냅니다. 뛰어난 품질, 혁신, 그리고 고객 만족을 위한 업무 의지로, 그들은 다른 기업들이 따라야 할 기준을 제시합니다. 새로운 자동화 프로젝트를 시작하거나 기존 시스템을 업그레이드하길 원한다면, 인스타 오토메이션과 이 목록에 있는 다른 통합 업체들이 분명히 여러분의 기대를 충족시키고 능가할 것입니다.\n\n# 자주 묻는 질문 (FAQ) — 인도 최고 10대 홈 자동화 회사\n\n# 1. 홈 자동화가 무엇인가요?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n집 자동화는 집 안의 다양한 시스템에 기술을 통합하여 원격으로 자동화하고 제어하는 것을 의미합니다. 이에는 조명, 온도, 보안, 엔터테인먼트 등이 포함되어 있어서 주택 소유자들에게 편의성, 편안함 및 에너지 효율성을 제공합니다.\n\n# 2. 집 자동화를 고려해야 하는 이유는 무엇인가요?\n\n집 자동화는 편의성, 에너지 절약, 향상된 보안 및 증가된 편안함을 포함한 여러 가지 이점을 제공합니다. 이를 통해 집의 다양한 측면을 원격으로 제어할 수 있어서 일상적인 작업을 더 쉽고 효율적으로 수행할 수 있습니다.\n\n# 3. 인도에서 적합한 집 자동화 회사를 선택하는 방법은 무엇인가요?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n집 자동화 회사를 선택할 때는 회사의 평판, 경험, 제품과 서비스 범위, 고객 리뷰, 그리고 가격과 같은 요소들을 고려해보세요. 당신의 특정한 요구사항과 예산을 충족하는 맞춤 솔루션을 제공하는 회사를 찾아보세요.\n\n**4. 인도에서 유명한 상위 10개의 홈 자동화 회사는 무엇인가요?**\n\n인도에서 유명한 상위 10개의 홈 자동화 회사로는 Smartron, Silvan Innovation Labs, Insta Automations, Cubical Labs, Oakter, Wipro, Control4, Smartify, Z-Wave India 등이 있습니다.\n\n**5. 홈 자동화 회사가 제공하는 제품과 서비스 유형은 무엇인가요?**\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n홈 자동화 회사들은 스마트 조명 시스템, 홈 보안 솔루션, 기후 제어 시스템, 오디오-비디오 통합, 스마트 가전제품, 에너지 관리 시스템 등 다양한 제품과 서비스를 제공합니다. 또한 원활한 통합 및 최적 성능을 위해 설치, 맞춤 및 유지보수 서비스도 제공합니다.\n\n# 6. 내 집의 에너지 효율성을 향상시키는 방법은 무엇인가요?\n\n홈 자동화 시스템은 집의 에너지 소비를 더 효과적으로 모니터링하고 제어하여 에너지 효율성을 향상시킬 수 있습니다. 예를 들어 조명 및 HVAC 시스템에 대한 일정을 설정하거나 온도 설정을 원격으로 조절하고, 에너지 소비 증가에 대한 알림을 받아 에너지 낭비를 줄이고 공과금을 낮출 수 있습니다.\n\n# 7. 기존의 집 시스템 및 장치와 홈 자동화가 호환되나요?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n네, 많은 홈 자동화 시스템이 기존 홈 시스템 및 장치와 호환되도록 설계되어 쉬운 통합과 확장이 가능합니다. 그러나 원활한 통합과 최적의 성능을 보장하기 위해 호환성 요구 사항을 확인하고 전문가 지침을 찾는 것이 중요합니다.\n\n## 8. 인도에서 홈 자동화 비용은 얼마인가요?\n\n인도에서 홈 자동화의 비용은 여러 요소에 따라 다를 수 있습니다. 집 크기, 시스템의 복잡성, 선택한 제품 및 서비스 유형, 그리고 협업하는 회사 등이 영향을 미칩니다. 여러 회사로부터 견적을 요청하고 가격을 비교하여 예산에 맞는 솔루션을 찾는 것이 좋습니다.\n\n## 9. 홈 자동화 시스템은 안전한가요?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n홈 자동화 기업들은 보안을 우선시하며 다양한 조치를 취하여 데이터와 개인정보를 보호합니다. 이에는 암호화, 인증 프로토콜, 안전한 네트워크 및 정기적인 소프트웨어 업데이트가 포함됩니다. 그러나 강력한 암호를 사용하고, 2단계 인증을 활성화하며, 소프트웨어를 최신 상태로 유지하는 등의 최상의 방법을 따르는 것이 안전을 더욱 강화하는 데 중요합니다.\n\n# 10. 홈 자동화를 시작하는 방법은 무엇인가요?\n\n홈 자동화를 시작하려면 다양한 기업과 제품을 조사하고, 필요한 것과 예산을 결정하며, 신뢰할 수 있는 홈 자동화 기업에 상담 및 견적을 요청하세요. 그들은 귀하의 집 요구 사항을 평가하고 적합한 솔루션을 권장하며, 스마트 홈 꿈을 실현하기 위한 설치 및 설정 과정을 안내해줄 것입니다.\n","ogImage":{"url":"/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_0.png"},"coverImage":"/assets/img/2024-05-18-Top10HomeAutomationCompaniesinIndiaInstaAutomationsTakestheLead_0.png","tag":["Tech"],"readingTime":11},{"title":"AI와 가정 자동화 편의성, 안전 및 에너지 효율 향상","description":"","date":"2024-05-18 18:36","slug":"2024-05-18-AIANDHOMEAUTOMATIONENHANCINGCONVENIENCESAFETYANDENERGYEFFICIENCY","content":"\n## AI-POWERED SMART HOMES: THE FUTURE OF LIVING IS HERE\n\n![image](/assets/img/2024-05-18-AIANDHOMEAUTOMATIONENHANCINGCONVENIENCESAFETYANDENERGYEFFICIENCY_0.png)\n\nIn recent years, the integration of Artificial Intelligence (AI) with home automation technologies has revolutionized the way we live. Smart homes, powered by AI, offer unprecedented levels of convenience, safety, and energy efficiency. This article delves into the various smart home technologies driven by AI and explores the myriad benefits they bring to modern living.\n\nConvenience: Simplifying Everyday Life\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nAI 파워가 장착된 가정 자동화 시스템은 루틴 작업을 자동화하고 가정 기기를 원활하게 제어함으로써 우리의 삶을 더 편리하게 만들기 위해 설계되었습니다.\n\n스마트 어시스턴트\n아마존 알렉사, 구글 어시스턴트, 애플의 시리와 같은 기기들은 가정 자동화의 중앙 허브로 자리 잡았습니다. 이러한 AI 기반 어시스턴트는 사용자가 간편한 음성 명령을 통해 조명, 온도 조절기, 잠금장치 등을 제어할 수 있도록 해줍니다. 예를 들어, 침대에 누웠을 때 알렉사에게 조명을 끄도록 요청하거나, 소파를 떠나지 않고 온도 조절기를 조정할 수 있습니다.\n\n자동 일정 설정\nAI 시스템은 사용자의 선호도와 루틴을 학습하여 작업을 자동화합니다. 예를 들어, Nest Learning Thermostat과 같은 스마트 온도 조절기는 사용자의 일정에 맞게 적응하여 하루 내내 최적 수준의 온도로 조절되어 수동 개입 없이도 운영됩니다. 마찬가지로, 스마트 조명 시스템은 자연광 수준 및 일일 패턴에 따라 조절할 수 있습니다.\n\n안전: 가정과 사랑하는 사람 보호\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nAI는 고급 모니터링, 실시간 경고 및 지능적인 분석을 통해 주거 보안을 강화합니다.\n\n![AI와 홈 자동화가 편의, 안전 및 에너지 효율성을 증진하는 이미지](/assets/img/2024-05-18-AIANDHOMEAUTOMATIONENHANCINGCONVENIENCESAFETYANDENERGYEFFICIENCY_1.png)\n\n**스마트 보안 카메라**\nRing 및 Nest 등의 AI 기반 보안 카메라는 움직임 감지, 얼굴 인식 및 실시간 알림과 같은 기능을 제공합니다. 이러한 카메라는 사람, 동물 또는 물체를 구별할 수 있어 오진 경보를 줄이고 잠재적 침입자에 대한 정확한 경고를 제공할 수 있습니다.\n\n**지능형 도어벨**\nRing Video Doorbell과 같은 AI가 장착된 스마트 도어벨은 주택 소유주가 스마트폰을 통해 원격으로 방문객을 보고 듣고 말할 수 있도록 합니다. 이 장치는 익숙한 얼굴을 인식하고, 생소한 사람이 문 앞에 있을 때 알려줄 수도 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n응급 감지 시스템\nAI 기술을 활용한 연기 감지기와 누출 센서는 화재와 물 누수에 대한 조기 경보를 제공합니다. Nest Protect 연기 감지기와 같은 이 장치는 폰으로 경고를 보내고 화재나 수해로의 전파를 막기 위해 HVAC 시스템과 같은 연결된 장치를 자동으로 차단할 수 있습니다.\n\n에너지 효율성: 소비와 비용 절감\n\n![이미지](/assets/img/2024-05-18-AIANDHOMEAUTOMATIONENHANCINGCONVENIENCESAFETYANDENERGYEFFICIENCY_2.png)\n\nAI 기술을 활용한 스마트 홈 기술은 에너지 절약에 크게 기여하여 유틸리티 요금을 낮추고 탄소 발자국을 줄이는데 도움이 됩니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n스마트 서모스탯\nAI 기술을 활용한 서모스탯은 당신의 일정과 선호도를 학습하여 에너지 소비를 줄이기 위해 난방 및 냉방을 최적화합니다. Ecobee SmartThermostat과 같은 장치는 센서와 AI 알고리즘을 사용하여 집에 없을 때 에너지를 낭비하지 않으면서 편안함을 유지합니다.\n\n지능형 조명\nPhilips Hue와 같은 스마트 조명 시스템은 낮과 밤, 인원 유무 및 자연광 수준에 따라 밝기와 색상을 조절합니다. AI는 비사용 중인 공간의 조명을 끄는 등 에너지를 더욱 절약할 수 있습니다.\n\n에너지 모니터링 시스템\n가정용 에너지 관리 시스템(HEMS)은 AI를 활용하여 장치 간 에너지 사용량을 모니터링하고 분석합니다. Sense와 같은 시스템은 어떤 가전제품이 가장 많은 전력을 소비하는지 식별하여 에너지 효율성을 향상시키기 위한 통찰력과 권고 사항을 제공할 수 있습니다.\n\n마무리\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nAI를 활용한 가정 자동화 기술은 우리 집을 지능적이고 반응적인 환경으로 변화시키며 편의성을 향상시키고 안전성을 높이며 에너지 효율을 증진시키고 있습니다. 이러한 기술이 계속 발전함에 따라 스마트 홈의 미래는 더 큰 혁신을 약속하며, 우리의 삶을 더 편안하고 안전하며 지속 가능하게 만들어 줄 것입니다. AI를 가정 자동화에 적용함으로써 일상적인 작업을 단순화하는 뿐만 아니라 더 효율적이고 안전한 생활 공간을 조성하는 데 기여합니다.\n\n![이미지](/assets/img/2024-05-18-AIANDHOMEAUTOMATIONENHANCINGCONVENIENCESAFETYANDENERGYEFFICIENCY_3.png)\n\n#AI #가정자동화 #스마트홈 #편의 #안전 #에너지효율 #스마트기기 #IoT #홈보안 #에너지관리 #스마트조명 #음성비서 #홈모니터링 #자동화된생활 #가정을위한기술 #SandraKoh #NovelleCollagen\n\nBK 한\n사라의 헬시파이\n팜씨/플라잉맘\n고희연 (Epigenneur)\n타잇 렝 앙\n안젤라 두\n","ogImage":{"url":"/assets/img/2024-05-18-AIANDHOMEAUTOMATIONENHANCINGCONVENIENCESAFETYANDENERGYEFFICIENCY_0.png"},"coverImage":"/assets/img/2024-05-18-AIANDHOMEAUTOMATIONENHANCINGCONVENIENCESAFETYANDENERGYEFFICIENCY_0.png","tag":["Tech"],"readingTime":5},{"title":"지금 기술 세계에서 일어나고 있는 가장 어리석은 프로젝트","description":"","date":"2024-05-18 18:35","slug":"2024-05-18-TheDumbestProjecthappeningintheTechWorldrightnow","content":"\n![2024-05-18-TheDumbestProjecthappeningintheTechWorldrightnow_0](/assets/img/2024-05-18-TheDumbestProjecthappeningintheTechWorldrightnow_0.png)\n\n작년 동안 우리는 수많은 AI 프로젝트가 등장하고 있다는 것을 목격했습니다. 물론, OpenAI의 ChatGPT가 있죠. 그 다음으로는 Claude, Anthropic, Google의 Bard 등의 사본들이 있습니다. 마지막으로, Replika나 Meta가 요즘 무엇을 하고 있는지와 같은 이상한 것들이 있습니다. 현재까지 모두가 \"오래된\" 노트북과 모바일 기기에서 작동하는 디지털 제품들로, 조금 지루한 것 같네요.\n\n인류는 AI와 물리 세계에서 상호 작용하기 위해 전용 하드웨어를 구축하기 시작할 때 진정한 혁신을 볼 것입니다. 우리는 모든 것을 아는 신을 만들었으니, 이제는 그들에게 물리적인 형태를 줘야 합니다. 최종 형태가 우리의 형상일 것임을 알지만 (어떤 iRobot?), 그 이전에는 무엇이 올까요? 이미 많이 쓰여진 Humane의 700불짜리 \"Pin\"? Meta의 스마트 안경? Johny Hive와 OpenAI가 지금 10억 달러 투자금으로 작업 중인 무엇이든? 무엇이든, 사실, 그것이 Rewind 펜던트처럼 보일 일은 없다는 것을 알고 있습니다.\n\n# Rewind Pendant: 현재 기술 세계에서 일어나는 가장 어리석은 프로젝트\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nRewind은 현재 소프트웨어를 판매하고 있는 회사입니다. 이 소프트웨어는 노트북에서 보거나 듣거나 말하는 모든 것을 기록합니다. 2023년 10월, 그들의 CEO는 The Pendant를 출시한다고 발표했습니다. 이는 검은 실린더가 달린 작은 목걸이로, 내부에는 마이크가 달려 있습니다. 핵심 원칙은 간단합니다. The Pendant는 모든 대화를 기록하고, 전사하고, 암호화한 후, 사용자의 핸드폰에 저장하여 사용자가 지금까지 한 모든 대화를 검토할 수 있게 합니다.\n\n완벽한 기억. 당신의 손끝에서.\n\n녹음기를 만드는 것은 어렵지 않습니다. 그래서 Pendant는 선주문 가격으로 60달러에만 판매됩니다. 새로운 점은 사용자를 위해 데이터를 효율적으로 저장하고 검색하고 되새겨주는 앱과 연결된 AI 기술입니다.\n\n많은 분들이 눈치채셨을 것이지만, 이는 말 그대로 로우테크 블랙 미러 에피소드입니다. \"The Entire History of You\"에서는 \"Grains\"가 생물학적으로 사람들이 보고 듣는 모든 것을 기록하고, \"The Pendant\"는 마이크를 통해 대화를 기록합니다. 그리고 \"Grains\"가 개인이 기억을 완벽하게 다시 보는 것을 허용하는 반면, \"The Pendant\"는 그저 대화를 전사하고 저장하여 나중에 검토할 수 있도록 합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/assets/img/2024-05-18-TheDumbestProjecthappeningintheTechWorldrightnow_1.png\" />\n\n우리가 일단 본론으로 들어가 봅시다. The Pendant는 디스트피아식 악몽입니다. 누구나 언제 어디서나 모든 말을 녹음할 수 있는 능력(중요한 것은 쉽게 다시 찾을 수 있다는 것)은 동의, 개인 정보 침해 및 이러한 녹음의 잠재적 남용에 대해 많은 의문을 제기합니다.\n\n누군가가 The Pendant를 착용하고 기업 파티에 참석하는 상황을 상상해보십시오. 다른 참가자들이 알지 못하는 사이 The Pendant는 행사 중에 이야기되는 모든 말을 녹음하고 있습니다. 그 다음 날, The Pendant 착용자는 악의를 품은 제3자들과 정확한 대화들을 전달할 수 있습니다. 그 대화에는 민감한 비즈니스 전략, 독점 정보 또는 귀여운 소문이 포함될 수 있습니다. 이 시나리오는 해킹이나 더 나쁜 상황으로 인해 제3자가 녹음물에 무단으로 접근하는 경우 훨씬 더 놀라운 것이 됩니다(리와인드는 공식 소환에 따라 협조할 것이라고 말합니다).\n\n이를 생각해보세요. 우리가 하는 말 중 상당수는 녹음되고 어떻게든 누출되면 좋지 않을 것입니다. 풍문의 세계는 사실상 사라질 것입니다. 누구도 신뢰받지 못할 것이며 왜냐하면 모두가 선을 착용하고 있을 것이기 때문입니다. 또는 chatGPT가 말했듯이, \"The Pendant는 모든 대화가 저장되어 세밀하게 조사될 수 있기 때문에 신뢰와 의사소통의 역학을 바꿀 수 있습니다.\" 이 모든 상황에서 유일하게 즐거운 결과는 사우나 회의가 크게 부활할 것이다는 것입니다; 개인 정보를 보장하기 위한 유일한 방법은 모두가 벗은 상태로 있음을 확인하는 것이 될 것입니다. 그것이 평등에 큰 도움이 될 것이라고 확신합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n당연히, The Pendant 웹 사이트는 “우리는 개인 정보 보호를 최우선으로 하며, 다른 사람이 동의 없이 녹음되지 않도록하는 기능을 제공합니다.”라고 말합니다. 그러나 다른 내용은 작성되지 않았습니다. 더 자세한 설명이 없으면 이 명세는 가치가 없어집니다. 개인 정보 보호 문제를 해결하는 유일한 방법은 녹음을 위해 구두 동의가 필요하고, 고유한 음성 서명과 연결되어야 한다는 것입니다. 일부 알고리즘은 이를 수행할 수 있지만, 여러 질문들이 발생할 것입니다. 예를 들어, 동의가 없는 경우 얼마나 자주 그리고 빨리 녹음이 삭제되는지? 나중에 동의하고 대화를 검색할 수 있는가? 음성 서명은 어디에 저장되는가? 사람들의 목소리에 대한 딥페이크는 얼마나 정확한가? 작은 소프트웨어 회사에 대한 알아야 할 질문이 많이 있군요.\n\n내 말인데, 내 아기의 첫 말이 “AI 스타트업에서 내 데이터 사용에 동의합니다”가 됐으면 그것은 싫어요.\n\nThe Pendant는 생산성 도구로서 마케팅되고 있습니다. 일부 감정 노동을 줄이기 위해 사용할 수 있을 것으로 보입니다: 장보기 목록을 말로 말하기, 특히 중요한 대화 부분을 나중에 검토할 수 있도록 책갈피를 걸기, 회의록 기록하기… 등등. 하지만 저는 계속 의심스럽습니다.\n\n생산적이기 위한 큰 부분은 대화 뒤에 일어나는 사고입니다. 사실, 1시간 진행된 회의 후에 3가지 이상의 결론을 내기가 어려울 정도로 어려울 때도 있습니다. 전체 대화를 검토하는 대신 주요 인용구와 생각이 담긴 작은 노트북을 가지고 있는 것이 문제를 해결하고 생산성을 줄이는 것이 아닙니다. 전문적인 회의록 작성자를 믿어요, The Pendant는 사람들의 불안과 놓치고 있는 것을 두려워하고 있는 것을 이용하려는 것뿐이지만 실제로는 문제를 찾는 솔루션일 뿐입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n마지막으로, 이 아이디어를 완전히 묻어버릴 또 다른 두 가지 이유가 있습니다:\n\n- 기억을 잊는 것은 좋은 일입니다. 사실, 우리 뇌는 종종 과거 사건들을 덜 고통스럽게 만들어 주어서 우리에게 친절을 베푸는 경우도 있습니다 (그 기억이 완전히 사라지지 않는 한). 챗봇이 \"내 결혼에서 잘못된 점은 무엇인가요?\"와 같은 영원한 질문에 정확한 답변을 제공할 수도 있지만... 우리는 그러한 정보를 원할까요?\n- 사람들이 기억 보존을 위해 점점 더 기술에 의존하면, 우리는 자연적인 기억 과정과 개인적인 경험의 전통적인 개념을 훼방할 수도 있습니다.\n\n미국 시민권 자유연합의 시니어 정책 분석가인 제이 스탠리는 최근 인터뷰에서 가장 적절하게 말했습니다: \"사람들은 자신이 들은 모든 것을 기록하면 자신이 가진 모든 기억처럼 엄청난 기억력을 갖게 되어 든든하게 느낄 수도 있지만, 실제로는 권력을 박탈당하고 역효과를 일으킬 수도 있습니다.\"\n\n오브, 스피어, 그리고 이제 펜던트까지. 우리가 어떻게해서 YA 소설 속으로 빨려 들어간 걸까요?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n기술은 모든 것이 마찰을 줄이는 데 관한 것입니다. Spotify, Uber, Netflix... 대부분의 기업들보다 그것을 더 잘 해냈습니다. 하지만 때로는 삶 속에서 약간의 마찰이 건강하다고 느낄 때도 있습니다. 예를 들어, 주변 사람을 녹음하기 위해 주머니에서 iPhone을 꺼내는 행위는 우리에게 제일 큰 프라이버시 보호자가 될 수 있습니다.\n\n미래에는 기술이 마찰을 줄이는 데에 그치는 것이 아니라 세상 속에 존재하는 것에 더 중점을 두어야 한다고 믿습니다. 하드웨어가 최대한 언발하게 되고 우리가 현재 순간에 집중할 수 있도록 하는 데에 열망해야 합니다.\n\n이 펜던트는 그것을 이루지 않을 것입니다. 그리고 그 장비를 착용하는 사람은 사회적으로 냉대를 받을 것으로 예상합니다. 잘 가요. 번창하세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 기사는 원본으로 wearedevelopers.com에 작성되었습니다. 유럽의 개발자 중심 취업 플랫폼입니다.\n\n# 한 가지 더\n\n내 글을 지원해 주시기 위해 댓글을 남겨주세요. 읽고 답변하는 걸 좋아해요! 단, 못된 댓글은 제 마음을 상하게 해요. 제 글을 놓치지 마세요. Medium이나 제 블로그에서 뉴스레터를 구독하시면 됩니다.\n","ogImage":{"url":"/assets/img/2024-05-18-TheDumbestProjecthappeningintheTechWorldrightnow_0.png"},"coverImage":"/assets/img/2024-05-18-TheDumbestProjecthappeningintheTechWorldrightnow_0.png","tag":["Tech"],"readingTime":6},{"title":"라즈베리파이를 와이파이 라우터로 변신해보세요","description":"","date":"2024-05-18 18:33","slug":"2024-05-18-TurnyourRaspberryPiintoaWiFiRouter","content":"\nRaspberry Pi를 무선 액세스 포인트로 설정하는 방법\n\n![이미지](/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_0.png)\n\nRaspberry Pi를 무선 액세스 포인트로 설정하는 방법을 보여 드리겠습니다. 기본적으로 다른 장치가 연결할 수 있는 무선 \"라우터\"로 Raspberry Pi를 변환하는 방법을 안내해 드리겠습니다. 이를 통해 생성된 무선 액세스 포인트를 설정하여 연결된 장치에 인터넷 액세스를 제공(공유)하는 방법도 안내해 드리겠습니다.\n\n![이미지](/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_1.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 이렇게 하였습니다\n\n라즈베리 파이 설정을 위한 링크에 들어가 보세요. 설정이 완료되면 라즈베리 파이로 Wi-Fi 핫스팟을 만들기 시작해 봅시다.\n\n# 단계 1:\n\n일반적으로 라즈베리 파이를 업데이트하여 최신 버전을 보유하도록 합니다\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nsudo apt-get update\nsudo apt-get upgrade\n\n# STEP-2:\n\n라즈베리 파이가 액세스 포인트로 작동하려면 액세스 포인트로 작동하기 위한 소프트웨어 패키지가 필요합니다.\n\n아래 명령어는 라즈베리 파이를 무선 액세스 포인트로 설정할 수 있게 해주는 소프트웨어를 설치하고, AP에 연결된 장치에 네트워크 주소를 할당하는 데 도움을 주는 소프트웨어를 설치합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\nsudo apt install hostapd\nsudo apt install dnsmasq\n```\n\n마지막으로, netfilter-persistent와 그 플러그인 iptables-persistent를 설치해주세요. 이 유틸리티는 방화벽 규칙을 저장하고 Raspberry Pi 부팅 시에 복원하는 데 도움이 됩니다.\n\n```js\nsudo DEBIAN_FRONTEND=noninteractive apt install -y netfilter-persistent iptables-persistent\n```\n\n다음 단계로 이동하기 전에 Raspberry Pi를 다시 부팅해주세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nsudo reboot\n\n# STEP-3:\n\nRaspberry Pi는 독립 와이어리스 네트워크를 실행하고 관리합니다. 또한 와이어리스 및 이더넷 네트워크 간 경로를 제공하여 와이어리스 클라이언트에게 인터넷 액세스를 제공합니다. Raspberry Pi를 서버로 설정하기 위해서는 와이어리스 포트에 고정 IP 주소를 할당해야 합니다. 이 작업은 dhcpcd 구성 파일을 편집하여 수행할 수 있습니다. dhcpcd.conf 파일을 편집하려면 아래 명령을 실행하세요.\n\nsudo nano /etc/dhcpcd.conf\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\ndhcpcd.conf 파일 끝으로 이동하여 다음 라인들을 추가해주세요.\n\n```js\ninterface wlan0\n    static ip_address=192.168.4.1/24\n    nohook wpa_supplicant\n```\n\n![이미지](/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_2.png)\n\n# STEP-4:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n라즈베리 파이에서 한 네트워크에서 다른 네트워크로 트래픽이 흐를 수 있도록 하려면 다음 명령을 사용하여 파일을 생성하고 아래 내용을 입력하세요:\n\n```js\nsudo nano /etc/sysctl.d/routed-ap.conf\n```\n\n파일 내용:\n\n```js\n# IPv4 라우팅 활성화\nnet.ipv4.ip_forward=1\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아래는 경로를 추가하여 호스트가 네트워크 192.168.4.0/24로 LAN 및 인터넷으로 이동할 수 있도록하는 설정입니다.\n\n이 프로세스는 Raspberry Pi에 한 개의 방화벽 규칙을 추가하여 구성됩니다.\n\n```js\nsudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이제 현재 IPv4 및 IPv6 방화벽 규칙을 netfilter-persistent 서비스를 통해 부팅 시 로드할 수 있도록 다음 명령을 사용하여 저장하세요.\n\n```js\nsudo netfilter-persistent save\n```\n\n# 단계-5:\n\nDHCP 및 DNS 서비스는 dnsmasq에서 제공됩니다. 기본 구성 파일은 모든 가능한 구성 옵션의 템플릿 역할을 합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n기본 설정 파일의 이름을 변경하고 새 파일을 편집해보세요\n\n```js\nsudo mv /etc/dnsmasq.conf /etc/dnsmasq.conf.orig\nsudo nano /etc/dnsmasq.conf\n```\n\n다음을 파일에 추가하고 저장하세요,\n\n```js\ninterface=wlan0\ndhcp-range=192.168.4.2,192.168.4.20,255.255.255.0,24시간\ndomain=wlan\naddress=/gw.wlan/192.168.4.1\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아래는 코드 블록 안에 있는 내용을 실행하여 라즈베리파이의 WiFi 라디오가 차단되지 않도록 할 수 있습니다:\n\n```js\nsudo rfkill unblock wlan\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 설정은 부팅 시 자동으로 복원됩니다. 액세스 포인트 소프트웨어 구성에서 적절한 국가 코드를 정의할 것입니다.\n\n# 단계-6:\n\n새로운 무선 네트워크를 위한 다양한 매개변수를 추가하기 위해 /etc/hostapd/hostapd.conf에 있는 호스팅 설정 파일을 만들어 주세요.\n\n```js\ncountry_code = IN;\ninterface = wlan0;\nssid = 네트워크이름;\nhw_mode = g;\nchannel = 7;\nmacaddr_acl = 0;\nauth_algs = 1;\nignore_broadcast_ssid = 0;\nwpa = 2;\nwpa_passphrase = 암호;\nwpa_key_mgmt = WPA - PSK;\nwpa_pairwise = TKIP;\nrsn_pairwise = CCMP;\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n참고: `country_code`는 컴퓨터가 올바른 무선 주파수를 사용하도록 구성합니다. 두 글자 ISO 3166-1 국가 코드 목록은 위키피디아에서 확인할 수 있습니다.\n\n- SSID: 여러분의 SSID (제 경우 네트워크 이름)\n\n- PWD: 여러분의 비밀번호 (제 경우 비밀번호)\n\n![이미지](/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_5.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nRaspberry Pi에 적용한 변경 사항을 적용하려면 시스템을 다시 시작하세요.\n\n```js\nsudo systemctl reboot\n```\n\n시스템이 다시 켜지면 Raspberry Pi에서 만든 무선 액세스 포인트에 연결하여 인터넷에 액세스할 수 있게 될 것입니다.\n\n<img src=\"/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_6.png\" />\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n읽어 주셔서 감사합니다. 피드백과 코멘트는 언제나 환영합니다.\n\n# GEEKY BAWA\n\n## 새로운 기술을 탐구하고 멋진 경험을 하는 것을 좋아하는 어리석은 Geek예요.\n\n# 다른 블로그도 재밌게 둘러보세요\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 내 유튜브 채널도 한번 확인해보세요\n\n만약 연락하고 싶으시거나 좋은 농담을 알고 계시다면 트위터나 링크드인을 통해 연락해 주세요.\n\n독자 여러분 감사합니다!😄 🙌\n\n트위터와 링크드인에서 저와 소통해 보세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n다른 기사와 참고 자료를 확인하러 시간 내어보세요. 제 글을 알림받으려면 저를 팔로우해주세요.\n\n# Vaibhav Hariramani가 진심을 담아 제작했습니다.\n\n- 이 글을 즐기셨다면 미디엄에서 더 많은 글을 읽어보세요!\n- 더 많은 콘텐츠를 원하시면 캐글에서 저를 팔로우하세요!\n- 링크드인에서 연락해주세요.\n- 협업에 관심이 있으세요?\n- 제 웹사이트를 확인해보세요.\n- 다른 웹사이트도 함께 확인해보세요.\n\n# 저희를 태그하지 말고는 없습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n만약 이 블로그가 도움이 되었다면 친구들과 공유하고, 저희를 언급하는 것을 잊지 마세요. 그리고 Linkedin, Instagram, Facebook, Twitter, Github에서도 공유하는 것을 잊지 마세요.\n\n# 추가 자료\n\n이 자료들에 대해 더 배우고 싶다면 아래 나의 쓴 글들을 참고하세요:-\n\n- Medium\n- geeky Traveller\n- Blogs\n- Youtube\n- 이메일: vaibhav.hariramani01@gmail.com\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 더 바이브하브 하리라마니 앱 다운로드\n\n# 더 바이브하브 하리라마니 앱 (최신 버전)\n\n더 바이브하브 하리라마니 앱 다운로드는 안드로이드 스튜디오 및 웹 뷰로 개발된 사이트의 자습서, 프로젝트, 블로그 및 브이로그를 포함하고 있습니다. 안드로이드 기기에 설치해보세요.\n\n# 저를 팔로우해주세요\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n마크다운 형식으로 테이블 태그를 변경해주세요.\n\n| Linkedin        | Instagram | Facebook | Twitter | Github |\n| --------------- | --------- | -------- | ------- | ------ |\n| Happy coding ❤️ |\n","ogImage":{"url":"/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_0.png"},"coverImage":"/assets/img/2024-05-18-TurnyourRaspberryPiintoaWiFiRouter_0.png","tag":["Tech"],"readingTime":10},{"title":"나의 여정과 트리스트럼 샨디 역설","description":"","date":"2024-05-18 18:32","slug":"2024-05-18-MyJourneyandtheTristramShandyParadox","content":"\n18세기 소설인 로렌스 스턴의 \"The Life and Opinions of Tristram Shandy, Gentleman\"은 자신의 삶의 모든 세부사항을 기록하려고 노력하는 남자를 다룹니다. 사건에 대해 쓰는 데 인생을 살아가는 것보다 더 많은 시간이 걸려 뒤처지기 시작하며, 절대 완료될 수 없는 계속 커지는 백로그를 만들어 냅니다.\n\n익숙하게 느껴지나요?\n\n![이미지](/assets/img/2024-05-18-MyJourneyandtheTristramShandyParadox_0.png)\n\n트리스트럼 샨디로서 쓴 로렌스 스턴은 이 역설을 뛰어난 방식으로 포착해 냈습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 내 이야기는 어떤 연관이 있을까?\n\n인터넷은 항상 변화하는데, 새로운 정보, 트렌드, 그리고 도구가 매일 등장합니다. 팽팽하게 채워 나가고 있는 테이블 태그를 마크다운 포맷으로 바꾸려면 어떻게 해야 할까요?\n\n트리스트럼 샨디와 같이, 저는 모든 것을 문서화하려고 노력했지만 쓰면 쓸수록 더 많은 내용이 채워져 가는 것 같아요.\n\n시간은 흘러가고 있는데 들어오는 일이 나가는 일보다 많아요. 항상 위기를 감지하고 있는 것 같은데, 결국 표면만 긁어 본 것 같다는 것을 깨닫게 돼요.\n\n진전을 이루려고 하지만 찾고, 정리하고, 다시 시도하는 사이클에 갇힌 쥐처럼 느껴지네요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n트리스트럼 샌디는 자신의 삶을 문서화하는 데 압도됐다. 시간이 글을 쓰는 속도보다 더 빨리 흘러가기 때문에 따라잡기 불가능하다는 것을 알았다.\n\n인터넷을 연구하고 정리하려는 것도 똑같은 느낌이다.\n\n![이미지](/assets/img/2024-05-18-MyJourneyandtheTristramShandyParadox_1.png)\n\n# 결론\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 이야기는 지속적인 변화의 도전을 보여줍니다.\n\n트리스트럼 샨디(Tristram Shandy)에게는 인생을 문서화하기에 시간이 빠르게 지나갔습니다. 저에게는 온라인 정보를 계속해서 따라가려는 것도 마찬가지죠.\n\n두 가지 모두 불가능한 일이죠.\n\n이젠 끝없는 데이터를 조직하고 수집하는 것을 멈추고, 그것을 효과적으로 활용하는 방향으로 나아가 봅시다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n당신도 이 사이클에 갇혔나요? 트리스트럼 샌디 패러독스가 당신에게 공감되는지 궁금해요.\n\n저와 소통하고 싶다면 가입해주세요!\n","ogImage":{"url":"/assets/img/2024-05-18-MyJourneyandtheTristramShandyParadox_0.png"},"coverImage":"/assets/img/2024-05-18-MyJourneyandtheTristramShandyParadox_0.png","tag":["Tech"],"readingTime":3},{"title":"MRS Technologies 2023 하계 인턴십 프로그램 - 포괄적인 여정","description":"","date":"2024-05-18 18:30","slug":"2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney","content":"\n기술 분야에서 인턴십은 청년들을 전문가 생활로 이끄는 발판입니다. 그러나 대부분의 인턴들은 기초 프로젝트에 갇혀 실제 세계에서의 경험을 놓치곤 합니다. 이 추세와는 달리, MRS Technologies는 작년에 다른 길을 선택하여 2022년도 인턴십 프로그램을 통해 풍부한 학습 기회를 제공했습니다. 인턴들은 실무 경험을 쌓고 최소 실현 가능 제품(MVP)을 선정하는데 주도적 역할을 하였습니다. 이 접근 방식은 커뮤니티로부터 높은 칭찬을 받았습니다. 이 경험은 졸업 전에 취직 기회를 얻는 데 도움이 되었으며, 프로그램의 깊은 영향력을 보여주었습니다.\n\n올해 관심이 폭발적으로 증가하여 13,500여 건의 열정적인 지원서가 접수되었습니다. 프로그램의 본질은 훈련을 집중적인 여섯 주 동안으로 압축하여 더 크고 열정적인 15명의 인턴 팀을 구성하여 슈퍼 차지하였습니다. 목표는 명확했습니다: 이 짧은 기간 안에 견고한 최소 실현 가능 제품(MVP)을 만들어 손쉬운 학습과 팀워크에서 새로운 기준을 세우는 것입니다.\n\nMRS Technologies의 CTO로써, 이 인턴십 프로그램은 나에게 특별한 자리를 차지하고 있습니다. 내 마음을 다하여 내일의 리더를 가꾸기 위해 최선을 다하며 성장시키고 있습니다. 이 블로그는 올해 프로그램의 주요 하이라이트를 통해 이 프로그램의 강한 실전 학습에 중점을 둔 세계 최고의 인턴십 프로그램 중 하나로 손꼽히는 이유를 보여줄 것입니다.\n\n# 1) 2023년 인턴십 프로그램의 비젼 - 기업가 정신을 일으키다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nMRS 인턴십 프로그램의 핵심은 현실적인 기업가 정신의 본질에 직접 뛰어 들 수 있는 스타트업 분위기를 재현하는 데 있습니다. 보통의 인턴십과는 달리, 이 여정은 24시간 7일간의 과제, 학습 및 성장의 혼합으로 변모하여 매일이 도전, 학습 및 성장의 철저한 경험으로 됩니다. 아이디어를 최소 실행 가능 제품(MVP)으로 구현하기 위해 필요한 노력을 직접 체험하면서, 시계 소리에 성공적인 기업가의 세계의 무몰개한 속도가 반영됩니다. 이 프로그램은 모든 인턴이 기업가처럼 생각하고 행동하게 만드는 것을 목표로 하며, 성공은 노력과 지혜로 와야 한다는 것을 교훈으로 받아들이는 것이 중요합니다.\n\n# 2) 압도적인 반응 - 13,500건 이상 지원서 중 선정:\n\n2023년 MRS 인턴십 프로그램 발표는 학생들 사회에서 깊은 울림을 주었으며, 저희가 받은 13,500건 이상의 지원서 수를 반영했습니다. 이러한 관심의 파도는 숫자뿐만 아니라, 다양한 학위 및 전문 분야에서 이어지는 지원자들로 확장되었습니다. 이 섹션에 포함된 자세한 그래프는 이 분포를 생동감 있게 묘사하며, 이 프로그램의 광범위한 영향력과 매력을 강조합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 3) 선발 기준 및 최종 선발 과정:\n\n선발 단계는 강력한 MVP를 만들기에 적합한 후보자를 찾기 위해 30일에 걸친 철저한 과정이었습니다. 핵심은 기초 개념을 잘 이해하고 있으며, 열정적이고 협력을 할 의지가 있는 개인을 선발하는 데 집중했습니다. 애플리케이션 카테고리는 다양했으며, Frontend부터 Cloud 개발, UI/UX 디자인, 모바일 애플리케이션 개발, 프로젝트 관리, 임베디드 개발 및 기술 문서 작성 스킬을 포함했습니다.\n\n선발을 위한 기준은 엄격했지만 공정했으며, 의사 소통 능력, 태도, 이전 기술 경험, 성격 및 수행한 프리랜서 또는 자원 봉사 활동을 평가했습니다. 약 150명의 초기 후보자들로부터, 최종 인턴 15명으로 결린 최종 코호트는 각자가 독특한 가치를 지닌 인재로, 실용적인 학습, 혁신 및 팀워크 여정에 돌입할 준비가 되어 있었습니다.\n\n이 신중한 과정은 광범위한 지원자 풀에서 가장 유망한 후보자들을 선발하도록 도왔으며, 프로그램의 학습과 성과를 위한 높은 기준을 보장했습니다. 이 철저하고 필수적인 선발 과정은 MRS 인턴십 프로그램 2023의 고수준의 학습과 성과 유지에 대한 우리의 결연한 헌신을 강조합니다. 이 엄격한 선발은 각 참가자의 미래 전문가 활동을 통해 울림이 남을 것으로 믿는 흥미진진하고 풍부하며 생산적인 여정을 준비했습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 3) 인턴십 프로그램의 톤 설정하기 - 첫째 날:\n\n어떠한 학생에게도 인턴십의 첫 날은 중요합니다. 기존의 지루한 경험에 실망했던 많은 사람들을 고려하여, MRS Technologies에서는 기대치를 첫단추부터 달리기 위해 노력하고 있습니다.\n\n![인턴십 이미지](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_1.png)\n\n우리의 여정은 첫날의 조직적인 온보딩으로 시작되었는데, 각 인턴은 계정을 설정하고 업무 영역에 소개되었습니다. 그 후로는 우리 회사의 혁신적인 정신의 상징이 되는 혁신적인 프로젝트들을 엿볼 수 있는 층별 회사 투어가 인사팀이 이끄는 확장된 형태로 이어졌습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n투어를 따라 멘토와 함께하는 세션으로 에너지가 높아졌어요. 각 멘토가 자신을 소개하고 경험을 공유하며, 인턴들이 일상 업무와 프로젝트 목표를 이끌어나가는 데 중요한 역할을 강조했어요. 이 대화로 인턴들 사이에 기대감이 생기며, 존경과 협력의 초기 유대감이 형성되었어요.\n\n![이미지](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_2.png)\n\n이 세션은 만남뿐만 아니라 성장을 격려하고 협력적인 환경을 약속하는 것이었어요. 이 멘토십 프레임워크를 통해 MRS Technologies는 배우고 전문가로 성장하는 푸른 토양으로 빛이 났어요.\n\n그날의 하이라이트는 제가 진행한 마음을 나누는 세션이었어요. 저는 전문 경력, 프로그램의 본질과 기대치, 그리고 이 특별한 경험으로부터 최대 이득을 얻는 데 대한 몇 가지 지혜를 공유했어요. 이 프로그램을 통해 자신의 경력을 형성하는 데 전례없는 기회임을 강조하며, 전문적인 가르침을 제공했어요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n하루가 마무리되었습니다. 영감을 주는 일이 있었죠. 이제는 명확한 비전과 증진된 목적 의식으로 조정된 사고를 갖고, 변화의 여정에 도전할 준비가 돼 있습니다.\n\n### 4) 집중 교육 및 멘토십:\n\nMRS 인턴십 프로그램은 지식을 제공하고 호기심을 자극하며 지속적인 학습을 장려하기 위해 설계된 철저한 훈련 단계로, 기술과 소프트 스킬에 능숙한 다재다능한 인물을 육성하는 것을 목표로 했습니다. 제가 이끈 다양한 워크샵에 참여하여, 주제는 전통적인 범위를 넘어 시스템 디자인부터 효과적인 팀 협업, 초점, 명상, 정신건강의 중요성을 이해하는 등 다양한 주제를 포괄했습니다. 회사 전문가들이 워크샵을 이끌며 프로그램 전체 조직의 다양한 참여를 보장하였으며, 이는 우리 인턴들에게 학습 경험을 증폭시켰습니다.\n\n교육 모듈은 인턴에게 종합적인 기술 세트를 갖게끔 설계된 기술 및 비기술적 워크샵을 조심스럽게 조합한 것이었습니다. 몇 가지 주목할 만한 사례는 다음과 같습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 브랜드 및 Figma 소개\n- 인간 심리학과 사용자 경험\n- WebFlow에서 웹사이트 구축\n- 스타트업, 타당성 분석, 비즈니스 모델 및 MVP\n- 클라우드 컴퓨팅, AWS 및 AWS Amplify 소개\n- 단위 테스팅(자동화된 테스트) 소개\n- 정신 건강 및 감정 지능\n- 재무 101 및 소득세 신고 방법\n- 이력서 작성\n- 효율적인 LinkedIn 활용\n- 임베디드 시스템 및 사물인터넷(IoT)에 대한 워크샵 시리즈\n- 프로젝트 관리 및 스크럼 프레임워크 등\n\n감정 지능 워크샵은 매우 호응이 좋았습니다. 우리 강사 라하트 자바이드는 수치스러운 문제인 수치심과 죄책감 유발을 다루면서 트리거와 침투적인 생각에 대해 명확히 알려주었습니다.\n\n창업 정신은 훈련의 중요한 측면이었으며, 스타트업 생태계를 이해하는 데 중점을 둔 여러 워크샵이 제공되었습니다. 이 세션에서는 타당성 분석, 아이디어 선택 및 비즈니스 모델 구축을 다루어 새로운 시각을 가질 수 있도록 견고한 기반을 제공했습니다. 기존의 틀을 벗어나 생각하도록 인턴들에게 기업가적 사고의 불꽃을 일으키고, 혁신을 상상하고 이끌도록 장려하는 것이 목적이었습니다.\n\n# 5) 임베디드 시스템과 사물인터넷(IoT) 교육:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n저희 인턴십 프로그램에서는 내장 시스템과 사물 인터넷(IoT)에 대한 철저한 교육에 중점을 두고 있습니다. 이 특별한 교육은 저희 회사의 숙련된 강사들과 시니어 임베디드 팀 멤버들이 직접 진행하여, 풍부한 실습 경험을 제공합니다. 계획은 시장 관련 주제를 철저히 다루도록 구성되어 있어, 인턴들에게 인턴십 및 이후의 전문적인 노력을 위한 단단한 기반을 제공합니다.\n\n![Training Image 3](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_3.png)\n\n교육은 이론 이상으로 인턴들을 실제, 실습 경험으로 이끕니다. 이 교육의 핵심은 오늘날에 필수적인 클라우드와의 안전한 통신에 대해 배우는 것입니다. 이는 소프트웨어와 하드웨어를 결합한 흥미로운 프로젝트에 참여하는 데 도움이 되므로 중요합니다.\n\n![Training Image 4](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_4.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 철저한 교육을 통해 MRS에서 인턴은 견고한 최소 우선 제품(MVP)을 만들 준비가 되었으며, 앞으로의 경력을 위한 준비를 충분히 했습니다.\n\n# 6) 혁신 장려: 인턴들이 MVP 선택을 이끄는 중:\n\nMRS 인턴십 프로그램은 mGreens를 개발하는 중인 인턴이 식물 애호가들의 건강한 성장을 자동화하는 데 도움을 주는 MVP로 선도하는 동안 혁신적인 탐험의 길을 열었습니다.\n\n![이미지](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_5.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n핵심 아이디어는 IoT 노드를 만들어 식물과 완벽하게 통합되며 주변 온도, 토양 온도, 습도, 그리고 토양 수분과 같은 다양한 요인을 세심하게 모니터링할 수 있는 것이었습니다. 이 지능형 노드는 각 식물에 맞는 최적 조건에서의 이탈을 감지하고, 사용자에게 즉각적으로 물 주기 또는 선풍기 가동과 같은 교정 조치를 취하도록 경고하는 방식으로 설계되었습니다. 따라서 이 플랫폼은 식물 목록을 표시하여 사용자가 건강하거나 관리가 필요한 식물을 구분해 줄 수 있었습니다.\n\n![Image](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_6.png)\n\n개발 단계에 착수하며 소프트웨어 및 하드웨어 팀은 자발적으로 협력하여 mGreens 비전을 실현했습니다. 짧은 기간 내에 프로젝트를 완료하기 위해 팀이 밤낮 없이 협업하는 모습을 보았습니다. 임베디드 팀은 ESP32와 여러 센서를 사용하여 IoT 노드를 개발하고, 내구성과 설치 편의를 위해 사용자 정의 3D 프린팅 케이스에 수납했습니다. 이 하드웨어 스위트는 원하는 임계 값에서 벗어날 때 실시간 경고를 보내도록 설계되었습니다. 이는 AWS 클라우드 서비스를 사용한 백엔드 시스템을 통해 이루어졌습니다.\n\nUI/UX 팀은 브랜딩을 담당하며 Figma를 사용해 시각적으로 매력적인 인터페이스를 만들었고, 기술 팀은 백엔드로 AWS, 웹앱 개발로 React, 데스크톱 기반의 관리 포털로 QT를 활용했습니다. 또한 Android 모바일 앱과 WebFlow 마케팅 웹사이트를 개발했는데, 이는 프로그램 중에 UI/UX 팀이 4주도 안 되어서 개발한 것입니다. 소프트웨어에는 주요 식물에 대한 최적 값이 포함된 데이터베이스도 포함되어 있어 사용자들이 농작물을 모니터할 수 있는 기반을 제공하며, 숙련된 사용자들은 고유한 요구사항에 따라 임계 값을 수정할 수 있는 유연성도 가지고 있었습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n여기 우리 인턴들이 만든 멋진 사진 몇 장이 있어요.\n\n![Image 7](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_7.png)\n\n![Image 8](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_8.png)\n\n![Image 9](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_9.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![Image 1](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_10.png)\n\n![Image 2](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_11.png)\n\n![Image 3](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_12.png)\n\n# 7) Retrospective Meeting with Interns and Mentors\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nMRS 인턴십 프로그램의 결론은 모든 인턴과 멘토가 참석한 회고 회의로 마무리되었습니다. 각 인턴은 지난 몇 주 동안의 여정을 5분간의 내러티브로 소개하며 자신의 경험을 나누었습니다. 그들의 말은 학습, 우정, 지식 향상을 위한 지속적 노력이 담긴 여정을 보여주었습니다.\n\n인턴들 다음으로 각 멘토는 자신의 인사이트와 경험을 공유했습니다. 그들은 인턴의 진전과 함께 극복한 독특한 어려움을 주목했습니다. 방안은 감사함과 공유된 성취감으로 넘쳤으며 회의실 안의 모두에게 울려퍼졌습니다.\n\n마지막으로 CTO로서, 저는 그들의 여정에 대한 생각과 앞으로의 방향성을 나눴습니다. 인턴들이 이 소중한 경험을 마지막 학년과 전문가 생활로 나아가면서 어떻게 활용할 수 있는지에 대해 논의했습니다. 이 대화는 인턴들을 위한 도로를 제공하고, 얻은 지식과 기술이 실제 세계에서 어떻게 활용될 수 있는지 상상하도록 도왔습니다. 이는 희망, 야망, 그리고 기술 세계에서 의미 있는 흔적을 남기고자 하는 공동의 꿈으로 가득한 따뜻한 세션이었습니다. 순간의 감정적 깊이가 느껴지며, 성장, 팀워크, 혁신의 여정을 완벽하게 마무리하는 모습을 보여주었습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![이미지](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_14.png)\n\n# 8) 업적을 기념하며: 최종 발표 및 폐회식\n\nMRS 인턴십 프로그램의 여정은 최종 발표 및 폐회식을 통해 업적을 축하하며 화려하게 마무리되었습니다. 이 자리에는 모든 멘토, 워크샵 강사, 인턴들, 그리고 MRS Technologies와 MTronic Pakistan의 C급 리더십이 참석했습니다.\n\n참석자들로 붐볐던 이번 세션은 각 인턴이 진지한 발표로 시작하여 프로젝트에서의 역할, MVP에 기여한 부분, 프로그램 중의 개인적 경험, 그리고 좋아했던 워크샵과 멘토에 관해 따뜻한 이야기를 나누었습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n열정적인 노력과 혁신의 결과물을 보여주며 MVP의 자세한 데모가 발표되면서 분위기는 흥분으로 넘쳤어요. 인턴들이 참여자들을 놀라게 한 mGreens에 대한 매력적인 데모 비디오를 선보여 방 안에 기쁨과 자부심이 가득했던 특별한 순간이 있었어요.\n\n이어서 MRS Technologies의 CEO 인 Dr. Mansoor Shaukat과 MTronic Pakistan의 최고 경영 책임자인 와카스 칼릴이 프로그램에 대한 경탄과 감사의 뜻을 나누었어요. 와카스 칼릴은 연설 중 다수의 창업 기업과의 폭넓은 경험에도 불구하고 이처럼 철저하고 영향력 있는 프로그램을 다른 어디서도 경험하지 못했다고 말씀했어요.\n\n이후에는 CxOs가 인턴들에게 인턴십 완수 증명서, 멘토에게 인정 증명서, 워크숍 강사에게 감사 증명서를 수여했어요. 이 행동은 이 풍부한 여정에 참여한 개인 각각의 끈기와 우수한 노력을 인정하고 귀추를 상징합니다.\n\n이식은 Abdullah Umer에게 특별한 \"리더십상\"을 수여하며 절묘한 리더십과 프로그램 전체를 통틀어 뛰어난 성과를 인정받았어요. 이상의 시상은 인턴십 프로그램 동안 여러 명의 개인이 모니터링한 KPI를 기반으로 수여되었어요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_15.png](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_15.png)\n\n하루를 단축하며 그룹 사진을 찍고 사소한 대화를 나누는 동안 감정, 동료애, 그리고 성취감을 나누며 방 안은 들뜬 분위기로 넘쳤습니다. 미소, 웃음소리, 그리고 작별 인사가 MRS 인턴십 프로그램 2023을 통해 각 참가자가 걸어온 보상적이고 변화적인 여정의 본질을 담아냈습니다.\n\n# 선발되지 않은 동료들은 어떨까요?\n\n선발되지 않은 분들을 위해 그들에게는 단순한 신청 상태 통지 이상을 제공했습니다. 앞날을 안내하기 위해 상세한 이메일을 작성했습니다. 프로그램에 합격하지 못했더라도, 이 이메일은 LinkedIn 네트워킹, 블로깅과 콘텐츠 제작, 개인 브랜딩과 같은 중요 영역에 초점을 맞추는 데 도움이 되었습니다. 이를 통해 역경을 겪더라도, 그들이 전문 경력을 이어 나갈 명확한 방향을 가지도록 돕는 것이 목표였습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 결론\n\n2023년 MRS 인턴십은 혁신적인 기술 시야의 실제 측면으로의 환상적인 여정으로 나타났습니다. 신입사원들을 기술 산업에 대비하는 좋은 모범 사례를 세우면서 훌륭한 예를 보여주었습니다. 이제 경험을 쌓은 각 인턴은 스타트업 문화 속에서 매끄럽게 녹아들며 도전을 극복하고 해결책을 찾아가며 전문적인 우정을 통해 성장했습니다. 모든 문제 해결, 모든 불일치 해소, 그리고 모든 프로젝트 완료는 전통적인 수업이 제공할 수 있는 것 이상으로 기술 세계에 대한 이해를 쌓게 해주었습니다.\n\n우리의 접근 방식은 다르다 - 우리는 기본적인 작업을 할당하는 전형적인 방식에서 벗어났습니다. 대신, 우리는 인턴을 의미 있는 프로젝트의 핵심으로 밀어넣어 현실적인 도전과 해결책을 이해하도록 돕았습니다. 실제 프로젝트를 통한 실무 경험은 단지 전문계에 발을 딛기 전에 체크할 상자일 뿐인 것보다 풍부한 경험으로 만들어 주었습니다.\n\n인턴들이 배우기 위해 노력하는 것이 아니라 뛰어나기 위해 보이는 열정과 결단력, 멘토들의 지식을 공유하기 위한 헌신, 그리고 결과적으로 나타난 혁신적인 프로젝트들이 모두 2023년 MRS 인턴십 프로그램의 성공에 대해 많은 이야기를 전합니다. 올해의 프로그램을 마무리하면서 다음 집단이 어떤 성과를 이룰지에 대한 기대가 쌓이기 시작합니다. 업데이트를 위해 MRS 여름 인턴십 페이지를 주시해 주시길 바랍니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n더 많은 정보를 원하거나 가이던스가 필요하다면, LinkedIn에서 저와 연락해주세요. 모든 지망 기술 전문가들을 위해 더 많은 학습, 혁신, 그리고 밝은 미래가 되길 바라겠습니다!\n\n![image](/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_16.png)\n","ogImage":{"url":"/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_0.png"},"coverImage":"/assets/img/2024-05-18-MRSTechnologiesSummersInternshipProgram2023AComprehensiveJourney_0.png","tag":["Tech"],"readingTime":15},{"title":"메이테이어 언어의 기계 번역 앱 및 웹 페이지","description":"","date":"2024-05-18 18:28","slug":"2024-05-18-MachinetranslationappsandwebsofMeiteilanguage","content":"\n![2024-05-18-MachinetranslationappsandwebsofMeiteilanguage_0](/assets/img/2024-05-18-MachinetranslationappsandwebsofMeiteilanguage_0.png)\n\n메이테이어, 또는 매니푸리어로도 알려진 메이테이어 언어는 매니푸르 주, 아사름 주의 공용어일 뿐만 아니라 인도 공화국의 헌법적 언어이기도 하며, 트리푸라 주의 문학적, 학술적인 공용어로 인정받고 있습니다. 이 언어는 다양한 기계 번역 앱과 웹에서 지원되지만, 어떤 것이 가장 정확한지 선택하는 것은 쉬운 일이 아닙니다. 흠... 소소한 조사를 해 봅시다!\n\n한 가지 유의할 점은 메이테이어가 매니푸리어, 미티, 미테이, 메이테일론, 미티론, 칸글레이 등 다양한 이름으로 알려져 있다는 것입니다. 따라서 서로 다른 앱과 웹사이트에서는 이러한 인기 있는 동의어 중 하나가 사용될 수 있습니다. 그러니 한 가지 이름을 입력했는데 찾을 수 없다면, 잠시 다시 확인해 보세요! 그렇게 어려운 일은 아닙니다!\n\n여기서는 실험을 목적으로 \"매니푸르는 멋진 곳입니다.\"라는 문장을 사용합니다. 이 문장이 모든 앱과 웹에서 번역에 사용될 것입니다. 일부는 메이테이 메이에크 문자 (mni-Mtei), 또는 벵골 문자 (mni-Beng), 또는 라틴 문자 (mni-Latn)을 사용합니다. 여기서 \"mni\"은 \"매니푸리어\"를 나타내고 다른 코드 단어는 각각의 문자체계를 참조합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 구글 번역 ???\n\n![이미지](/assets/img/2024-05-18-MachinetranslationappsandwebsofMeiteilanguage_1.png)\n\n구글 번역은 메이테이어 언어에 메이테이 마예크 문자체계를 사용합니다. 고급 용어에 대한 단어의 경우 구글 번역은 주로 번역하는 대신 음역합니다. 위 이미지에서 구글은 \"마니푸르는 멋진 장소입니다\"를 \"ꯃꯅꯤꯄꯨꯔ ꯑꯁꯤ ꯑꯉꯀꯄꯥ ꯃꯐꯝ ꯑꯃꯅꯤ꯫\" (manipur asi angakapa mapham amani)로 번역하고 있습니다. 여기서 맞춤법 오류가 발견되며, 이는 해당 언어에서 더 많은 경우에 자주 발생합니다. 그러나 문장 구조 표현 방법은 중간 수준입니다.\n\n평가한다면 5점 중 3.5점을 받을 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## Microsoft Translator 리뷰\n\n![마이크로소프트 트랜스레이터](/assets/img/2024-05-18-MachinetranslationappsandwebsofMeiteilanguage_2.png)\n\n마이크로소프트 트랜스레이터는 영어에서 매니푸리어로 번역할 때 나란히 메테이 마예크 문자와 라틴 문자를 사용하지만 매니푸리어에서 영어로 번역할 때는 라틴 문자를 사용할 수 없습니다. 다양한 어휘 사용에서 우수한 성능을 발휘합니다. 맞춤법 오류가 거의 없는 것으로 나타납니다. \"Manipur is a wonderful place\"이 \"ꯃꯅꯤꯄꯨꯔ ꯑꯁꯤ ꯌꯥꯝꯅ ꯐꯖꯕ ꯃꯐꯝ ꯑꯃꯅꯤ꯫\" (manipur asi yaamna phajaba mapham amani.)로 번역됩니다. 정확성은 완벽하진 않지만 여전히 꽤 양호합니다.\n\n평가하면 5점 만점에 4점을 줄 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## ???\n\n<img src=\"/assets/img/2024-05-18-MachinetranslationappsandwebsofMeiteilanguage_3.png\" />\n\nBhashini은 인도 정부의 프로젝트로, 메이테이어 언어에는 Meetei Mayek 스크립트를 사용합니다. 이 알고리즘은 인도 정부와 협력하여 개발된 IIT 매드라스의 AI 기술 플랫폼인 AI4Bharat (인공 지능-인도를 위한)에서 사용됩니다. Bhashini는 메이테이어 언어에 대해 남성과 여성 음성 출력 기술을 모두 제공합니다. 일부 맞춤법 오류가 있습니다. 번역 정확도는 Microsoft Translator와 거의 동일하여 상당히 좋습니다.\n\n여기서 \"Manipuri is a wonderful place\"라는 문구를 \"ꯃꯅꯤꯄꯨꯔ ꯑꯁꯤ ꯐꯖꯔꯕ ꯃꯐꯝ ꯑꯃꯅꯤ ꯫\" (manipur asi phajaraba mapham amani.)로 번역합니다. 문구는 다른 번역 앱 및 웹과 달리 독특합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n만약 평가해야 한다면 5점 만점에 4점을 줄 것입니다.\n\n## Glosbe 번역 ???\n\n![이미지](/assets/img/2024-05-18-MachinetranslationappsandwebsofMeiteilanguage_4.png)\n\nGlosbe 번역은 메이테이어 언어에 대해 벵골 문자를 사용합니다. 번역 정확도는 상당히 좋고 맞춤법 실수는 드물게 발생합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n여기서 \"Manipur is a wonderful place\"는 \"মনিপুর অসি য়াম্না ফবা মফম অমনি।\" (manipur asi yaamna phaba mapham amani.)로 번역됩니다. 완벽하지는 않지만 언어 어휘의 이해 수준에 맞게 사용됩니다.\n\n평가한다면, 5점 중 4점을 얻을 것입니다.\n\n## 현대기계번역 ???\n\n![이미지](/assets/img/2024-05-18-MachinetranslationappsandwebsofMeiteilanguage_5.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n현대적인 MT는 메이테이어어를 번역할 때 벵골어 스크립트를 사용합니다. 2024년 중반 기준으로 번역 정확도는 상당히 낮지만 이전보다 크게 개선 중입니다. 맞춤법 실수는 단어 선택 오류에 비해 적습니다. 대부분의 문장 번역 결과는 정확도가 떨어지지만, 단어 번역에 대해서는 꽤 좋습니다.\n\n여기서 \"Manipur is a wonderful place\"는 \"মনিপুর অসি য়াম্না নুংঙাইবা মফম অমনি ।\" (manipur asi yaamna nungngaiba mapham amani.)로 번역됩니다. 관련된 단어가 사용되었지만, 이 간단한 짧은 문장에서도 완벽하게 번역되지는 못합니다.\n\n평가할 경우, 5점 중 2점을 받을 것입니다.\n\n## 그 외 ???\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n다른 번역 서비스가 많이 있습니다. Bing AI의 Copilot, ELRA 카탈로그 등이 있어요.\n\nMeitei 언어로 Copilot of Bing AI는 매우 불규칙합니다. 때때로 벵골어 스크립트를 사용하고 때로는 Meitei 스크립트를 사용하며 때로는 라틴 스크립트를 사용하며 때로는 완전히 번역에 실패하기도 해요. Manipuri로 다음을 번역해 주세요: ... ... ... 와 같이 말하고 영어로 문장이나 단어를 입력해 주면 돼요. Manipuri에서 영어로 역변환은 2024년 중반 기준으로 작동하지 않는 것처럼 보여요.\n\n평가해야 한다면, 5점 만점에 2점을 줄 것입니다.\n\n이것은 Meitei 언어에 대해 가장 널리 사용되는 기계 번역 앱과 웹 중 일부에 대한 소개에 불과해요. 평가는 제 개인적인 의견이며 제 관찰에 기반하며 다른 사람들과 차이가 있을 수도 있어요. Meitei 언어의 언어 애호가, 학습자 및 학생들에게 이 작은 정보 조각이 어느 정도 도움이 되기를 바래요. 응원합니다! :-)\n","ogImage":{"url":"/assets/img/2024-05-18-MachinetranslationappsandwebsofMeiteilanguage_0.png"},"coverImage":"/assets/img/2024-05-18-MachinetranslationappsandwebsofMeiteilanguage_0.png","tag":["Tech"],"readingTime":6},{"title":"데이터 엔지니어링은 엔지니어를 위한 것입니다  아니에요","description":"","date":"2024-05-18 18:24","slug":"2024-05-18-DataEngineeringisforEngineersNOT","content":"\n## 글을 쓰는 사람이 데이터 엔지니어링도 배울 수 있을 거라고 생각해요.\n\n\"이게 무슨 일이죠.\"\n\n처음 데이터 엔지니어링 업무를 맡았을 때 나는 이렇게 생각했어요. 하지만 얼마 후, 우리가 하나씩 위키피디아에서 집어낼 몇 가지 숫자를 가져오는 것이 첫 번째 단계였다는 것을 깨달았죠.\n\n파이썬에서 작업을 해주셔야겠다고 말씀하셔야 했던 첫 번째 어려움이 있었어요! 즉, 데이터를 수동으로 가져오는 날이 끝났다는 거죠. 인내심을 가지고 자신에게 이런 말을 해보세요. 괜찮아, 이 일 잘 할 수 있어요!\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n문제: 사회과학 졸업생이 데이터 엔지니어링을 능숙하게 수행할 수 있을까요? 자동화된 데이터 파이프라인을 구축하고 안전하게 클라우드에 보관할 수 있을까요?\n\n귀무가설: 엔지니어는 생업으로 글을 쓰는 사람만큼 데이터 엔지니어링을 할 수 있습니다.\n\n이 가설을 기각해야 할까요? 내 직감은 \"예\"라고 말했습니다. IT 비전문가인 나 같은 사람이 그렇게 할 수는 없을 것 같아요.\n\n대안 가설은 아마도 이렇게 할 수 있을 것 같아요: 생업으로 글쓰는 사람도 엔지니어처럼 데이터 엔지니어링을 배울 수 있다면요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n여기서 시작해요...\n\n## 우리 비즈니스 케이스\n\n이 작업은 주로 전기 이동성에 관련된 사업을 하는 \"Gans\" 회사를 위한 데이터베이스를 생성하는 것을 포함하고 있습니다. 특정 시간에 충분한 이동성 단위를 제공하기 위해 날씨 요소를 기반으로 수요를 측정하기 위한 데이터 과학자를 필요로 합니다.\n\n회사의 주요 사업은 독일에서 스쿠터를 대여하는 것이기 때문에 비가 오거나 눈이 오는 경우에는 일반적으로 수요가 줄어들게 됩니다. 비나 눈이 예보된 경우, 임시 수요도 증가할 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n따라서, 현재 과제는 도시와 날씨 정보로 채워진 간단한 SQL 데이터베이스를 구축하는 것입니다. 회사의 운영 부서는 매일이 이 데이터베이스에 액세스하여 이동 가능 차량의 지리적 가용성에 관한 판단을 내릴 수 있을 것입니다.\n\n나중에 데이터베이스는 관광객 방문 예상 등을 제공하기 위해 공공 교통 도착 정보(예: 항공편, 기차, 또는 버스 API 사용)가 포함될 수 있습니다. 이들은 회사의 잠재적 고객 중 일부입니다.\n\n다음은 날씨와 항공편 API를 포함한 지도 프로젝트의 모습입니다:\n\n<img src=\"/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_0.png\" />\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 기사에서는 날씨 데이터 통합만 다루고 나중에 전송 부분은 나중에 개선할 것입니다.\n\n시작하기 전에 Python에서 필요한 모든 라이브러리를 가져와야 합니다:\n\n```python\nimport pandas as pd\nimport requests\nfrom bs4 import BeautifulSoup\nfrom datetime import datetime\nfrom pytz import timezone\n```\n\n## 웹 스크래핑 101: HTML 코드를 가져오는 방법?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n먼저, 다른 테이블과 관련하는 주요 테이블로 작용하는 도시 정보가 포함된 테이블을 만들어야 합니다. 이 테이블은 주기적으로 업데이트할 필요가 없는 정적 테이블이 될 것입니다. 이 테이블을 \"cities_info\"라고 부를 것입니다.\n\n각 도시에 대해 고유한 도시 ID, 도시 이름, 독일의 소속 주(State), 위도 및 경도가 포함된 5개 열이 있을 것입니다. 각 도시에 대한 이 정보는 영어 위키피디아 사이트에서 스크래핑하여 얻을 수 있습니다. 예산이 허용한다면, 신뢰할 수 있는 데이터와 방법론적 정보가 포함된 도시의 API를 구매할 수 있습니다. 이 프로젝트에서는 위키피디아를 사용하여 스크래핑 기술을 연습할 것입니다.\n\n처음에는 각 웹사이트마다 HTML 코드를 수동으로 내보내고 Vs Code에 복사해야 한다는 생각이 압도적이었습니다. 그러나 다행히 파이썬의 \"requests\" 라이브러리를 사용하면 자동으로 수행할 수 있음을 알게 되어 안도했습니다:\n\n```js\nimport requests\nberlin_url = \"https://en.wikipedia.org/wiki/Berlin\"\nberlin_response = requests.get(berlin_url)\nberlin_soup = BeautifulSoup(berlin_response.content, 'html.parser')\nprint(berlin_soup.prettify)\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n파이썬: 1 - 나: 0\n\n## 루프와 함수\n\n이터레이션의 성배입니다. 이들 없이는 동일한 코드를 재생산하고 다른 URL에 동시에 적용할 수 없습니다. 이것이 웹 스크레이핑을 자동화하는 열쇠입니다.\n\n여기에는 각 위키피디아 사이트의 HTML 코드를 검색하기 위해 사용한 루프의 예시가 있습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\ncities_list = [\"Berlin\", \"Hamburg\", \"Munich\", \"Cologne\", \"Frankfurt\"]\n\nfor city in cities_list:\n  url = f\"https://www.wikipedia.org/wiki/{city}\"   # url을 f 문자열로 변환하여 도시를 변수로 넣어 해당 도시에서 다른 도시로 변경됨\n  response = requests.get(url)          # 위키백과 페이지의 모든 내용을 가져와 response에 저장\n  city_soup = BeautifulSoup(response.content, 'html.parser')\n```\n\n지금은 함수가 무서워서 최대한 피하고 있어요 😅\n\n파이썬: 1,000 — 나: 0\n\n## HTML에서 무엇을 접근하나요?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nHTML에서 \"p 태그\"라는 것이 있어요. 이를 액세스하는 데 유용합니다. 다음 코드를 사용하여 그렇게 할 수 있어요:\n\n```js\nprint(soup.p)   # 첫 번째 p 태그 자체에 접근\nprint(soup.p.string)  # 첫 번째 p 태그와 관련된 문자열에 접근\n```\n\n```js\nfor child in soup.div:  # 1번째 div에서 각 자식을 찾아서 인쇄하는 예제\n    print(child)\n```\n\n## Python에서 데이터프레임 및 SQL에서 해당 테이블 만들기\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nHTML 및 웹 스크래핑 기술을 연마한 후, 첫 두 테이블에 필요한 모든 정보를 얻기 위해 이 루프를 만들었어요.\n\n첫 번째 데이터프레임은 정적 인덱스로 작동할 것이고 (즉, 정보를 정기적으로 업데이트할 필요가 없어요): cities_info\n\n```js\ncities_list = [\"베를린\", \"함부르크\", \"뮌헨\", \"쾰른\", \"프랑크푸르트\"]\nstates = []\nlatitudes = []\nlongitudes = []\n\nfor city in cities_list:\n  url = f\"https://www.wikipedia.org/wiki/{city}\"\n  city_soup = BeautifulSoup(response.content, 'html.parser')    # (위키백과 사이트의 내용을 city_soup 변수에 저장하는) 내용을 구문 분석합니다.\n\n  # 도시가 속한 주를 검색합니다\n  if city not in [\"함부르크\", \"베를린\"]:         # 베를린의 경우 일반적인 .find 공식도 작동할 거예요! 주 섹션이 없는 \"함부르크\"만이 예외에요\n    city_state = city_soup.find(\"table\", class_=\"vcard\").find(string=\"주\").find_next(\"td\").get_text()  # 다른 주 이름을 가진 도시에 대한 주를 검색합니다\n  else:\n    city_state = city     # 함부르크와 베를린의 경우, 동명의 도시 이름을 가져올 거예요\n  states.append(city_state)\n\n  # 각 도시의 위도를 검색하여 위도 열에 추가합니다\n  city_latitude = city_soup.find(class_=\"latitude\").get_text()\n  latitudes.append(city_latitude)\n\n   # 각 도시의 경도를 검색하여 경도 열에 추가합니다\n  city_longitude = city_soup.find(class_=\"longitude\").get_text()\n  longitudes.append(city_longitude)\n\ncities_info_non_rel = pd.DataFrame({         # 이것이 cities_info 데이터프레임이에요\n    \"도시 이름\": cities_list,\n    \"독일 주\": states,\n    \"위도\": latitudes,\n    \"경도\": longitudes\n})\n\ndisplay(cities_info_non_rel)    # 표시하면 테이블이 더 예쁘게 보여요\n```\n\n또한, 연간 한 번씩 업데이트될 것으로 예상되는 인구 데이터를 포함하는 두 번째 데이터프레임도 생성했어요: cities_population\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```sql\n/***************************\n환경 설정\n***************************/\n\n-- 데이터베이스가 이미 있는 경우 삭제\nDROP DATABASE IF EXISTS gans;\n\n-- 데이터베이스 생성\nCREATE DATABASE gans;\n\n-- 데이터베이스 사용\nUSE gans;\n\n\n/***************************\n첫 번째 테이블 생성\n***************************/\n\n-- 'cities_info' 테이블 생성\nCREATE TABLE cities_info (\n    cities_id INT AUTO_INCREMENT, -- 도시마다 자동으로 생성된 ID\n    city_name VARCHAR(255) NOT NULL, -- 도시 이름\n    german_state VARCHAR(255) NOT NULL, -- 주 이름\n    latitude VARCHAR(255) NOT NULL, -- 위도 좌표\n    longitude VARCHAR(255) NOT NULL, -- 경도 좌표\n    PRIMARY KEY (cities_id) -- 각 도시를 고유하게 식별하기 위한 기본 키\n    );\n\n\n/***************************\n두 번째 테이블 생성\n***************************/\n\nCREATE TABLE cities_population (\n    cities_id INT,\n    population INT, -- 인구수\n    year_data_retrieved INT, -- 인구 데이터를 검색한 해당 년도\n    FOREIGN KEY (cities_id) REFERENCES cities_info(cities_id)\n);\n```\n\n이제 Python에서 데이터를 첫 번째 SQL 테이블로 전송합니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\nschema = \"gans\"     # 데이터베이스 이름\nhost = \"xxx.x.x.x\"\nuser = \"root\"               # 사용자 이름\npassword = \"xxxx\"           # SQL 암호 직접 지정 또는 다른 노트북에서 가져오기 (\"from xxxfile import my_password\")\nport = 3306\n\nconnection_string = f'mysql+pymysql://{user}:{password}@{host}:{port}/{schema}'\n# 이건 파이썬 노트북을 SQL Workbench에 연결하는 방법이에요\n```\n\n```js\ncities_info_non_rel.to_sql('cities_info',   # 파이썬에서 SQL로 데이터를 보내는 방법\n                  if_exists='append',       # 덮어쓰지 않고 기존 데이터에 추가하기 위함\n                  con=connection_string,    # SQL Workbench에 연결할 때 필요한 인자\n                  index=False)\n```\n\n첫 번째 시도는 로컬에서 이루어졌습니다. 나중에 Google Cloud Platform 인스턴스를 추가하면 \"host\" 필드를 편집하여 이 데이터를 클라우드에 직접 전송할 수 있습니다.\n\nSQL에 첫 번째 테이블이 생성되면 cities_info에 포함된 데이터를 검색하여 두 번째 cities_population 데이터 프레임에서 해당 cities_id 열을 인덱스로 사용할 수 있습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\ncities_info = pd.read_sql(\"cities_info\", con=connection_string)   # 이 코드는 SQL에 저장된 정보를 \"읽어옵니다\"\ncities_info\n```\n\n다음은 cities_info의 모습입니다:\n\n<img src=\"/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_1.png\" />\n\n두 번째 데이터프레임의 내용을 SQL로 넣기 전에, 새로 생성된 cities_id 열을 사용하여 cities_populations 데이터프레임에 추가해야 합니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아래는 칼럼 순서를 재조정하고, 이제 cities_populations 데이터프레임에 cities_id 칼럼이 있기 때문에 더 이상 city_name 칼럼이 필요하지 않으므로 삭제했습니다:\n\n```js\n# 다른 인구 데이터프레임에 cities_id 칼럼을 추가합니다\ncities_population[\"cities_id\"] = cities_info_non_rel[\"cities_id\"]\ncities_population\n\n# city_name 칼럼은 더 이상 필요하지 않기 때문에 삭제하고 칼럼 순서를 바꿔 더 직관적으로 만듭니다\ncities_population = cities_population[[\"cities_id\", \"population\", \"year_data_retrieved\"]]\ncities_population\n```\n\n그리고 제 두 번째 데이터프레임이 있습니다. 이 데이터프레임은 일부 동적입니다(데이터가 때때로 업데이트됩니다. 예: 연간 한 번):\n\n![데이터 엔지니어링은 엔지니어를 위한 것](/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_2.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n당분간은, 다음 해까지 업데이트되지 않을 동적이 아닌 cities_population 테이블로 간주하겠습니다.\n\n이제 우리는 로컬 SQL 인스턴스로 내용을 푸시할 준비가 되었습니다:\n\n```js\n# 두 번째 테이블 내용을 SQL로 푸시합니다\ncities_population.to_sql('cities_population',   # 이렇게 하면 Python에서 SQL로 푸시합니다\n                  if_exists='append',       # 덮어쓰기를 원하지 않으므로, 기존 데이터에만 데이터를 추가합니다\n                  con=connection_string,    # con은 sql workbench에 연결하기 위해 필요한 인자입니다\n                  index=False)\n```\n\nSQL에서 모든 것을 실행하고 \"역공학\" 기능을 사용하면, 우리의 스키마의 가장 초기 버전을 얻을 수 있습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_3.png\" />\n\n우리는 학습 곡선 속으로 더 깊이 파고들고 있어요.\n\n다음 단계: API를 데이터베이스에 통합하기. 지구상의 모든 데이터 과학자의 본질이라고 할 수 있죠.\n\nAI가 따라잡기 전에 어떻게 해야 할지 배워야겠네요! (또는 외계인이 그들의 데이터 요구를 어떻게 처리하는지를 보일 때까지) 👽\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 날씨 API 사용하기\n\n이 프로젝트의 세 번째 큰 단계는 현재 존재하는 데이터 저장소에서 날씨 데이터를 추출하고 SQL 데이터베이스에 통합하는 것입니다. 이러한 저장소들은 API를 통해 접근할 수 있습니다. API는 Application Programming Interface의 약자로, 서로 다른 소프트웨어 응용 프로그램 간에 통신할 수 있도록 하는 규칙과 프로토콜의 집합입니다.\n\n이를 위해 우리는 openweathermap.org 웹사이트를 사용할 것입니다. 이 사이트를 통해 전 세계 어느 위치의 무료 날씨 예보에도 접근할 수 있습니다. 우리는 5일 날씨 예보 API를 사용할 것이며, 3시간 간격의 예보 데이터를 포함합니다: [https://openweathermap.org/forecast5](https://openweathermap.org/forecast5)\n\n이제 우리 프로젝트의 핵심 작업에 직면했습니다: 우리가 원하는 날씨 데이터를 검색하고 SQL 데이터베이스로 전송하기 위한 필요한 코드를 작성하는 것입니다. 수십 시간 동안 고군분투한 결과, 가장 관련성 있는 날씨 데이터를 추출하기 위한 이 코드를 개발해냈습니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\ndef get_weather_data(cities):\n  # 클라우드에서 작업할 예정이므로 컴퓨터는 어디에 있을지 모릅니다 - 컴퓨터 시간대를 우리 지역 시간대로 수정합시다.\n  berlin_timezone = timezone(\"Europe/Berlin\")\n  API_key = \"7e5623c79f102b6c08b15c8hjib4cc9l\"    # 이것은 실제 값이 아닙니다.\n  weather_items = []\n\n  for city in cities:\n    url = (f\"http://api.openweathermap.org/data/2.5/forecast?q={city}&appid={API_key}&units=metric\")\n    response = requests.get(url)\n    json = response.json()\n\n    # 예보를 작성한 시간을 알기 위해 검색 시간을 추가했습니다.\n    retrieval_time = datetime.now(berlin_timezone).strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # 이제 우리의 관련 데이터베이스에서 데이터를 사용하므로, 도시는 도시 이름이 아닌 도시 ID를 반영해야 합니다.\n    city_id = cities_info.loc[cities_info[\"city_name\"] == city, \"city_id\"].values[0]  # 여기에서 값들을 검색해야 하며, 그렇지 않으면 시리즈를 보여줍니다.\n\n    for item in json[\"list\"]:\n        weather_item = {\n            # 여러 도시를 고려할 때 정보를 명확히 알 수 있게 도시 이름을 추가했습니다.\n            \"city_id\": city_id,\n            \"forecast_time\": item.get(\"dt_txt\", None),\n            \"temperature\": item[\"main\"].get(\"temp\", None),\n            \"feels_like\": item[\"main\"].get(\"feels_like\", None),\n            \"forecast\": item[\"weather\"][0].get(\"main\", None),\n            \"humidity\": item[\"main\"].get(\"humidity\", None),\n            \"rain_in_last_3h\": item.get(\"rain\", {}).get(\"3h\", 0),\n            \"risk_of_rain\": item[\"pop\"],\n            \"snow_in_last_3h\": item.get(\"snow\", {}).get(\"3h\", 0),\n            \"wind_speed\": item[\"wind\"].get(\"speed\", None),\n            \"data_retrieved_at\": retrieval_time\n        }\n\n        weather_items.append(weather_item)\n\n  weather_df = pd.DataFrame(weather_items)\n  weather_df[\"forecast_time\"] = pd.to_datetime(weather_df[\"forecast_time\"])\n  weather_df[\"data_retrieved_at\"] = pd.to_datetime(weather_df[\"data_retrieved_at\"])\n  weather_df[\"snow_in_last_3h\"] = pd.to_numeric(weather_df[\"snow_in_last_3h\"], downcast=\"float.\")\n\n  return weather_df\n\nweather_df = get_weather_data([\"Berlin\", \"Hamburg\", \"Munich\", \"Cologne\", \"Frankfurt\"])\nweather_df     # 함수를 사용하여 새로운 데이터프레임 생성\n```\n\n날씨 데이터프레임 및 테이블의 중요 기능 중 하나는 데이터 검색 시간을 기록하는 열을 포함해야 한다는 것입니다. 이를 통해 필터링 및 일정한 기간 후 자동으로 이전 데이터가 삭제되도록 SQL에서 프로시저나 함수를 작성하거나 만들 수 있습니다. 이는 데이터 일관성 목적으로 날씨와 데이터 검색 시간이 항상 예보에 대한 날짜/시간과 다른 것임을 항상 인식할 수 있도록 하기 위한 것입니다.\n\n이것이 Python에서 새로운 날씨 데이터프레임이 보이는 방식입니다:\n\n<img src=\"/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_4.png\" />\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n일단 날씨 데이터프레임 구조를 가지고 있었을 때, SQL에서 날씨 테이블을 생성하는 작업을 시작했습니다:\n\n```js\n/***************************\n날씨 테이블을 생성합니다\n***************************/\n\nCREATE TABLE weather (\n    city_id INT,\n    forecast_time datetime,\n    temperature float,\n    feels_like float,\n    forecast VARCHAR(255) NOT NULL,\n    humidity INT,\n    rain_in_last_3h FLOAT,\n    risk_of_rain FLOAT,\n    snow_in_last_3h FLOAT,\n    wind_speed FLOAT,\n    data_retrieved_at DATETIME,\n    FOREIGN KEY (city_id) REFERENCES cities_info(city_id)\n    );\n\n-- TRUNCATE TABLE weather;   -- 테이블이 너무 커지고 데이터가 오래되었을 때 모든 행을 지워야 할 수도 있습니다\n```\n\n이것은 엔지니어링을 통해 역 공학을 거쳐 업데이트된 SQL 스키마입니다:\n\n<img src=\"/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_5.png\" />\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 지역에서 전역으로\n\n우리의 코드를 클라우드에 올리기 전에, 날씨 데이터 검색 코드가 로컬에서 작동하는지 확인해야 합니다. Python으로 코드를 작성한 후, 로컬 SQL 인스턴스로 전송해보겠습니다:\n\n```python\nweather_df.to_sql(\"weather\",\n                  if_exists='append',\n                  con=connection_string,\n                  index=False)\n```\n\n만약 새 데이터가 우리의 SQL 테이블에 추가된다면, 작동하는 것입니다!\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n파이썬을 통해 로컬 데이터를 입력한 후 SQL 날씨 테이블이 어떻게 보이는지는 다음과 같습니다:\n\n![Weather Table](/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_6.png)\n\n## Google Cloud Platform 통합\n\n로컬에서 코드가 작동하는 것을 확인하면, 이제 클라우드에 올려보는 시간입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n구글 클라우드 플랫폼(GCP) 계정을 열고 클라우드 인스턴스를 설정해야 합니다. 여기서는 자세히 다루지는 않겠지만 MySQL을 사용한 좋은 단계별 설명을 찾을 수 있습니다: https://support.google.com/appsheet/answer/10107301?hl=en\n\n제게 가장 중요한 단계 중 하나는 파이썬 노트북에서 로컬 IP 호스트를 구글 IP 호스트로 변경하는 것이었습니다. 구체적으로, 데이터를 SQL로 전송하는 코드 블록에서 변경했습니다:\n\n```js\nschema = \"gans\"         # 데이터베이스 이름\nhost = \"XX.XXX.XX.XX\"   # 로컬 호스트:\"xxx.x.x.x\" (클라우드로 변경하기 전)\nuser = \"root\"           # 사용자 이름 (가이드 참조)\npassword = \"XXXX\"       # 비밀번호 직접 입력하거나 다른 노트북에서 가져옵니다 (\"from xxxfile import my_password\")\nport = 3306\n\nconnection_string = f'mysql+pymysql://{user}:{password}@{host}:{port}/{schema}'     # 이 부분이 파이썬 노트북을 SQL 워크벤치에 연결하는 역할을 합니다\n```\n\n이렇게 함으로써, 이전에 생성한 정적 테이블을 클라우드에 자동으로 업로드하고 파이썬에서 코드를 다시 실행하지 않고 이미 존재하는 SQL 테이블에 데이터를 채울 수 있었습니다. 아니면 적어도 파이썬에서 코드를 다시 실행할 필요가 없습니다. 혹은 새로운 비동적 테이블(도시 정보 및 도시 인구)을 업데이트하기로 결정할 때까지입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 프로젝트의 목적으로, Python에서 이 두 표를 GCP로 업로드하려면 호스트 IP를 변경하는 것으로 충분합니다. 또 다른 방법은 두 표를 만드는 코드를 클라우드에 업로드하는 것입니다. 이 경우, 우리는 클라우드에 동적 표 날씨를 만들고 채우는 코드만 올릴 것입니다.\n\nGCP의 \"Cloud Functions\" 필드에 함수를 만든 후 여러 번의 시행착오 끝에 코드가 마침내 작동했습니다:\n\n![cloud_function_image](/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_7.png)\n\n하지만 코드가 작동하기 전에 클라우드 인스턴스에 함수를 연결해야합니다. 아래 단계를 따라야합니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n<img src=\"/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_8.png\" />\n\n작업이 잘되었는지 어떻게 알 수 있을까요? 가장 좋은 소식은 다음과 같이 보입니다:\n\n<img src=\"/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_9.png\" />\n\n로컬에서 테스트한 코드와 비교해 상당한 수정이 필요했습니다. 최종 코드는 이렇게 보입니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```python\nimport functions_framework\nimport pandas as pd\nimport sqlalchemy\nimport requests\nfrom pytz import timezone\nfrom datetime import datetime\n\n@functions_framework.http\ndef insert(request):\n  connection_string = connection()\n  insert_into_weather(connection_string)\n  return 'Data successfully added'\n\ndef connection():\n  connection_name = \"flying-dove-416317:europe-west1:wbs-mysql-db\"    # this is not a real one\n  db_user = \"root\"\n  db_password = \"xxxx\"   # fill in with your SQL password\n  schema_name = \"gans\"\n\n  driver_name = 'mysql+pymysql'\n  query_string = {\"unix_socket\": f\"/cloudsql/{connection_name}\"}\n\n  db = sqlalchemy.create_engine(\n      sqlalchemy.engine.url.URL(\n          drivername = driver_name,\n          username = db_user,\n          password = db_password,\n          database = schema_name,\n          query = query_string,\n      )\n  )\n  return db\n\n\n# HERE STARTS THE WEATHER DATA RETRIEVAL FUNCTION:\n\ndef extract_city(connection_string):\n    return pd.read_sql(\"cities_info\", con=connection_string)\n\ndef get_weather_data(cities_df):\n  berlin_timezone = timezone(\"Europe/Berlin\")\n  API_key = \"7e5623c79f102b6c08b15c8hjib4cc9l\"    # this is not a real one\n  weather_items = []\n\n  for city in cities_df[\"city_name\"]:\n    url = (f\"http://api.openweathermap.org/data/2.5/forecast?q={city}&appid={API_key}&units=metric\")\n    response = requests.get(url)\n    json = response.json()\n\n    # Added the time retrieved so we know when the forecast was made\n    retrieval_time = datetime.now(berlin_timezone).strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # As we are now using the data from our relational database, the city should reflect the city_id and not the city name\n    city_id = cities_df.loc[cities_df[\"city_name\"] == city, \"city_id\"].values[0]  # here we need to retrieve the values, otherwise it shows us the series\n\n    for item in json[\"list\"]:\n        weather_item = {\n            # Added the city name, so the information is clear when looking at multiple cities\n            \"city_id\": city_id,\n            \"forecast_time\": item.get(\"dt_txt\", None),\n            \"temperature\": item[\"main\"].get(\"temp\", None),\n            \"feels_like\": item[\"main\"].get(\"feels_like\", None),\n            \"forecast\": item[\"weather\"][0].get(\"main\", None),\n            \"humidity\": item[\"main\"].get(\"humidity\", None),\n            \"rain_in_last_3h\": item.get(\"rain\", {}).get(\"3h\", 0),\n            \"risk_of_rain\": item[\"pop\"],\n            \"snow_in_last_3h\": item.get(\"snow\", {}).get(\"3h\", 0),\n            \"wind_speed\": item[\"wind\"].get(\"speed\", None),\n            \"data_retrieved_at\": retrieval_time\n        }\n\n        weather_items.append(weather_item)\n\n  weather_df = pd.DataFrame(weather_items)\n  weather_df[\"forecast_time\"] = pd.to_datetime(weather_df[\"forecast_time\"])\n  weather_df[\"data_retrieved_at\"] = pd.to_datetime(weather_df[\"data_retrieved_at\"])\n  weather_df[\"snow_in_last_3h\"] = pd.to_numeric(weather_df[\"snow_in_last_3h\"], downcast=\"float\")\n\n  return weather_df\n\ndef insert_into_weather(connection_string):\n  cities_df = extract_city(connection_string)\n  weather_df = get_weather_data(cities_df)    # we create the new dataframe using the function\n  weather_df.to_sql(\"weather\",\n            if_exists=\"append\",\n            con=connection_string,\n            index=False)\n```\n\n## Lessons learned from making our code cloud-worthy\n\n### 1. Dependencies:\n\nWe need to add the right dependencies to the `requirements.txt` file. This was one of the main initial reasons preventing our code from working properly. It is important to note that some libraries are already uploaded on GCP by default and should not be included in the `.txt` file, but still need to be added as a library in our source code, e.g.:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\nfrom pytz import timezone\nfrom datetime import datetime\n```\n\n만약 배포를 시도한 후에 빨간 배너 에러가 발생한다면, 대부분의 경우 requirements.txt 파일에 명시되어 있지 않은 라이브러리를 import하는 것이 원인일 수 있습니다:\n\n![image](/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_10.png)\n\nrequirements 섹션에서는 Python 모듈이 아닌 패키지만 추가해야 합니다. 미리 알려드리자면, 여기 Python 모듈들의 종합 목록이 있습니다: [Python 모듈 목록](https://docs.python.org/3/py-modindex.html)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n다른 유용한 팁은 코드에서 사용 중인 모든 외부 라이브러리를 출력하는 것입니다. 노트북에서 함수를 호출한 후에는 다음을 실행해야 합니다:\n\n```js\nprint('\\n'.join(f'{m.__name__}=={m.__version__}' for m in globals().values() if getattr(m, '__version__', None)))\n```\n\n그런 다음 적절한 종속성으로 requirements.txt에 직접 복사하여 붙여넣을 수 있습니다:\n\n![이미지](/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_11.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 프로젝트를 위해 필요한 의존성은 다음과 같습니다 .txt 파일:\n\n```js\nfunctions-framework==3.*\nSQLAlchemy==1.4.37\nPyMySQL==1.0.2\npandas==1.5.2\nrequests==2.31.0\n```\n\n## 2. 연결 코드 테스트\n\n데이터 검색 함수를 추가하기 전에 연결 코드가 작동하는지 먼저 테스트하는 것이 좋습니다. 이렇게 하면 문제가 연결 설정에 있는지 아닌지 확인할 수 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n로컬 스크립트를 GCP로 이동할 때 좋은 시작 방법은 \"더미\" 함수를 만들고 테스트하는 것입니다. 예를 들어:\n\n```js\nimport functions_framework\nimport pandas as pd\nimport sqlalchemy\n\n@functions_framework.http\ndef insert(request):\n  connection_string = connection()\n  insert_into_test_table(connection_string)\n  return 'Data successfully added'\n\ndef connection():\n  connection_name = \"YOUR_DB_CON_NAME\"  # 변경해주세요\n  db_user = \"root\"                      # 변경\n  db_password = \"YOUR_PASSWORD\"         # 변경\n  schema_name = \"test_schema\"           # 변경\n\n  driver_name = 'mysql+pymysql'\n  query_string = {\"unix_socket\": f\"/cloudsql/{connection_name}\"}\n\n  db = sqlalchemy.create_engine(\n      sqlalchemy.engine.url.URL(\n          drivername = driver_name,\n          username = db_user,\n          password = db_password,\n          database = schema_name,\n          query = query_string,\n      )\n  )\n  return db\n\ndef insert_into_test_table(con_str):\n  data = {'FirstName': ['Function', 'Test'],\n          'City': ['Cloud', 'Complete']}\n  df = pd.DataFrame(data)\n  df.to_sql(name=\"test_table\", con=con_str, if_exists='append', index=False)\n```\n\n이 간단한 함수가 작동하면 연결이 작동하는 것이고, 할 일은 실제 코드를 추가하고 통합하는 것뿐입니다.\n\n다음 오류가 발생하면 우리의 코드에 문제가 있음을 가정할 수 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 3. 우리 실제 코드의 문제점\n\n내 코드를 온라인에 올릴 때 실수한 주요한 부분은 \"더미\" 템플릿을 기반으로 코드를 조정하고 실제로 정의되지 않은 \"insert_into_weather\" 함수를 \"@functions_framework.http\" 아래에서 호출했다는 것이었습니다.\n\n이 함수를 추가한 후에도 코드가 작동하지 않았습니다. 이는 필요한 도시를 수동으로 명명했기 때문에 도시 정보 데이터프레임에서 이미 가져오는 대신에 도시 이름을 수동으로 지정해서 오는 점과 관련이 있었습니다. 그래서 나는 먼저 \"extract_city\"라는 또 다른 함수를 추가해야 했고, 이 함수가 로컬에서 작동하는 것을 확인 후에 코드를 온라인에 배포해야 했습니다.\n\n도시 이름을 얻기 위해 cities_info 테이블을 사용한 후에, 도시 이름을 추출하지 않은 전 반복문을 업데이트하지 않은 다른 실수를 했습니다. 이제 도시 이름을 이전에 목록에서 가져오지 않고 데이터프레임에서 가져와야 했고, 이전 인수로는 도시 이름을 찾지 못했습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 마지막 단계\n\n우리 프로젝트를 완전히 기능적이고 자동화하기 위해 주기적으로 실행할 함수를 예약해야 합니다. GCP의 \"Cloud Scheduler\" 메뉴를 사용하면 상당히 쉽습니다.\n\n이를 위해 \"작업 예약\"을 하고 몇 가지 매개변수를 제공하고 빈도를 설정해야 합니다(매주 한 번 또는 Cron 표현식을 사용하여 특정 시간에 특정 요일에 실행하도록 설정). 이렇게 하면 해당 시간에 함수가 실행되어 SQL 테이블에 필요한 데이터를 채웁니다. 예를 들어, 여기서는 매주 월요일 오후 3시에 실행되도록 설정했습니다:\n\n![이미지](/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_12.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nSQL에서 작동하는지 확인할 수 있어요:\n\n![image](/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_13.png)\n\n첫 번째 SQL-to-Python-to-GCP 프로젝트와 작별하기 전에, 무료 크레딧을 소비하지 않도록 GCP 계정에서 데이터를 삭제해야 해요. 이는 클라우드 인스턴스, 함수 및 예약된 작업을 포함해요.\n\n# 끝\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n이 글을 쓰면서 SQL, Python 및 클라우드 컴퓨팅을 결합한 매우 기본적인 데이터베이스를 구축하는 방법을 배웠어요.\n\n이 프로젝트를 시작할 때 구글 클라우드 플랫폼 또는 다른 클라우드 컴퓨팅 플랫폼에 대해 전혀 알지 몰랐어요. 서버, 호스트, 인스턴스 또는 소프트웨어 연결에 대해 아무것도 모르고 있었어요 (지금도요). SQL과 Python의 기본적인 지식만 있었어요.\n\n이렇게 초보자로 시작했을 때, 자동화된 데이터베이스를 생성하고 주기적으로 가치 있는 데이터로 채우는 일이 너무 어려울 것이라고 회의적이었어요. 이제 내가 할 수 있다는 것을 알게 되었어요!\n\n앞으로의 계획은 다른 API에서 데이터를 가져와 GCP 기능에 결합하여 더 완전하고 유용한 최종 제품을 만들고 싶어해요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n글을 쓰는 사람이라고 하더라도 데이터 엔지니어링을 소프트웨어 엔지니어만큼 잘 할 수는 없을 지도 모르겠어요. 하지만 우리는 기초를 배우고 거기서부터 성장할 수 있죠.\n\n# Stackademic 🎓\n\n끝까지 읽어주셔서 감사합니다. 떠나시기 전에:\n\n- 저자를 클랩하시고 팔로우해주시면 감사하겠습니다! 👏\n- 우리를 팔로우해주세요 X | LinkedIn | YouTube | Discord\n- 다른 플랫폼에서도 만나보세요: In Plain English | CoFeed | Venture | Cubed\n- 더 많은 콘텐츠는 Stackademic.com에서 확인하세요\n","ogImage":{"url":"/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_0.png"},"coverImage":"/assets/img/2024-05-18-DataEngineeringisforEngineersNOT_0.png","tag":["Tech"],"readingTime":30}],"page":"102","totalPageCount":120,"totalPageGroupCount":6,"lastPageGroup":20,"currentPageGroup":5},"__N_SSG":true}
{"pageProps":{"post":{"title":"CDS JAR vs Uber JAR 도커화 및 비교 20 빠른 시작 시간 달성하는 방법","description":"","date":"2024-06-23 22:45","slug":"2024-06-23-DockerizingandComparingCDSJARvsUberJARAchieving20FasterStartupTimes","content":"\n## JAVA | JVM | CDS | DOCKER\n\n![Dockerizing and Comparing CDS JAR vs Uber JAR Achieving 20% Faster Startup Times](/assets/img/2024-06-23-DockerizingandComparingCDSJARvsUberJARAchieving20FasterStartupTimes_0.png)\n\n이 기사에서는 Java Spring Boot 애플리케이션 greetings-app을 Uber JAR 및 CDS JAR을 사용하여 두 가지 방법으로 도커화할 것입니다. 나중에 이들의 시작 시간을 비교할 것입니다.\n\n아래 연결된 기사에서 greetings-app의 전체 코드 및 구현을 찾을 수 있습니다. 기사에서 설명된 단계를 따라 진행하고 시작하세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n그러면 시작해봅시다!\n\n## 준비물\n\n이 튜토리얼을 따라하려면 컴퓨터에 Java 17+와 Docker가 설치되어 있어야 합니다.\n\n## Docker 이미지 빌드하기\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## Uber JAR을 사용하여 도커 이미지 생성하기\n\n인사 앱 루트 폴더에서 Dockerfile-Uber-JAR라는 파일을 다음 내용으로 생성해 봅시다:\n\n```js\nFROM amazoncorretto:17.0.10\n\nCOPY target/greetings-app-0.0.1-SNAPSHOT.jar greetings-app.jar\n\nENTRYPOINT [\"java\", \"-jar\", \"greetings-app.jar\"]\n```\n\n다음으로, 터미널을 열고 인사 앱 루트 폴더 내에서 아래 명령어를 실행하여 greetings-app-uber-jar 도커 이미지를 생성해 봅시다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\n도커 이미지를 CDS JAR로 빌드하려면\n\ngreetings-app 루트 폴더에 Dockerfile-CDS-JAR이라는 파일을 다음 내용으로 생성해보세요:\n\nFROM amazoncorretto:17.0.10\n\nCOPY greetings-app-0.0.1-SNAPSHOT/greetings-app-0.0.1-SNAPSHOT.jar greetings-app.jar\nCOPY greetings-app-0.0.1-SNAPSHOT/lib/ lib/\n\nENTRYPOINT [\"java\", \"-jar\", \"greetings-app.jar\"]\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n다음으로, 터미널에서 greetings-app 루트 폴더 안으로 이동한 다음 아래 명령어를 실행하여 greetings-app-cds-jar 도커 이미지를 생성해 봅시다:\n\ndocker build -f Dockerfile-CDS-JAR -t greetings-app-cds-jar .\n\n## 도커 이미지 크기\n\n도커 이미지의 크기를 확인해 봅시다. 터미널에서 다음 명령어를 실행해 주세요:\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n도커 이미지 | grep greetings-app\n\n이렇게 나와야 해요:\n\ngreetings-app-cds-jar                                latest                   50613179d4fa   3 minutes ago   486MB\ngreetings-app-uber-jar                               latest                   67c71f76b553   3 minutes ago   486MB\n\n둘 다 크기가 486MB로 동일해요.\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 시작 및 중지 시간 5번\n\n## Uber JAR로 Docker 컨테이너 시작 및 중지\n\n터미널에서 다음 명령을 실행하여 애플리케이션의 Docker 컨테이너를 시작합니다. 중지하려면 Ctrl+C를 누르고, 이 프로세스를 다섯 번 반복하세요:\n\ndocker run --rm -m 1024M -p 8080:8080 --name greetings-app greetings-app-uber-jar\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아래는 우리가 진행한 5회 실행의 결과입니다 (일부 로그 라인은 간략하게 생략되었습니다):\n\n➜  greetings-app docker run --rm -m 1024M -p 8080:8080 --name greetings-app greetings-app-uber-jar\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n\n :: Spring Boot ::                (v3.3.1)\n\n...\n2024-06-28 오후 06:52:23.982Z  INFO 1 --- [greetings-app] [           main] c.e.g.GreetingsAppApplication            : GreetingsAppApplication이 2.767초 안에 시작되었습니다 (프로세스 실행 시간 3.48초).\n2024-06-28 오후 06:52:23.988Z  INFO 1 --- [greetings-app] [           main] c.e.greetingsapp.MemoryUsageLogger       : 시작 시 메모리 풋프린트: 14MB\n^C%\n➜  greetings-app docker run --rm -m 1024M -p 8080:8080 --name greetings-app greetings-app-uber-jar\n\n...\n\n이를 반복하여 총 다섯 번 실행하시면 됩니다.\n\n## CDS JAR로 Docker 컨테이너 시작 및 정지\n\n터미널에서 다음 명령을 실행하여 애플리케이션의 Docker 컨테이너를 시작하세요. 중지하려면 Ctrl+C를 누르고, 이 작업을 총 다섯 번 반복하세요.\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아래는 우리가 실시한 5회 실행 결과입니다 (간결함을 위해 일부 로그 라인이 생략되었습니다):\n\n➜  greetings-app docker run --rm -m 1024M -p 8080:8080 --name greetings-app greetings-app-cds-jar\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n\n :: Spring Boot ::                (v3.3.1)\n\n...\n2024-06-23T06:52:53.646Z  INFO 1 --- [greetings-app] [           main] c.e.g.GreetingsAppApplication            : Started GreetingsAppApplication in 2.285 seconds (process running for 2.673)\n2024-06-23T06:52:53.651Z  INFO 1 --- [greetings-app] [           main] c.e.greetingsapp.MemoryUsageLogger       : Memory footprint at startup: 15 MB\n^C%\n➜  greetings-app docker run --rm -m 1024M -p 8080:8080 --name greetings-app greetings-app-cds-jar\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n\n :: Spring Boot ::                (v3.3.1)\n\n...\n2024-06-23T06:52:58.858Z  INFO 1 --- [greetings-app] [           main] c.e.g.GreetingsAppApplication            : Started GreetingsAppApplication in 2.422 seconds (process running for 2.814)\n2024-06-23T06:52:58.864Z  INFO 1 --- [greetings-app] [           main] c.e.greetingsapp.MemoryUsageLogger       : Memory footprint at startup: 16 MB\n^C%\n➜  greetings-app docker run --rm -m 1024M -p 8080:8080 --name greetings-app greetings-app-cds-jar\n\n...\n\n# 비교결과\n\n<!-- ui-station 사각형 -->\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 스타트업 시간\n\n아래 표는 위 실행에서 얻은 스타트업 시간과 평균을 보여줍니다:\n\n```\n\n| Docker Image | 스타트업 시간(초) | 평균 스타트업 시간(초) |\n| ------------ | ----------------- | ---------------------- |\n| uber-jar     | 2.767             |                        |\n| uber-jar     | 2.841             |                        |\n| uber-jar     | 2.864             |                        |\n| uber-jar     | 2.916             |                        |\n| uber-jar     | 2.860             | 2.849                  |\n| cds-jar      | 2.285             |                        |\n| cds-jar      | 2.422             |                        |\n| cds-jar      | 2.318             |                        |\n| cds-jar      | 2.335             |                        |\n| cds-jar      | 2.319             | 2.335                  |\n\n평균 표를 통해 CDS JAR가 있는 Docker 컨테이너의 스타트업 시간이 Uber JAR가 있는 것보다 약 18.03% 빠르다는 것을 알 수 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## 성능\n\n성능을 분석하기 위해 API에 대한 부하 테스트를 실행하는 oha 도구를 사용할 것입니다. 도커 컨테이너를 시작하고 동시성이 2인 상태에서 10,000개의 요청을 제출할 것입니다.\n\n다음은 oha 명령어입니다:\n\n```js\noha -n 10000 -c 2 --latency-correction --disable-keepalive http://localhost:8080/greetings\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n여기 결과가 있어요:\n\n```js\nDocker Container with Uber JAR | Docker Container with CDS JAR\n------------------------------ | -----------------------------\nSummary:                       | Summary:\n  Success rate: 100.00%        |   Success rate: 100.00%\n  Total: 13.2974 secs          |   Total: 13.3007 secs\n  Slowest: 0.2332 secs         |   Slowest: 0.2062 secs\n  Fastest: 0.0012 secs         |   Fastest: 0.0012 secs\n  Average: 0.0027 secs         |   Average: 0.0027 secs\n  Requests/sec: 752.0248       |   Requests/sec: 751.8427\n  Total data: 117.19 KiB       |   Total data: 117.19 KiB\n  Size/request: 12 B           |   Size/request: 12 B\n  Size/sec: 8.81 KiB           |   Size/sec: 8.81 KiB\n```\n\nUber JAR를 사용한 Docker 컨테이너가 CDS JAR를 사용한 것보다 약간 더 나은 성능을 보였어요. Uber JAR를 이용한 컨테이너는 초당 752.02개의 요청을 처리하는 반면, CDS JAR를 이용한 컨테이너는 초당 751.84개의 요청을 처리했어요.\n\n## 메모리 사용량\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n메모리 사용량을 비교하기 위해 Google의 cAdvisor 도구를 사용했어요.\n\n다음은 결과입니다:\n\nUber JAR를 사용한 Docker 컨테이너\n\n![이미지](/assets/img/2024-06-23-DockerizingandComparingCDSJARvsUberJARAchieving20FasterStartupTimes_1.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n위와 같이 볼 때, Uber JAR를 사용한 Docker 컨테이너는 시작할 때 140MB에 이르렀고 부하 테스트 중에 최대 182MB까지 증가했습니다.\n\nCDS JAR를 사용한 Docker 컨테이너\n\n![이미지](/assets/img/2024-06-23-DockerizingandComparingCDSJARvsUberJARAchieving20FasterStartupTimes_2.png)\n\nCDS JAR를 사용한 Docker 컨테이너는 시작할 때 127MB에 이르렀고 부하 테스트 중에 최대 174MB까지 증가했습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n사, 시작 시 메모리 사용량을 9.3% 절약했고 로드 테스트 중에는 4.4%를 절약했다고 결론지을 수 있습니다.\n\n# 정리\n\n이 기사에서 생성된 도커 이미지를 삭제하려면 다음 명령을 실행하세요:\n\n```js\ndocker rmi greetings-app-cds-jar:latest greetings-app-uber-jar:latest\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n# 결론\n\n이 글에서는 Java Spring Boot 애플리케이션 greetings-app을 Uber JAR 및 CDS JAR을 사용하여 두 가지 방법으로 Docker화했습니다. 그리고 이들 Docker 컨테이너를 다섯 번 실행 및 중지시키고 시작 시간을 기록했습니다. 결과는 CDS JAR이 적용된 Docker 컨테이너가 시작 시간을 약 20% 개선시켰다는 것을 보여주었습니다. 또한 성능을 확인했을 때, Uber JAR이 적용된 Docker 컨테이너가 CDS JAR 적용된 것보다 약간 더 우수했습니다. 마지막으로 메모리 사용량을 살펴보면, 시작 시에 CDS JAR이 적용된 Docker 컨테이너가 메모리 사용량을 9.3% 줄이고 부하 테스트 중에는 4.4% 줄였음을 확인할 수 있었습니다.\n\n# 지원과 참여\n\n만약 이 글을 즐겁게 읽으셨고 지원을 보여주고 싶다면, 아래의 조치를 고려해 주시기 바랍니다:\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n- 👏 제 이야기에 박수를 치거나 강조하고 답글을 남겨주셔요. 궁금한 점이 있다면 언제든지 물어봐주세요.\n- 🌐 제 이야기를 소셜 미디어에 공유해주세요.\n- 🔔 Medium | LinkedIn | Twitter | GitHub에서 저를 팔로우해주세요.\n- ✉️ 제 뉴스레터를 구독하여 최신 포스트를 놓치지 마세요.\n","ogImage":{"url":"/assets/img/2024-06-23-DockerizingandComparingCDSJARvsUberJARAchieving20FasterStartupTimes_0.png"},"coverImage":"/assets/img/2024-06-23-DockerizingandComparingCDSJARvsUberJARAchieving20FasterStartupTimes_0.png","tag":["Tech"],"readingTime":13},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h2>JAVA | JVM | CDS | DOCKER</h2>\n<p><img src=\"/assets/img/2024-06-23-DockerizingandComparingCDSJARvsUberJARAchieving20FasterStartupTimes_0.png\" alt=\"Dockerizing and Comparing CDS JAR vs Uber JAR Achieving 20% Faster Startup Times\"></p>\n<p>이 기사에서는 Java Spring Boot 애플리케이션 greetings-app을 Uber JAR 및 CDS JAR을 사용하여 두 가지 방법으로 도커화할 것입니다. 나중에 이들의 시작 시간을 비교할 것입니다.</p>\n<p>아래 연결된 기사에서 greetings-app의 전체 코드 및 구현을 찾을 수 있습니다. 기사에서 설명된 단계를 따라 진행하고 시작하세요.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>그러면 시작해봅시다!</p>\n<h2>준비물</h2>\n<p>이 튜토리얼을 따라하려면 컴퓨터에 Java 17+와 Docker가 설치되어 있어야 합니다.</p>\n<h2>Docker 이미지 빌드하기</h2>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h2>Uber JAR을 사용하여 도커 이미지 생성하기</h2>\n<p>인사 앱 루트 폴더에서 Dockerfile-Uber-JAR라는 파일을 다음 내용으로 생성해 봅시다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-variable constant_\">FROM</span> <span class=\"hljs-attr\">amazoncorretto</span>:<span class=\"hljs-number\">17.0</span><span class=\"hljs-number\">.10</span>\n\n<span class=\"hljs-variable constant_\">COPY</span> target/greetings-app-<span class=\"hljs-number\">0.0</span><span class=\"hljs-number\">.1</span>-<span class=\"hljs-variable constant_\">SNAPSHOT</span>.<span class=\"hljs-property\">jar</span> greetings-app.<span class=\"hljs-property\">jar</span>\n\n<span class=\"hljs-variable constant_\">ENTRYPOINT</span> [<span class=\"hljs-string\">\"java\"</span>, <span class=\"hljs-string\">\"-jar\"</span>, <span class=\"hljs-string\">\"greetings-app.jar\"</span>]\n</code></pre>\n<p>다음으로, 터미널을 열고 인사 앱 루트 폴더 내에서 아래 명령어를 실행하여 greetings-app-uber-jar 도커 이미지를 생성해 봅시다:</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\">도커 이미지를 <span class=\"hljs-variable constant_\">CDS</span> <span class=\"hljs-variable constant_\">JAR</span>로 빌드하려면\n\ngreetings-app 루트 폴더에 <span class=\"hljs-title class_\">Dockerfile</span>-<span class=\"hljs-variable constant_\">CDS</span>-<span class=\"hljs-variable constant_\">JAR</span>이라는 파일을 다음 내용으로 생성해보세요:\n\n<span class=\"hljs-variable constant_\">FROM</span> <span class=\"hljs-attr\">amazoncorretto</span>:<span class=\"hljs-number\">17.0</span><span class=\"hljs-number\">.10</span>\n\n<span class=\"hljs-variable constant_\">COPY</span> greetings-app-<span class=\"hljs-number\">0.0</span><span class=\"hljs-number\">.1</span>-<span class=\"hljs-variable constant_\">SNAPSHOT</span>/greetings-app-<span class=\"hljs-number\">0.0</span><span class=\"hljs-number\">.1</span>-<span class=\"hljs-variable constant_\">SNAPSHOT</span>.<span class=\"hljs-property\">jar</span> greetings-app.<span class=\"hljs-property\">jar</span>\n<span class=\"hljs-variable constant_\">COPY</span> greetings-app-<span class=\"hljs-number\">0.0</span><span class=\"hljs-number\">.1</span>-<span class=\"hljs-variable constant_\">SNAPSHOT</span>/lib/ lib/\n\n<span class=\"hljs-variable constant_\">ENTRYPOINT</span> [<span class=\"hljs-string\">\"java\"</span>, <span class=\"hljs-string\">\"-jar\"</span>, <span class=\"hljs-string\">\"greetings-app.jar\"</span>]\n\n&#x3C;!-- ui-station 사각형 -->\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"adsbygoogle\"</span>\n<span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display:block\"</span>\n<span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">\"ca-pub-4877378276818686\"</span>\n<span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">\"7249294152\"</span>\n<span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">\"auto\"</span>\n<span class=\"hljs-attr\">data-full-width-responsive</span>=<span class=\"hljs-string\">\"true\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ins</span>></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n(adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>({});\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n다음으로, 터미널에서 greetings-app 루트 폴더 안으로 이동한 다음 아래 명령어를 실행하여 greetings-app-cds-jar 도커 이미지를 생성해 봅시다:\n\ndocker build -f <span class=\"hljs-title class_\">Dockerfile</span>-<span class=\"hljs-variable constant_\">CDS</span>-<span class=\"hljs-variable constant_\">JAR</span> -t greetings-app-cds-jar .\n\n## 도커 이미지 크기\n\n도커 이미지의 크기를 확인해 봅시다. 터미널에서 다음 명령어를 실행해 주세요:\n\n&#x3C;!-- ui-station 사각형 -->\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"adsbygoogle\"</span>\n<span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display:block\"</span>\n<span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">\"ca-pub-4877378276818686\"</span>\n<span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">\"7249294152\"</span>\n<span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">\"auto\"</span>\n<span class=\"hljs-attr\">data-full-width-responsive</span>=<span class=\"hljs-string\">\"true\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ins</span>></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n(adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>({});\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n도커 이미지 | grep greetings-app\n\n이렇게 나와야 해요:\n\ngreetings-app-cds-jar                                latest                   50613179d4fa   <span class=\"hljs-number\">3</span> minutes ago   486MB\ngreetings-app-uber-jar                               latest                   67c71f76b553   <span class=\"hljs-number\">3</span> minutes ago   486MB\n\n둘 다 크기가 486MB로 동일해요.\n\n&#x3C;!-- ui-station 사각형 -->\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"adsbygoogle\"</span>\n<span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display:block\"</span>\n<span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">\"ca-pub-4877378276818686\"</span>\n<span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">\"7249294152\"</span>\n<span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">\"auto\"</span>\n<span class=\"hljs-attr\">data-full-width-responsive</span>=<span class=\"hljs-string\">\"true\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ins</span>></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n(adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>({});\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n# 시작 및 중지 시간 <span class=\"hljs-number\">5</span>번\n\n## <span class=\"hljs-title class_\">Uber</span> <span class=\"hljs-variable constant_\">JAR</span>로 <span class=\"hljs-title class_\">Docker</span> 컨테이너 시작 및 중지\n\n터미널에서 다음 명령을 실행하여 애플리케이션의 <span class=\"hljs-title class_\">Docker</span> 컨테이너를 시작합니다. 중지하려면 <span class=\"hljs-title class_\">Ctrl</span>+C를 누르고, 이 프로세스를 다섯 번 반복하세요:\n\ndocker run --rm -m 1024M -p <span class=\"hljs-number\">8080</span>:<span class=\"hljs-number\">8080</span> --name greetings-app greetings-app-uber-jar\n\n&#x3C;!-- ui-station 사각형 -->\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"adsbygoogle\"</span>\n<span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display:block\"</span>\n<span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">\"ca-pub-4877378276818686\"</span>\n<span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">\"7249294152\"</span>\n<span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">\"auto\"</span>\n<span class=\"hljs-attr\">data-full-width-responsive</span>=<span class=\"hljs-string\">\"true\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ins</span>></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n(adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>({});\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n아래는 우리가 진행한 <span class=\"hljs-number\">5</span>회 실행의 결과입니다 (일부 로그 라인은 간략하게 생략되었습니다):\n\n➜  greetings-app docker run --rm -m 1024M -p <span class=\"hljs-number\">8080</span>:<span class=\"hljs-number\">8080</span> --name greetings-app greetings-app-uber-jar\n\n  .   ____          _            __ _ _\n /\\\\ / ___<span class=\"hljs-string\">'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '</span>_ | <span class=\"hljs-string\">'_| | '</span>_ \\/ _<span class=\"hljs-string\">` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n\n :: Spring Boot ::                (v3.3.1)\n\n...\n2024-06-28 오후 06:52:23.982Z  INFO 1 --- [greetings-app] [           main] c.e.g.GreetingsAppApplication            : GreetingsAppApplication이 2.767초 안에 시작되었습니다 (프로세스 실행 시간 3.48초).\n2024-06-28 오후 06:52:23.988Z  INFO 1 --- [greetings-app] [           main] c.e.greetingsapp.MemoryUsageLogger       : 시작 시 메모리 풋프린트: 14MB\n^C%\n➜  greetings-app docker run --rm -m 1024M -p 8080:8080 --name greetings-app greetings-app-uber-jar\n\n...\n\n이를 반복하여 총 다섯 번 실행하시면 됩니다.\n\n## CDS JAR로 Docker 컨테이너 시작 및 정지\n\n터미널에서 다음 명령을 실행하여 애플리케이션의 Docker 컨테이너를 시작하세요. 중지하려면 Ctrl+C를 누르고, 이 작업을 총 다섯 번 반복하세요.\n\n&#x3C;!-- ui-station 사각형 -->\n&#x3C;ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\">&#x3C;/ins>\n&#x3C;script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n&#x3C;/script>\n\n아래는 우리가 실시한 5회 실행 결과입니다 (간결함을 위해 일부 로그 라인이 생략되었습니다):\n\n➜  greetings-app docker run --rm -m 1024M -p 8080:8080 --name greetings-app greetings-app-cds-jar\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _`</span> | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  <span class=\"hljs-string\">'  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n\n :: Spring Boot ::                (v3.3.1)\n\n...\n2024-06-23T06:52:53.646Z  INFO 1 --- [greetings-app] [           main] c.e.g.GreetingsAppApplication            : Started GreetingsAppApplication in 2.285 seconds (process running for 2.673)\n2024-06-23T06:52:53.651Z  INFO 1 --- [greetings-app] [           main] c.e.greetingsapp.MemoryUsageLogger       : Memory footprint at startup: 15 MB\n^C%\n➜  greetings-app docker run --rm -m 1024M -p 8080:8080 --name greetings-app greetings-app-cds-jar\n\n  .   ____          _            __ _ _\n /\\\\ / ___'</span>_ __ _ <span class=\"hljs-title function_\">_</span>(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | <span class=\"hljs-string\">'_ | '</span>_| | <span class=\"hljs-string\">'_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '</span>  |____| .<span class=\"hljs-property\">__</span>|_| |_|_| |_\\__, | <span class=\"hljs-regexp\">/ /</span> <span class=\"hljs-regexp\">/ /</span>\n =========|_|==============|___/=<span class=\"hljs-regexp\">/_/</span>_/_/\n\n :: <span class=\"hljs-title class_\">Spring</span> <span class=\"hljs-title class_\">Boot</span> ::                (v3<span class=\"hljs-number\">.3</span><span class=\"hljs-number\">.1</span>)\n\n...\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">06</span>-23<span class=\"hljs-attr\">T06</span>:<span class=\"hljs-number\">52</span>:<span class=\"hljs-number\">58.</span>858Z  <span class=\"hljs-variable constant_\">INFO</span> <span class=\"hljs-number\">1</span> --- [greetings-app] [           main] c.<span class=\"hljs-property\">e</span>.<span class=\"hljs-property\">g</span>.<span class=\"hljs-property\">GreetingsAppApplication</span>            : <span class=\"hljs-title class_\">Started</span> <span class=\"hljs-title class_\">GreetingsAppApplication</span> <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">2.422</span> seconds (process running <span class=\"hljs-keyword\">for</span> <span class=\"hljs-number\">2.814</span>)\n<span class=\"hljs-number\">2024</span>-<span class=\"hljs-number\">06</span>-23<span class=\"hljs-attr\">T06</span>:<span class=\"hljs-number\">52</span>:<span class=\"hljs-number\">58.</span>864Z  <span class=\"hljs-variable constant_\">INFO</span> <span class=\"hljs-number\">1</span> --- [greetings-app] [           main] c.<span class=\"hljs-property\">e</span>.<span class=\"hljs-property\">greetingsapp</span>.<span class=\"hljs-property\">MemoryUsageLogger</span>       : <span class=\"hljs-title class_\">Memory</span> footprint at <span class=\"hljs-attr\">startup</span>: <span class=\"hljs-number\">16</span> <span class=\"hljs-variable constant_\">MB</span>\n^C%\n➜  greetings-app docker run --rm -m 1024M -p <span class=\"hljs-number\">8080</span>:<span class=\"hljs-number\">8080</span> --name greetings-app greetings-app-cds-jar\n\n...\n\n# 비교결과\n\n&#x3C;!-- ui-station 사각형 -->\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">ins</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"adsbygoogle\"</span>\n<span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"display:block\"</span>\n<span class=\"hljs-attr\">data-ad-client</span>=<span class=\"hljs-string\">\"ca-pub-4877378276818686\"</span>\n<span class=\"hljs-attr\">data-ad-slot</span>=<span class=\"hljs-string\">\"7249294152\"</span>\n<span class=\"hljs-attr\">data-ad-format</span>=<span class=\"hljs-string\">\"auto\"</span>\n<span class=\"hljs-attr\">data-full-width-responsive</span>=<span class=\"hljs-string\">\"true\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">ins</span>></span></span>\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span>></span><span class=\"javascript\">\n(adsbygoogle = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">adsbygoogle</span> || []).<span class=\"hljs-title function_\">push</span>({});\n</span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span></span>\n\n## 스타트업 시간\n\n아래 표는 위 실행에서 얻은 스타트업 시간과 평균을 보여줍니다:\n\n</code></pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Docker Image</th><th>스타트업 시간(초)</th><th>평균 스타트업 시간(초)</th></tr></thead><tbody><tr><td>uber-jar</td><td>2.767</td><td></td></tr><tr><td>uber-jar</td><td>2.841</td><td></td></tr><tr><td>uber-jar</td><td>2.864</td><td></td></tr><tr><td>uber-jar</td><td>2.916</td><td></td></tr><tr><td>uber-jar</td><td>2.860</td><td>2.849</td></tr><tr><td>cds-jar</td><td>2.285</td><td></td></tr><tr><td>cds-jar</td><td>2.422</td><td></td></tr><tr><td>cds-jar</td><td>2.318</td><td></td></tr><tr><td>cds-jar</td><td>2.335</td><td></td></tr><tr><td>cds-jar</td><td>2.319</td><td>2.335</td></tr></tbody></table>\n<p>평균 표를 통해 CDS JAR가 있는 Docker 컨테이너의 스타트업 시간이 Uber JAR가 있는 것보다 약 18.03% 빠르다는 것을 알 수 있습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h2>성능</h2>\n<p>성능을 분석하기 위해 API에 대한 부하 테스트를 실행하는 oha 도구를 사용할 것입니다. 도커 컨테이너를 시작하고 동시성이 2인 상태에서 10,000개의 요청을 제출할 것입니다.</p>\n<p>다음은 oha 명령어입니다:</p>\n<pre><code class=\"hljs language-js\">oha -n <span class=\"hljs-number\">10000</span> -c <span class=\"hljs-number\">2</span> --latency-correction --disable-keepalive <span class=\"hljs-attr\">http</span>:<span class=\"hljs-comment\">//localhost:8080/greetings</span>\n</code></pre>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>여기 결과가 있어요:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">Docker</span> <span class=\"hljs-title class_\">Container</span> <span class=\"hljs-keyword\">with</span> <span class=\"hljs-title class_\">Uber</span> <span class=\"hljs-variable constant_\">JAR</span> | <span class=\"hljs-title class_\">Docker</span> <span class=\"hljs-title class_\">Container</span> <span class=\"hljs-keyword\">with</span> <span class=\"hljs-variable constant_\">CDS</span> <span class=\"hljs-variable constant_\">JAR</span>\n------------------------------ | -----------------------------\n<span class=\"hljs-title class_\">Summary</span>:                       | <span class=\"hljs-title class_\">Summary</span>:\n  <span class=\"hljs-title class_\">Success</span> <span class=\"hljs-attr\">rate</span>: <span class=\"hljs-number\">100.00</span>%        |   <span class=\"hljs-title class_\">Success</span> <span class=\"hljs-attr\">rate</span>: <span class=\"hljs-number\">100.00</span>%\n  <span class=\"hljs-title class_\">Total</span>: <span class=\"hljs-number\">13.2974</span> secs          |   <span class=\"hljs-title class_\">Total</span>: <span class=\"hljs-number\">13.3007</span> secs\n  <span class=\"hljs-title class_\">Slowest</span>: <span class=\"hljs-number\">0.2332</span> secs         |   <span class=\"hljs-title class_\">Slowest</span>: <span class=\"hljs-number\">0.2062</span> secs\n  <span class=\"hljs-title class_\">Fastest</span>: <span class=\"hljs-number\">0.0012</span> secs         |   <span class=\"hljs-title class_\">Fastest</span>: <span class=\"hljs-number\">0.0012</span> secs\n  <span class=\"hljs-title class_\">Average</span>: <span class=\"hljs-number\">0.0027</span> secs         |   <span class=\"hljs-title class_\">Average</span>: <span class=\"hljs-number\">0.0027</span> secs\n  <span class=\"hljs-title class_\">Requests</span>/<span class=\"hljs-attr\">sec</span>: <span class=\"hljs-number\">752.0248</span>       |   <span class=\"hljs-title class_\">Requests</span>/<span class=\"hljs-attr\">sec</span>: <span class=\"hljs-number\">751.8427</span>\n  <span class=\"hljs-title class_\">Total</span> <span class=\"hljs-attr\">data</span>: <span class=\"hljs-number\">117.19</span> <span class=\"hljs-title class_\">KiB</span>       |   <span class=\"hljs-title class_\">Total</span> <span class=\"hljs-attr\">data</span>: <span class=\"hljs-number\">117.19</span> <span class=\"hljs-title class_\">KiB</span>\n  <span class=\"hljs-title class_\">Size</span>/<span class=\"hljs-attr\">request</span>: <span class=\"hljs-number\">12</span> B           |   <span class=\"hljs-title class_\">Size</span>/<span class=\"hljs-attr\">request</span>: <span class=\"hljs-number\">12</span> B\n  <span class=\"hljs-title class_\">Size</span>/<span class=\"hljs-attr\">sec</span>: <span class=\"hljs-number\">8.81</span> <span class=\"hljs-title class_\">KiB</span>           |   <span class=\"hljs-title class_\">Size</span>/<span class=\"hljs-attr\">sec</span>: <span class=\"hljs-number\">8.81</span> <span class=\"hljs-title class_\">KiB</span>\n</code></pre>\n<p>Uber JAR를 사용한 Docker 컨테이너가 CDS JAR를 사용한 것보다 약간 더 나은 성능을 보였어요. Uber JAR를 이용한 컨테이너는 초당 752.02개의 요청을 처리하는 반면, CDS JAR를 이용한 컨테이너는 초당 751.84개의 요청을 처리했어요.</p>\n<h2>메모리 사용량</h2>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>메모리 사용량을 비교하기 위해 Google의 cAdvisor 도구를 사용했어요.</p>\n<p>다음은 결과입니다:</p>\n<p>Uber JAR를 사용한 Docker 컨테이너</p>\n<p><img src=\"/assets/img/2024-06-23-DockerizingandComparingCDSJARvsUberJARAchieving20FasterStartupTimes_1.png\" alt=\"이미지\"></p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>위와 같이 볼 때, Uber JAR를 사용한 Docker 컨테이너는 시작할 때 140MB에 이르렀고 부하 테스트 중에 최대 182MB까지 증가했습니다.</p>\n<p>CDS JAR를 사용한 Docker 컨테이너</p>\n<p><img src=\"/assets/img/2024-06-23-DockerizingandComparingCDSJARvsUberJARAchieving20FasterStartupTimes_2.png\" alt=\"이미지\"></p>\n<p>CDS JAR를 사용한 Docker 컨테이너는 시작할 때 127MB에 이르렀고 부하 테스트 중에 최대 174MB까지 증가했습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>사, 시작 시 메모리 사용량을 9.3% 절약했고 로드 테스트 중에는 4.4%를 절약했다고 결론지을 수 있습니다.</p>\n<h1>정리</h1>\n<p>이 기사에서 생성된 도커 이미지를 삭제하려면 다음 명령을 실행하세요:</p>\n<pre><code class=\"hljs language-js\">docker rmi greetings-app-cds-<span class=\"hljs-attr\">jar</span>:latest greetings-app-uber-<span class=\"hljs-attr\">jar</span>:latest\n</code></pre>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h1>결론</h1>\n<p>이 글에서는 Java Spring Boot 애플리케이션 greetings-app을 Uber JAR 및 CDS JAR을 사용하여 두 가지 방법으로 Docker화했습니다. 그리고 이들 Docker 컨테이너를 다섯 번 실행 및 중지시키고 시작 시간을 기록했습니다. 결과는 CDS JAR이 적용된 Docker 컨테이너가 시작 시간을 약 20% 개선시켰다는 것을 보여주었습니다. 또한 성능을 확인했을 때, Uber JAR이 적용된 Docker 컨테이너가 CDS JAR 적용된 것보다 약간 더 우수했습니다. 마지막으로 메모리 사용량을 살펴보면, 시작 시에 CDS JAR이 적용된 Docker 컨테이너가 메모리 사용량을 9.3% 줄이고 부하 테스트 중에는 4.4% 줄였음을 확인할 수 있었습니다.</p>\n<h1>지원과 참여</h1>\n<p>만약 이 글을 즐겁게 읽으셨고 지원을 보여주고 싶다면, 아래의 조치를 고려해 주시기 바랍니다:</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<ul>\n<li>👏 제 이야기에 박수를 치거나 강조하고 답글을 남겨주셔요. 궁금한 점이 있다면 언제든지 물어봐주세요.</li>\n<li>🌐 제 이야기를 소셜 미디어에 공유해주세요.</li>\n<li>🔔 Medium | LinkedIn | Twitter | GitHub에서 저를 팔로우해주세요.</li>\n<li>✉️ 제 뉴스레터를 구독하여 최신 포스트를 놓치지 마세요.</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}
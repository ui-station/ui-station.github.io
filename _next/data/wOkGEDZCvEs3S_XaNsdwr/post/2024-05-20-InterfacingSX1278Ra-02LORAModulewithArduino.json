{"pageProps":{"post":{"title":"아두이노와 SX1278 Ra-02 LORA 모듈 연결하기","description":"","date":"2024-05-20 19:36","slug":"2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino","content":"\n# LoRa란 무엇인가요?\n\nLoRa는 채프 확산 스펙트럼(CSS) 기술을 기반으로 한 무선 변조 방법입니다. 이 기술은 라디오 파동에 데이터를 인코딩하여 전파펄스를 통해 전송하며, 돌고래와 박쥐가 의사 소통하는 방식과 유사합니다. LoRa 기술은 소량의 전력을 소비하면서 장거리로 양방향 정보를 전송하는 데 사용할 수 있습니다.\n\n## LoRaWAN\n\nLoRaWAN은 Semtech의 LoRa 변조 체계를 사용하는 포인트 투 멀티포인트 네트워킹 프로토콜입니다. 이는 LoRa 변조를 기반으로 구축된 미디어 액세스 제어(MAC) 레이어 프로토콜입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n로라 프로토콜은 기본적으로 두 개의 LoRa 모듈 간 통신을 지원하지는 않지만, \"라디오헤드 패킷 메소드\" 기술을 통해 LoRa 프로토콜을 준수하면서 두 개의 LoRa 모듈 간 통신이 가능합니다.\n\n\"라디오헤드\"는 패킷 라디오 라이브러리로서 미세한 마이크로프로세서들을 위한 완전한 객체 지향 라이브러리로서 패킷화된 메시지를 송수신하기 위한 기능을 제공합니다.\n\n# 아두이노와 LoRa SX1278\n\n![LoRa SX1278 with Arduino](/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_0.png)\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n## LoRa SX1278 모듈\n\n여기서 사용 중인 LoRa 모듈은 433MHz에서 작동하는 SX1278 Ra-02입니다.\n\n![이미지](/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_1.png)\n\n## Arduino LoRa SX1278 송신기\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아두이노 LoRa SX1278 송신기의 회로도가 아래에 제시되어 있습니다. LoRa SX1278은 5V와 호환되지 않으므로 5V를 공급하지 마세요. 그렇게 하면 보드가 손상될 수 있습니다. VCC 핀에 연결하려면 아두이노의 3.3V를 사용하세요.\n\n![아두이노 LoRa SX1278 송신기 회로도](/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_2.png)\n\n![아두이노 LoRa SX1278 송신기 회로도](/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_3.png)\n\n## 아두이노 LoRa SX1278 수신기\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n아두이노 LoRa SX1278 수신기의 회로도가 아래에 제공되었습니다. OLED 디스플레이가 추가로 연결되어 수신된 값을 확인할 수 있습니다.\n\n![회로도](/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_4.png)\n\n![회로도](/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_5.png)\n\n## 아두이노 IDE 준비\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n하드웨어 설정을 완료한 후 다음 단계는 아두이노 IDE를 활용하는 것입니다. LoRa 모듈과 상호 작용할 때 Sandeep Mistry에 의해 개발된 포괄적인 LoRa 라이브러리를 사용할 수 있습니다.\n\n라이브러리를 추가하려면 아두이노 IDE를 열고 스케치 - 라이브러리 포함 - 라이브러리 관리를 따르세요.\n\n<img src=\"/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_6.png\" />\n\n## 송신기 코드\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```c\n#include <SPI.h>\n#include <LoRa.h>\n\nint counter = 0;\n\nvoid setup() {\n  Serial.begin(9600);\n  while (!Serial);\n\n  Serial.println(\"LoRa Sender\");\n\n  if (!LoRa.begin(433E6)) {\n    Serial.println(\"Starting LoRa failed!\");\n    while (1);\n  }\n  LoRa.setTxPower(20);\n}\n\n\nvoid loop() {\n\n  Serial.print(\"Sending packet: \");\n  Serial.println(counter);\n  // send packet\n  LoRa.beginPacket();\n  LoRa.print(\"hello \");\n  LoRa.print(counter);\n  LoRa.endPacket();\n  counter++;\n  delay(5000);\n\n}\n```\n\n## Receiver Code\n\n```c\n#include <Wire.h>\n#include <Adafruit_GFX.h>\n#include <Adafruit_SSD1306.h>\n#include <SPI.h>\n#include <LoRa.h>\n\n#define SCREEN_WIDTH 128 // OLED display width, in pixels\n#define SCREEN_HEIGHT 64 // OLED display height, in pixels\n\n// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)\n#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)\nAdafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);\n\nString inString = \"\"; //hold incoming characters\nString myMessage = \"\"; // hold compleye message\nint led = 3;\n\nvoid setup() {\n  Serial.begin(9600);\n\n  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3D for 128x64\n    Serial.println(F(\"SSD1306 allocation failed\"));\n    for(;;);\n  }\n  delay(2000);\n  display.clearDisplay();\n  display.display();\n\n  while (!Serial);\n  Serial.println(\"LoRa Receiver\");\n\n  display.clearDisplay();\n    display.setTextSize(1);\n    display.setTextColor(WHITE);\n    display.setCursor(20, 30);\n    // Display static text\n    display.println(\"LoRa Receiver\");\n    display.display();\n\n  if (!LoRa.begin(433E6)) {\n    Serial.println(\"Starting LoRa failed!\");\n    while (1);\n  }\n  pinMode(led, OUTPUT);\n}\n\nvoid loop() {\n   String message = \"\";\n  // try to parse packet\n  int packetSize = LoRa.parsePacket();\n  if (packetSize) {\n\n    Serial.print(\"Received packet '\");\n\n    digitalWrite(led, HIGH);\n    delay(1000);\n    display.clearDisplay();\n    display.setTextSize(1);\n    display.setTextColor(WHITE);\n    display.setCursor(0, 10);\n    // Display static text\n    display.println(\"Received packet - \");\n    display.display();\n\n    Serial.println(packetSize);\n\n    // read packet\n    while (LoRa.available()) {\n\n    // Serial.print((char)LoRa.read());\n\n    message += (char)LoRa.read();\n\n    }\n\n    // display.clearDisplay();\n    display.setTextSize(1);\n    display.setTextColor(WHITE);\n    display.setCursor(20, 30);\n    // Display static text\n    display.println(message);\n    display.display();\n    Serial.print(message);\n\n    // print RSSI of packet\n    Serial.print(\"' with RSSI \");\n    Serial.println(LoRa.packetRssi());\n    digitalWrite(led, LOW);\n  }\n}\n```\n","ogImage":{"url":"/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_0.png"},"coverImage":"/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_0.png","tag":["Tech"],"readingTime":7},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h1>LoRa란 무엇인가요?</h1>\n<p>LoRa는 채프 확산 스펙트럼(CSS) 기술을 기반으로 한 무선 변조 방법입니다. 이 기술은 라디오 파동에 데이터를 인코딩하여 전파펄스를 통해 전송하며, 돌고래와 박쥐가 의사 소통하는 방식과 유사합니다. LoRa 기술은 소량의 전력을 소비하면서 장거리로 양방향 정보를 전송하는 데 사용할 수 있습니다.</p>\n<h2>LoRaWAN</h2>\n<p>LoRaWAN은 Semtech의 LoRa 변조 체계를 사용하는 포인트 투 멀티포인트 네트워킹 프로토콜입니다. 이는 LoRa 변조를 기반으로 구축된 미디어 액세스 제어(MAC) 레이어 프로토콜입니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>로라 프로토콜은 기본적으로 두 개의 LoRa 모듈 간 통신을 지원하지는 않지만, \"라디오헤드 패킷 메소드\" 기술을 통해 LoRa 프로토콜을 준수하면서 두 개의 LoRa 모듈 간 통신이 가능합니다.</p>\n<p>\"라디오헤드\"는 패킷 라디오 라이브러리로서 미세한 마이크로프로세서들을 위한 완전한 객체 지향 라이브러리로서 패킷화된 메시지를 송수신하기 위한 기능을 제공합니다.</p>\n<h1>아두이노와 LoRa SX1278</h1>\n<p><img src=\"/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_0.png\" alt=\"LoRa SX1278 with Arduino\"></p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<h2>LoRa SX1278 모듈</h2>\n<p>여기서 사용 중인 LoRa 모듈은 433MHz에서 작동하는 SX1278 Ra-02입니다.</p>\n<p><img src=\"/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_1.png\" alt=\"이미지\"></p>\n<h2>Arduino LoRa SX1278 송신기</h2>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>아두이노 LoRa SX1278 송신기의 회로도가 아래에 제시되어 있습니다. LoRa SX1278은 5V와 호환되지 않으므로 5V를 공급하지 마세요. 그렇게 하면 보드가 손상될 수 있습니다. VCC 핀에 연결하려면 아두이노의 3.3V를 사용하세요.</p>\n<p><img src=\"/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_2.png\" alt=\"아두이노 LoRa SX1278 송신기 회로도\"></p>\n<p><img src=\"/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_3.png\" alt=\"아두이노 LoRa SX1278 송신기 회로도\"></p>\n<h2>아두이노 LoRa SX1278 수신기</h2>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>아두이노 LoRa SX1278 수신기의 회로도가 아래에 제공되었습니다. OLED 디스플레이가 추가로 연결되어 수신된 값을 확인할 수 있습니다.</p>\n<p><img src=\"/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_4.png\" alt=\"회로도\"></p>\n<p><img src=\"/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_5.png\" alt=\"회로도\"></p>\n<h2>아두이노 IDE 준비</h2>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>하드웨어 설정을 완료한 후 다음 단계는 아두이노 IDE를 활용하는 것입니다. LoRa 모듈과 상호 작용할 때 Sandeep Mistry에 의해 개발된 포괄적인 LoRa 라이브러리를 사용할 수 있습니다.</p>\n<p>라이브러리를 추가하려면 아두이노 IDE를 열고 스케치 - 라이브러리 포함 - 라이브러리 관리를 따르세요.</p>\n<img src=\"/assets/img/2024-05-20-InterfacingSX1278Ra-02LORAModulewithArduino_6.png\">\n<h2>송신기 코드</h2>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&#x3C;SPI.h></span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&#x3C;LoRa.h></span></span>\n\n<span class=\"hljs-type\">int</span> counter = <span class=\"hljs-number\">0</span>;\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">setup</span><span class=\"hljs-params\">()</span> {\n  Serial.begin(<span class=\"hljs-number\">9600</span>);\n  <span class=\"hljs-keyword\">while</span> (!Serial);\n\n  Serial.println(<span class=\"hljs-string\">\"LoRa Sender\"</span>);\n\n  <span class=\"hljs-keyword\">if</span> (!LoRa.begin(<span class=\"hljs-number\">433E6</span>)) {\n    Serial.println(<span class=\"hljs-string\">\"Starting LoRa failed!\"</span>);\n    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>);\n  }\n  LoRa.setTxPower(<span class=\"hljs-number\">20</span>);\n}\n\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">loop</span><span class=\"hljs-params\">()</span> {\n\n  Serial.print(<span class=\"hljs-string\">\"Sending packet: \"</span>);\n  Serial.println(counter);\n  <span class=\"hljs-comment\">// send packet</span>\n  LoRa.beginPacket();\n  LoRa.print(<span class=\"hljs-string\">\"hello \"</span>);\n  LoRa.print(counter);\n  LoRa.endPacket();\n  counter++;\n  delay(<span class=\"hljs-number\">5000</span>);\n\n}\n</code></pre>\n<h2>Receiver Code</h2>\n<pre><code class=\"hljs language-c\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&#x3C;Wire.h></span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&#x3C;Adafruit_GFX.h></span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&#x3C;Adafruit_SSD1306.h></span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&#x3C;SPI.h></span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&#x3C;LoRa.h></span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> SCREEN_WIDTH 128 <span class=\"hljs-comment\">// OLED display width, in pixels</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> SCREEN_HEIGHT 64 <span class=\"hljs-comment\">// OLED display height, in pixels</span></span>\n\n<span class=\"hljs-comment\">// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> OLED_RESET     -1 <span class=\"hljs-comment\">// Reset pin # (or -1 if sharing Arduino reset pin)</span></span>\nAdafruit_SSD1306 <span class=\"hljs-title function_\">display</span><span class=\"hljs-params\">(SCREEN_WIDTH, SCREEN_HEIGHT, &#x26;Wire, OLED_RESET)</span>;\n\nString inString = <span class=\"hljs-string\">\"\"</span>; <span class=\"hljs-comment\">//hold incoming characters</span>\nString myMessage = <span class=\"hljs-string\">\"\"</span>; <span class=\"hljs-comment\">// hold compleye message</span>\n<span class=\"hljs-type\">int</span> led = <span class=\"hljs-number\">3</span>;\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">setup</span><span class=\"hljs-params\">()</span> {\n  Serial.begin(<span class=\"hljs-number\">9600</span>);\n\n  <span class=\"hljs-keyword\">if</span>(!display.begin(SSD1306_SWITCHCAPVCC, <span class=\"hljs-number\">0x3C</span>)) { <span class=\"hljs-comment\">// Address 0x3D for 128x64</span>\n    Serial.println(F(<span class=\"hljs-string\">\"SSD1306 allocation failed\"</span>));\n    <span class=\"hljs-keyword\">for</span>(;;);\n  }\n  delay(<span class=\"hljs-number\">2000</span>);\n  display.clearDisplay();\n  display.display();\n\n  <span class=\"hljs-keyword\">while</span> (!Serial);\n  Serial.println(<span class=\"hljs-string\">\"LoRa Receiver\"</span>);\n\n  display.clearDisplay();\n    display.setTextSize(<span class=\"hljs-number\">1</span>);\n    display.setTextColor(WHITE);\n    display.setCursor(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>);\n    <span class=\"hljs-comment\">// Display static text</span>\n    display.println(<span class=\"hljs-string\">\"LoRa Receiver\"</span>);\n    display.display();\n\n  <span class=\"hljs-keyword\">if</span> (!LoRa.begin(<span class=\"hljs-number\">433E6</span>)) {\n    Serial.println(<span class=\"hljs-string\">\"Starting LoRa failed!\"</span>);\n    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-number\">1</span>);\n  }\n  pinMode(led, OUTPUT);\n}\n\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">loop</span><span class=\"hljs-params\">()</span> {\n   String message = <span class=\"hljs-string\">\"\"</span>;\n  <span class=\"hljs-comment\">// try to parse packet</span>\n  <span class=\"hljs-type\">int</span> packetSize = LoRa.parsePacket();\n  <span class=\"hljs-keyword\">if</span> (packetSize) {\n\n    Serial.print(<span class=\"hljs-string\">\"Received packet '\"</span>);\n\n    digitalWrite(led, HIGH);\n    delay(<span class=\"hljs-number\">1000</span>);\n    display.clearDisplay();\n    display.setTextSize(<span class=\"hljs-number\">1</span>);\n    display.setTextColor(WHITE);\n    display.setCursor(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">10</span>);\n    <span class=\"hljs-comment\">// Display static text</span>\n    display.println(<span class=\"hljs-string\">\"Received packet - \"</span>);\n    display.display();\n\n    Serial.println(packetSize);\n\n    <span class=\"hljs-comment\">// read packet</span>\n    <span class=\"hljs-keyword\">while</span> (LoRa.available()) {\n\n    <span class=\"hljs-comment\">// Serial.print((char)LoRa.read());</span>\n\n    message += (<span class=\"hljs-type\">char</span>)LoRa.read();\n\n    }\n\n    <span class=\"hljs-comment\">// display.clearDisplay();</span>\n    display.setTextSize(<span class=\"hljs-number\">1</span>);\n    display.setTextColor(WHITE);\n    display.setCursor(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>);\n    <span class=\"hljs-comment\">// Display static text</span>\n    display.println(message);\n    display.display();\n    Serial.print(message);\n\n    <span class=\"hljs-comment\">// print RSSI of packet</span>\n    Serial.print(<span class=\"hljs-string\">\"' with RSSI \"</span>);\n    Serial.println(LoRa.packetRssi());\n    digitalWrite(led, LOW);\n  }\n}\n</code></pre>\n</body>\n</html>\n"},"__N_SSG":true}
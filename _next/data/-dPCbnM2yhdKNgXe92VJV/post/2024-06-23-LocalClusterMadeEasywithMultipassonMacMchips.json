{"pageProps":{"post":{"title":"M 시리즈 맥에서 Multipass로 로컬 클러스터 쉽게 만들기","description":"","date":"2024-06-23 22:57","slug":"2024-06-23-LocalClusterMadeEasywithMultipassonMacMchips","content":"\n<img src=\"/assets/img/2024-06-23-LocalClusterMadeEasywithMultipassonMacMchips_0.png\" />\n\n이 기사는 여러분의 기계에 k3s Kubernetes 환경을 설정하여 여러분의 POC를 테스트하고 CNCF 랜드스케이프의 더 많은 도구들을 탐색하는 방법을 보여줍니다.\n\n여러분의 Mac에서 K3S/K8S를 직접 실행할 수 없기 때문에 여러분은 Mac 위에 Linux 레이어를 설정해야 합니다. Mac M1에서 Linux VM을 설정하는 쉬운 방법은 Multipass를 사용하는 것입니다.\n\n왜 Multipass를 사용해야 하는지요?\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n한 번의 명령어로 즉시 Ubuntu VM을 얻을 수 있어요.\n\n먼저, Multipass를 설치해야 해요.\n\n```js\nbrew install --cask multipass\n```\n\n설치되면 메모리 및 디스크 공간을 지정하여 새 VM을 생성해보세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```js\nmultipass launch --name k3s --memory 4G --disk 40G\n```\n\n우리는 심지어 VM에서 Mac 디렉터리를 마운트할 수도 있어요.\n\n```js\nmkdir ~/test/k8s\nmultipass mount ~/test/k8s k3s:~/k8s\n```\n\n호스트 디렉토리에서 변경 사항을 만들고 VM 내부의 클러스터에 변경 사항을 적용하려고 할 때 유용할 거예요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nVM 내부에서 설치 스크립트를 실행하여 k3s를 설치할 수 있어요.\n\n```js\nmultipass shell k3s\n\nubuntu@k3s:~$ curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=\"644\" sh -\n```\n\nVM이 시작되면 VM 세부 정보를 확인할 수 있어요.\n\n```js\nmultipass info k3s\n\nName:           k3s\nState:          Running\nSnapshots:      0\nIPv4:           192.168.64.7\n                10.42.0.0\n                10.42.0.1\nRelease:        Ubuntu 24.04 LTS\nImage hash:     8263b4713896 (Ubuntu 24.04 LTS)\nCPU(s):         1\nLoad:           0.29 0.22 0.13\nDisk usage:     2.8GiB out of 38.7GiB\nMemory usage:   814.2MiB out of 3.8GiB\nMounts:         /Users/ibrahimmohamed/test/k8s => ~/k8s\n                    UID map: 501:default\n                    GID map: 20:default\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```shell\nK3S_IP=$(multipass info k3s | grep IPv4 | awk '{print $2}')\n\necho $K3S_IP\n\n192.168.64.7# kubeconfig 다운로드\n\nmultipass exec k3s cp /etc/rancher/k3s/k3s.yaml /home/ubuntu/k8s/\n\ncd ~/test/k8s\n\nsed -i '' \"s/127.0.0.1/${K3S_IP}/\" k3s.yaml\n\nexport KUBECONFIG=${PWD}/k3s.yaml\n```\n\n이제 kubeconfig이 있습니다:\n\n머신에 kubectl을 설치하세요:\n\n```shell\nbrew install kubectl\n```\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n```sh\nkubectl get nodes -o wide\n\nNAME   STATUS   ROLES                  AGE   VERSION        INTERNAL-IP    EXTERNAL-IP   OS-IMAGE           KERNEL-VERSION     CONTAINER-RUNTIME\nk3s    Ready    control-plane,master   12m   v1.29.5+k3s1   192.168.64.7   <none>        Ubuntu 24.04 LTS   6.8.0-35-generic   containerd://1.7.15-k3s1\n\n\nkubectl get pods -A\n\nNAMESPACE     NAME                                      READY   STATUS      RESTARTS   AGE\nkube-system   coredns-6799fbcd5-dc8nd                   1/1     Running     0          41m\nkube-system   local-path-provisioner-6c86858495-9q524   1/1     Running     0          41m\nkube-system   helm-install-traefik-crd-p4xhh            0/1     Completed   0          41m\nkube-system   metrics-server-54fd9b65b-vmhvc            1/1     Running     0          41m\nkube-system   helm-install-traefik-5snzg                0/1     Completed   1          41m\nkube-system   svclb-traefik-ae8c3cf6-hntgn              2/2     Running     0          40m\nkube-system   traefik-7d5f6474df-48vsc                  1/1     Running     0          40m\n```\n\nNow let's view it through Lens\n\n![Lens](/assets/img/2024-06-23-LocalClusterMadeEasywithMultipassonMacMchips_1.png)\n\nNow you are ready to run any POC on your local machine.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\nk3s 실험이 끝나면 VM을 삭제할 수 있습니다.\n\n```js\nmultipass delete k3s\nmultipass purge\n```\n\n화이팅!\n","ogImage":{"url":"/assets/img/2024-06-23-LocalClusterMadeEasywithMultipassonMacMchips_0.png"},"coverImage":"/assets/img/2024-06-23-LocalClusterMadeEasywithMultipassonMacMchips_0.png","tag":["Tech"],"readingTime":5},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<img src=\"/assets/img/2024-06-23-LocalClusterMadeEasywithMultipassonMacMchips_0.png\">\n<p>이 기사는 여러분의 기계에 k3s Kubernetes 환경을 설정하여 여러분의 POC를 테스트하고 CNCF 랜드스케이프의 더 많은 도구들을 탐색하는 방법을 보여줍니다.</p>\n<p>여러분의 Mac에서 K3S/K8S를 직접 실행할 수 없기 때문에 여러분은 Mac 위에 Linux 레이어를 설정해야 합니다. Mac M1에서 Linux VM을 설정하는 쉬운 방법은 Multipass를 사용하는 것입니다.</p>\n<p>왜 Multipass를 사용해야 하는지요?</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>한 번의 명령어로 즉시 Ubuntu VM을 얻을 수 있어요.</p>\n<p>먼저, Multipass를 설치해야 해요.</p>\n<pre><code class=\"hljs language-js\">brew install --cask multipass\n</code></pre>\n<p>설치되면 메모리 및 디스크 공간을 지정하여 새 VM을 생성해보세요.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-js\">multipass launch --name k3s --memory 4G --disk 40G\n</code></pre>\n<p>우리는 심지어 VM에서 Mac 디렉터리를 마운트할 수도 있어요.</p>\n<pre><code class=\"hljs language-js\">mkdir ~<span class=\"hljs-regexp\">/test/</span>k8s\nmultipass mount ~<span class=\"hljs-regexp\">/test/</span>k8s <span class=\"hljs-attr\">k3s</span>:~/k8s\n</code></pre>\n<p>호스트 디렉토리에서 변경 사항을 만들고 VM 내부의 클러스터에 변경 사항을 적용하려고 할 때 유용할 거예요.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>VM 내부에서 설치 스크립트를 실행하여 k3s를 설치할 수 있어요.</p>\n<pre><code class=\"hljs language-js\">multipass shell k3s\n\nubuntu@<span class=\"hljs-attr\">k3s</span>:~$ curl -sfL <span class=\"hljs-attr\">https</span>:<span class=\"hljs-comment\">//get.k3s.io | K3S_KUBECONFIG_MODE=\"644\" sh -</span>\n</code></pre>\n<p>VM이 시작되면 VM 세부 정보를 확인할 수 있어요.</p>\n<pre><code class=\"hljs language-js\">multipass info k3s\n\n<span class=\"hljs-title class_\">Name</span>:           k3s\n<span class=\"hljs-title class_\">State</span>:          <span class=\"hljs-title class_\">Running</span>\n<span class=\"hljs-title class_\">Snapshots</span>:      <span class=\"hljs-number\">0</span>\n<span class=\"hljs-title class_\">IPv4</span>:           <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.64</span><span class=\"hljs-number\">.7</span>\n                <span class=\"hljs-number\">10.42</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span>\n                <span class=\"hljs-number\">10.42</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.1</span>\n<span class=\"hljs-title class_\">Release</span>:        <span class=\"hljs-title class_\">Ubuntu</span> <span class=\"hljs-number\">24.04</span> <span class=\"hljs-variable constant_\">LTS</span>\n<span class=\"hljs-title class_\">Image</span> <span class=\"hljs-attr\">hash</span>:     8263b4713896 (<span class=\"hljs-title class_\">Ubuntu</span> <span class=\"hljs-number\">24.04</span> <span class=\"hljs-variable constant_\">LTS</span>)\n<span class=\"hljs-title function_\">CPU</span>(s):         <span class=\"hljs-number\">1</span>\n<span class=\"hljs-title class_\">Load</span>:           <span class=\"hljs-number\">0.29</span> <span class=\"hljs-number\">0.22</span> <span class=\"hljs-number\">0.13</span>\n<span class=\"hljs-title class_\">Disk</span> <span class=\"hljs-attr\">usage</span>:     <span class=\"hljs-number\">2.</span>8GiB out <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">38.</span>7GiB\n<span class=\"hljs-title class_\">Memory</span> <span class=\"hljs-attr\">usage</span>:   <span class=\"hljs-number\">814.</span>2MiB out <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">3.</span>8GiB\n<span class=\"hljs-title class_\">Mounts</span>:         <span class=\"hljs-regexp\">/Users/i</span>brahimmohamed/test/<span class=\"hljs-function\"><span class=\"hljs-params\">k8s</span> =></span> ~/k8s\n                    <span class=\"hljs-variable constant_\">UID</span> <span class=\"hljs-attr\">map</span>: <span class=\"hljs-number\">501</span>:<span class=\"hljs-keyword\">default</span>\n                    <span class=\"hljs-variable constant_\">GID</span> <span class=\"hljs-attr\">map</span>: <span class=\"hljs-number\">20</span>:<span class=\"hljs-keyword\">default</span>\n</code></pre>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-shell\">K3S_IP=$(multipass info k3s | grep IPv4 | awk '{print $2}')\n\necho $K3S_IP\n\n192.168.64.7# kubeconfig 다운로드\n\nmultipass exec k3s cp /etc/rancher/k3s/k3s.yaml /home/ubuntu/k8s/\n\ncd ~/test/k8s\n\nsed -i '' \"s/127.0.0.1/${K3S_IP}/\" k3s.yaml\n\nexport KUBECONFIG=${PWD}/k3s.yaml\n</code></pre>\n<p>이제 kubeconfig이 있습니다:</p>\n<p>머신에 kubectl을 설치하세요:</p>\n<pre><code class=\"hljs language-shell\">brew install kubectl\n</code></pre>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<pre><code class=\"hljs language-sh\">kubectl get nodes -o wide\n\nNAME   STATUS   ROLES                  AGE   VERSION        INTERNAL-IP    EXTERNAL-IP   OS-IMAGE           KERNEL-VERSION     CONTAINER-RUNTIME\nk3s    Ready    control-plane,master   12m   v1.29.5+k3s1   192.168.64.7   &#x3C;none>        Ubuntu 24.04 LTS   6.8.0-35-generic   containerd://1.7.15-k3s1\n\n\nkubectl get pods -A\n\nNAMESPACE     NAME                                      READY   STATUS      RESTARTS   AGE\nkube-system   coredns-6799fbcd5-dc8nd                   1/1     Running     0          41m\nkube-system   local-path-provisioner-6c86858495-9q524   1/1     Running     0          41m\nkube-system   helm-install-traefik-crd-p4xhh            0/1     Completed   0          41m\nkube-system   metrics-server-54fd9b65b-vmhvc            1/1     Running     0          41m\nkube-system   helm-install-traefik-5snzg                0/1     Completed   1          41m\nkube-system   svclb-traefik-ae8c3cf6-hntgn              2/2     Running     0          40m\nkube-system   traefik-7d5f6474df-48vsc                  1/1     Running     0          40m\n</code></pre>\n<p>Now let's view it through Lens</p>\n<p><img src=\"/assets/img/2024-06-23-LocalClusterMadeEasywithMultipassonMacMchips_1.png\" alt=\"Lens\"></p>\n<p>Now you are ready to run any POC on your local machine.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>k3s 실험이 끝나면 VM을 삭제할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">multipass <span class=\"hljs-keyword\">delete</span> k3s\nmultipass purge\n</code></pre>\n<p>화이팅!</p>\n</body>\n</html>\n"},"__N_SSG":true}
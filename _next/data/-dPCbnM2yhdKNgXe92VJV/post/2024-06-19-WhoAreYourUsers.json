{"pageProps":{"post":{"title":"사용자분들은 누구인가요","description":"","date":"2024-06-19 11:27","slug":"2024-06-19-WhoAreYourUsers","content":"\n![이미지](/assets/img/2024-06-19-WhoAreYourUsers_0.png)\n\n소프트웨어 시스템의 \"사용자\"에 대해 이야기할 때, 모든 사용자가 유사한 특성과 요구사항을 가진 거대한 그룹에 속해 있다고 생각하는 경우가 종종 있습니다. 하지만 실제로는 규모가 있는 대부분의 제품은 서로 다른 기대와 목표를 가진 여러 사용자들에게 매력을 느끼게 됩니다. \"사용자\"를 단수로 생각하는 대신, 제품의 다양한 사용자 클래스와 그들의 요구사항 및 제약을 식별하는 데 시간을 투자하는 것이 좋습니다.\n\n# 사용자 분류\n\n이해관계자란 프로젝트에 적극적으로 참여하거나 프로젝트에 영향을 받는 개인 또는 그룹 또는 프로젝트의 방향을 결정할 수 있는 개인 또는 그룹을 말합니다. 그림 1에서 볼 수 있듯이 사용자 클래스는 제품의 사용자들의 하위 집합이며, 해당 사용자들은 제품의 고객들의 하위 집합이며, 이들은 이해관계자들의 하위 집합입니다. 각 사용자 클래스는 자체 요구사항과 제약 사항이 있을 것이며, 클래스 간에 일부 중복이 있을 수도 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n![WhoAreYourUsers](/assets/img/2024-06-19-WhoAreYourUsers_1.png)\n\n제품을 사용하는 사용자들은 다양한 방법 중 몇 가지로 다를 수 있습니다. 이러한 차이를 기반으로 사용자들을 몇 가지 명백한 사용자 클래스로 그룹화할 수 있습니다:\n\n- 시스템과 직접적으로 상호작용할지 간접적으로 상호작용할지\n- 제품에서 수행하는 작업\n- 사용하는 제품 기능\n- 액세스 권한 또는 보안 수준 (일반 사용자, 게스트 사용자 또는 관리자와 같은)\n- 사용 빈도\n- 애플리케이션 도메인 경험 및 컴퓨터 시스템 전문성\n- 사용하는 플랫폼이나 장치 (PC, 태블릿, 스마트폰 또는 특수 장치)\n\n물리적 위치나 근무하는 비즈니스의 종류에 따라 사용자들을 클래스로 그룹화하는 것이 논리적으로 보일 수 있습니다. 은행 소프트웨어를 만드는 회사는 초기에 대형 상업 은행, 소규모 상업 은행, 저축 및 대부조합에서 근무하는지에 따라 사용자를 구분했습니다. 그러나 이러한 구별은 서로 다른 시장 세그먼트를 나타내는 것이 아니라 다른 사용자 클래스를 나타냅니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n더 나은 그룹화 기법은 다양한 사용자들이 수행할 작업 (사용 사례, 사용자 이야기 또는 프로세스 흐름으로 표현)을 고려하는 것입니다. 이러한 활동을 수행하는 개인들은 모든 금융 기관에서 유사한 기능적 요구를 갖게 될 것입니다. 모든 이러한 기관은 창구원, 대출 신청서를 처리하는 사람, 비즈니스 은행원, 지점 매니저 등을 고용합니다. 이것이 더 의미 있는 사용자 분류 체계입니다.\n\n일부 사용자 분류는 제품 성공에 다른 분류보다 더 중요할 수 있습니다. 선호되는 사용자 분류는 프로젝트의 비즈니스 목표를 달성하는 데 가장 밀접하게 연관된 만족도가 가장 높은 분류입니다. 다른 사용자 분류 간 요구사항 간 충돌을 해결하거나 우선 순위 결정을 내릴 때, 선호되는 사용자 분류가 우선적으로 처리됩니다.\n\n비선호되는 사용자 분류는 법적, 보안 또는 안전상의 이유로 제품을 사용해서는 안 됩니다. 비선호되는 사용자가 허용되지 않은 작업을 하는 것을 어렵게 만들기 위한 기능을 구현할 수 있습니다. 예를 들어 액세스 보안 메커니즘, 사용자 권한 수준, 악성 코드 방지 기능 (비인간 사용자를 위한 것) 및 사용 로깅이 있습니다. 네 번의 실패 로그인 시도 후 사용자 계정을 잠그는 것은 “사용자를 가장하는 사용자 위조자”라는 비선호되는 사용자 분류로부터의 액세스로부터 보호해 주지만 망각쟁이의 정당한 사용자들을 귀찮게 할 위험이 따릅니다.\n\n또 다른 사용자 분류를 무시하기로 결정할 수 있습니다. 그들은 제품을 사용할지라도 특별히 그들에게 맞게 디자인하지 않습니다. 선호되지 않고, 무시되지 않은 사용자 그룹은 제품 요구 사항에 영향을 미치는 데 있어 동등한 중요성을 가지고 있습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n간접 사용자 클래스를 간과하지 마세요. 그들은 당신의 응용 프로그램을 직접 사용하지 않을 수 있지만, 다른 응용 프로그램을 통해 데이터나 서비스에 접근하거나 보고서를 받아들일 수 있습니다. 한 번 제거된 당신의 고객도 여전히 당신의 고객이에요.\n\n다양한 사용자 클래스는 사용자 인터페이스 디자인 선택에 영향을 미칠 수 있는 사용성과 같은 다른 품질 기대치를 가질 수 있어요. 새로운이나 가끔 사용자는 시스템이 얼마나 쉽게 배울 수 있는지에 대해 관심이 있어요. 이러한 사용자들은 메뉴, 깔끔한 화면 표시, 마법사 및 도움말 화면을 좋아해요. 사용자들이 경험을 쌓으면 효율성에 더 관심을 가지게 됩니다. 그들은 이제 키보드 바로 가기, 사용자 정의 옵션, 툴바 및 스크립팅 기능을 중요시해요.\n\n사용자 클래스가 반드시 사람이어야 하는 것은 아니에요. 인간 사용자를 대신하여 서비스를 수행하는 소프트웨어 에이전트, 예를 들어 봇과 같은 소프트웨어 에이전트도 사용자 클래스가 될 수 있어요. 소프트웨어 에이전트는 상품 및 서비스에 관한 정보를 스캔하거나 맞춤형 뉴스 피드를 구성하거나 수신 이메일을 처리하거나 물리적 시스템 및 네트워크를 문제나 침입으로부터 모니터링하거나 데이터 마이닝을 수행할 수 있어요. 당신의 제품으로부터 출력을 받는 다른 시스템도 사용자 클래스로 간주될 수 있어요.\n\n직접 및 간접 사용자 클래스 외에도 추가 요구 사항과 제약 조건을 제시할 수 있는 다양한 이해 관계자들을 고려하세요. 예를 들어, 개발 팀 구성원이 그들이 구축 중인 제품의 최종 사용자가 아니더라도, 효율성, 수정 가능성, 이식성 및 재사용성과 같은 내부 품질 속성에 관한 의견을 가질 것입니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n한 회사는 제품 설치마다 많은 비용이 필요하다는 문제점을 발견했습니다. 그들은 제품의 맞춤화 아키텍처를 개발하는 등 요구 사항에 중점을 둘 \"설치자\" 사용자 클래스를 고안했습니다. 이해관계자를 식별할 때 명백한 최종 사용자 이상을 고려해보세요.\n\n# 사용자 클래스 식별하기\n\n제품의 다양한 사용자 클래스를 조기에 분류하여 각 중요 커뮤니티의 적합한 대표자와 소통할 수 있습니다. 먼저, 프로젝트 후원자에게 시스템을 사용할 것으로 기대하는 사람에 대해 묻습니다. 그런 다음 가능한 많은 사용자 클래스를 떠올려봅니다. 이 단계에서 수십 개의 사용자 클래스가 있다면 신경 쓰지 마세요. 나중에 축소하고 분류할 것입니다. 제공된 솔루션이 사용자의 요구 사항을 충족시키지 않아 문제가 생기는 일을 방지하기 위해 사용자 클래스를 누락하지 않는 것이 중요합니다.\n\n다음으로, 유사한 요구 사항을 가진 그룹을 찾아 합칠 수도 있거나 여러 하위 클래스가 있는 주요 사용자 클래스로 취급할 수 있습니다. 약 65개 기업 고객을 위해 특화된 제품을 개발한 한 회사는 처음에 각 고객 회사를 고유한 요구 사항을 가진 별개의 사용자로 간주했습니다. 그들의 고객을 단순히 여섯 개의 사용자 클래스로 그룹화함으로써 요구 사항 도전에 간단하게 해결할 수 있었습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n다양한 요구 분석 모델은 사용자 클래스를 식별하는 데 도움을 줄 수 있습니다. 컨텍스트 다이어그램에서 시스템 외부에 표시된 외부 엔터티는 사용자 클래스의 후보입니다. 기업 조직도는 잠재적 사용자와 다른 이해관계자를 발견하는 데 도움이 될 수 있습니다. 가상의 제약회사를 위한 일부 조직도가 있는 도표 2를 보여드립니다. 시스템의 대부분의 잠재적 사용자는 그러한 조직도 어딘가에 있을 확률이 높습니다. 이해관계자 및 사용자 분석을 수행하는 동안 조직도를 조사하여 다음을 찾아보세요:\n\n- 비즈니스 프로세스에 참여하는 부서.\n- 비즈니스 프로세스에 영향을 받는 부서.\n- 직접 또는 간접 사용자를 찾을 수 있는 부서 또는 역할 이름.\n- 여러 부서를 거쳐 사용자 클래스.\n- 회사 외부의 외부 이해관계자와 상호 작용할 수 있는 부서.\n\n조직도 분석을 통해 중요한 사용자 클래스를 놓치지 않을 확률이 줄어듭니다. 잠재적 사용자 대표를 발견할 수 있는 장소와 핵심 요구사항 결정자를 확인해 줍니다. 단일 부서 내에 다양한 요구를 가진 여러 사용자 클래스를 발견할 수도 있습니다. 반대로, 여러 부서에서 동일한 사용자 클래스를 인식하는 것은 요구 사항 수집을 단순화할 수 있습니다. 또한, 각 부서의 사용자가 관점에 따라 제공할 수있는 정보 유형을 생각해 보세요.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n요구 사항 명세서, 도구 또는 계획에 사용자 클래스 및 특성 및 책임을 문서화하십시오. 각 사용자 클래스에 대한 모든 관련 정보를 포함하십시오. (예: 크기 및 선호되는 클래스). 이는 향후 변경 요청을 우선 순위로 지정하고 영향 평가를 수행하는 팀을 도울 것입니다. 거래량을 추정함으로써 테스터가 제품의 사용 프로필을 개발하고 검증 활동을 계획하는 데 도움이 됩니다.\n\n표 1은 화학 물질 추적 정보 시스템의 샘플 사용자 클래스 문서 일부를 나타냅니다. 여러 응용 프로그램에서 반복되는 사용자 클래스의 재사용 가능 카탈로그를 작성하는 것을 고려하십시오.\n\n저는 실제 화학 물질 추적 시스템 프로젝트에서 비즈니스 분석 노력을 주도했습니다. 화학가 사용자 클래스는 우리의 이해 관계자 그룹 중에서 가장 큰 그룹이었습니다. 모든 화학가들은 시스템에 대한 많은 요구 사항을 공통으로 가지고 있지만, 우리는 몇 가지 전문 요구 사항을 갖고 있는 화학가 하위 그룹이 있음을 깨달았습니다. 우리는 이러한 하위 그룹의 화학가 사용자 대표팀을 구성하여 전체 화학가 사용자 클래스에 대한 요구 사항을 잘 끌어내기 위해 노력했습니다.\n\n<!-- ui-station 사각형 -->\n\n<ins class=\"adsbygoogle\"\nstyle=\"display:block\"\ndata-ad-client=\"ca-pub-4877378276818686\"\ndata-ad-slot=\"7249294152\"\ndata-ad-format=\"auto\"\ndata-full-width-responsive=\"true\"></ins>\n\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n\n사용자 클래스 분석은 시간이 소요되지만, 가능한 많은 이해관계자를 만족시키며 성공적인 제품 개발 노력을 위한 기초를 마련하는 중요한 단계입니다.\n\n이 글은 Karl Wiegers와 Joy Beatty의 『Software Requirements, 3rd Edition』에서 적용된 것입니다. Karl은 Process Impact의 주요 컨설턴트입니다. 또한 Candase Hokanson과 함께 쓴 『Software Requirements Essentials』, 『Software Development Pearls』, 『The Thoughtless Design of Everyday Things』 및 『Successful Business Analysis Consulting』을 포함한 여러 책의 저자입니다.\n","ogImage":{"url":"/assets/img/2024-06-19-WhoAreYourUsers_0.png"},"coverImage":"/assets/img/2024-06-19-WhoAreYourUsers_0.png","tag":["Tech"],"readingTime":7},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-19-WhoAreYourUsers_0.png\" alt=\"이미지\"></p>\n<p>소프트웨어 시스템의 \"사용자\"에 대해 이야기할 때, 모든 사용자가 유사한 특성과 요구사항을 가진 거대한 그룹에 속해 있다고 생각하는 경우가 종종 있습니다. 하지만 실제로는 규모가 있는 대부분의 제품은 서로 다른 기대와 목표를 가진 여러 사용자들에게 매력을 느끼게 됩니다. \"사용자\"를 단수로 생각하는 대신, 제품의 다양한 사용자 클래스와 그들의 요구사항 및 제약을 식별하는 데 시간을 투자하는 것이 좋습니다.</p>\n<h1>사용자 분류</h1>\n<p>이해관계자란 프로젝트에 적극적으로 참여하거나 프로젝트에 영향을 받는 개인 또는 그룹 또는 프로젝트의 방향을 결정할 수 있는 개인 또는 그룹을 말합니다. 그림 1에서 볼 수 있듯이 사용자 클래스는 제품의 사용자들의 하위 집합이며, 해당 사용자들은 제품의 고객들의 하위 집합이며, 이들은 이해관계자들의 하위 집합입니다. 각 사용자 클래스는 자체 요구사항과 제약 사항이 있을 것이며, 클래스 간에 일부 중복이 있을 수도 있습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p><img src=\"/assets/img/2024-06-19-WhoAreYourUsers_1.png\" alt=\"WhoAreYourUsers\"></p>\n<p>제품을 사용하는 사용자들은 다양한 방법 중 몇 가지로 다를 수 있습니다. 이러한 차이를 기반으로 사용자들을 몇 가지 명백한 사용자 클래스로 그룹화할 수 있습니다:</p>\n<ul>\n<li>시스템과 직접적으로 상호작용할지 간접적으로 상호작용할지</li>\n<li>제품에서 수행하는 작업</li>\n<li>사용하는 제품 기능</li>\n<li>액세스 권한 또는 보안 수준 (일반 사용자, 게스트 사용자 또는 관리자와 같은)</li>\n<li>사용 빈도</li>\n<li>애플리케이션 도메인 경험 및 컴퓨터 시스템 전문성</li>\n<li>사용하는 플랫폼이나 장치 (PC, 태블릿, 스마트폰 또는 특수 장치)</li>\n</ul>\n<p>물리적 위치나 근무하는 비즈니스의 종류에 따라 사용자들을 클래스로 그룹화하는 것이 논리적으로 보일 수 있습니다. 은행 소프트웨어를 만드는 회사는 초기에 대형 상업 은행, 소규모 상업 은행, 저축 및 대부조합에서 근무하는지에 따라 사용자를 구분했습니다. 그러나 이러한 구별은 서로 다른 시장 세그먼트를 나타내는 것이 아니라 다른 사용자 클래스를 나타냅니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>더 나은 그룹화 기법은 다양한 사용자들이 수행할 작업 (사용 사례, 사용자 이야기 또는 프로세스 흐름으로 표현)을 고려하는 것입니다. 이러한 활동을 수행하는 개인들은 모든 금융 기관에서 유사한 기능적 요구를 갖게 될 것입니다. 모든 이러한 기관은 창구원, 대출 신청서를 처리하는 사람, 비즈니스 은행원, 지점 매니저 등을 고용합니다. 이것이 더 의미 있는 사용자 분류 체계입니다.</p>\n<p>일부 사용자 분류는 제품 성공에 다른 분류보다 더 중요할 수 있습니다. 선호되는 사용자 분류는 프로젝트의 비즈니스 목표를 달성하는 데 가장 밀접하게 연관된 만족도가 가장 높은 분류입니다. 다른 사용자 분류 간 요구사항 간 충돌을 해결하거나 우선 순위 결정을 내릴 때, 선호되는 사용자 분류가 우선적으로 처리됩니다.</p>\n<p>비선호되는 사용자 분류는 법적, 보안 또는 안전상의 이유로 제품을 사용해서는 안 됩니다. 비선호되는 사용자가 허용되지 않은 작업을 하는 것을 어렵게 만들기 위한 기능을 구현할 수 있습니다. 예를 들어 액세스 보안 메커니즘, 사용자 권한 수준, 악성 코드 방지 기능 (비인간 사용자를 위한 것) 및 사용 로깅이 있습니다. 네 번의 실패 로그인 시도 후 사용자 계정을 잠그는 것은 “사용자를 가장하는 사용자 위조자”라는 비선호되는 사용자 분류로부터의 액세스로부터 보호해 주지만 망각쟁이의 정당한 사용자들을 귀찮게 할 위험이 따릅니다.</p>\n<p>또 다른 사용자 분류를 무시하기로 결정할 수 있습니다. 그들은 제품을 사용할지라도 특별히 그들에게 맞게 디자인하지 않습니다. 선호되지 않고, 무시되지 않은 사용자 그룹은 제품 요구 사항에 영향을 미치는 데 있어 동등한 중요성을 가지고 있습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>간접 사용자 클래스를 간과하지 마세요. 그들은 당신의 응용 프로그램을 직접 사용하지 않을 수 있지만, 다른 응용 프로그램을 통해 데이터나 서비스에 접근하거나 보고서를 받아들일 수 있습니다. 한 번 제거된 당신의 고객도 여전히 당신의 고객이에요.</p>\n<p>다양한 사용자 클래스는 사용자 인터페이스 디자인 선택에 영향을 미칠 수 있는 사용성과 같은 다른 품질 기대치를 가질 수 있어요. 새로운이나 가끔 사용자는 시스템이 얼마나 쉽게 배울 수 있는지에 대해 관심이 있어요. 이러한 사용자들은 메뉴, 깔끔한 화면 표시, 마법사 및 도움말 화면을 좋아해요. 사용자들이 경험을 쌓으면 효율성에 더 관심을 가지게 됩니다. 그들은 이제 키보드 바로 가기, 사용자 정의 옵션, 툴바 및 스크립팅 기능을 중요시해요.</p>\n<p>사용자 클래스가 반드시 사람이어야 하는 것은 아니에요. 인간 사용자를 대신하여 서비스를 수행하는 소프트웨어 에이전트, 예를 들어 봇과 같은 소프트웨어 에이전트도 사용자 클래스가 될 수 있어요. 소프트웨어 에이전트는 상품 및 서비스에 관한 정보를 스캔하거나 맞춤형 뉴스 피드를 구성하거나 수신 이메일을 처리하거나 물리적 시스템 및 네트워크를 문제나 침입으로부터 모니터링하거나 데이터 마이닝을 수행할 수 있어요. 당신의 제품으로부터 출력을 받는 다른 시스템도 사용자 클래스로 간주될 수 있어요.</p>\n<p>직접 및 간접 사용자 클래스 외에도 추가 요구 사항과 제약 조건을 제시할 수 있는 다양한 이해 관계자들을 고려하세요. 예를 들어, 개발 팀 구성원이 그들이 구축 중인 제품의 최종 사용자가 아니더라도, 효율성, 수정 가능성, 이식성 및 재사용성과 같은 내부 품질 속성에 관한 의견을 가질 것입니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>한 회사는 제품 설치마다 많은 비용이 필요하다는 문제점을 발견했습니다. 그들은 제품의 맞춤화 아키텍처를 개발하는 등 요구 사항에 중점을 둘 \"설치자\" 사용자 클래스를 고안했습니다. 이해관계자를 식별할 때 명백한 최종 사용자 이상을 고려해보세요.</p>\n<h1>사용자 클래스 식별하기</h1>\n<p>제품의 다양한 사용자 클래스를 조기에 분류하여 각 중요 커뮤니티의 적합한 대표자와 소통할 수 있습니다. 먼저, 프로젝트 후원자에게 시스템을 사용할 것으로 기대하는 사람에 대해 묻습니다. 그런 다음 가능한 많은 사용자 클래스를 떠올려봅니다. 이 단계에서 수십 개의 사용자 클래스가 있다면 신경 쓰지 마세요. 나중에 축소하고 분류할 것입니다. 제공된 솔루션이 사용자의 요구 사항을 충족시키지 않아 문제가 생기는 일을 방지하기 위해 사용자 클래스를 누락하지 않는 것이 중요합니다.</p>\n<p>다음으로, 유사한 요구 사항을 가진 그룹을 찾아 합칠 수도 있거나 여러 하위 클래스가 있는 주요 사용자 클래스로 취급할 수 있습니다. 약 65개 기업 고객을 위해 특화된 제품을 개발한 한 회사는 처음에 각 고객 회사를 고유한 요구 사항을 가진 별개의 사용자로 간주했습니다. 그들의 고객을 단순히 여섯 개의 사용자 클래스로 그룹화함으로써 요구 사항 도전에 간단하게 해결할 수 있었습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>다양한 요구 분석 모델은 사용자 클래스를 식별하는 데 도움을 줄 수 있습니다. 컨텍스트 다이어그램에서 시스템 외부에 표시된 외부 엔터티는 사용자 클래스의 후보입니다. 기업 조직도는 잠재적 사용자와 다른 이해관계자를 발견하는 데 도움이 될 수 있습니다. 가상의 제약회사를 위한 일부 조직도가 있는 도표 2를 보여드립니다. 시스템의 대부분의 잠재적 사용자는 그러한 조직도 어딘가에 있을 확률이 높습니다. 이해관계자 및 사용자 분석을 수행하는 동안 조직도를 조사하여 다음을 찾아보세요:</p>\n<ul>\n<li>비즈니스 프로세스에 참여하는 부서.</li>\n<li>비즈니스 프로세스에 영향을 받는 부서.</li>\n<li>직접 또는 간접 사용자를 찾을 수 있는 부서 또는 역할 이름.</li>\n<li>여러 부서를 거쳐 사용자 클래스.</li>\n<li>회사 외부의 외부 이해관계자와 상호 작용할 수 있는 부서.</li>\n</ul>\n<p>조직도 분석을 통해 중요한 사용자 클래스를 놓치지 않을 확률이 줄어듭니다. 잠재적 사용자 대표를 발견할 수 있는 장소와 핵심 요구사항 결정자를 확인해 줍니다. 단일 부서 내에 다양한 요구를 가진 여러 사용자 클래스를 발견할 수도 있습니다. 반대로, 여러 부서에서 동일한 사용자 클래스를 인식하는 것은 요구 사항 수집을 단순화할 수 있습니다. 또한, 각 부서의 사용자가 관점에 따라 제공할 수있는 정보 유형을 생각해 보세요.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>요구 사항 명세서, 도구 또는 계획에 사용자 클래스 및 특성 및 책임을 문서화하십시오. 각 사용자 클래스에 대한 모든 관련 정보를 포함하십시오. (예: 크기 및 선호되는 클래스). 이는 향후 변경 요청을 우선 순위로 지정하고 영향 평가를 수행하는 팀을 도울 것입니다. 거래량을 추정함으로써 테스터가 제품의 사용 프로필을 개발하고 검증 활동을 계획하는 데 도움이 됩니다.</p>\n<p>표 1은 화학 물질 추적 정보 시스템의 샘플 사용자 클래스 문서 일부를 나타냅니다. 여러 응용 프로그램에서 반복되는 사용자 클래스의 재사용 가능 카탈로그를 작성하는 것을 고려하십시오.</p>\n<p>저는 실제 화학 물질 추적 시스템 프로젝트에서 비즈니스 분석 노력을 주도했습니다. 화학가 사용자 클래스는 우리의 이해 관계자 그룹 중에서 가장 큰 그룹이었습니다. 모든 화학가들은 시스템에 대한 많은 요구 사항을 공통으로 가지고 있지만, 우리는 몇 가지 전문 요구 사항을 갖고 있는 화학가 하위 그룹이 있음을 깨달았습니다. 우리는 이러한 하위 그룹의 화학가 사용자 대표팀을 구성하여 전체 화학가 사용자 클래스에 대한 요구 사항을 잘 끌어내기 위해 노력했습니다.</p>\n<!-- ui-station 사각형 -->\n<p><ins class=\"adsbygoogle\" style=\"display:block\" data-ad-client=\"ca-pub-4877378276818686\" data-ad-slot=\"7249294152\" data-ad-format=\"auto\" data-full-width-responsive=\"true\"></ins></p>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p>사용자 클래스 분석은 시간이 소요되지만, 가능한 많은 이해관계자를 만족시키며 성공적인 제품 개발 노력을 위한 기초를 마련하는 중요한 단계입니다.</p>\n<p>이 글은 Karl Wiegers와 Joy Beatty의 『Software Requirements, 3rd Edition』에서 적용된 것입니다. Karl은 Process Impact의 주요 컨설턴트입니다. 또한 Candase Hokanson과 함께 쓴 『Software Requirements Essentials』, 『Software Development Pearls』, 『The Thoughtless Design of Everyday Things』 및 『Successful Business Analysis Consulting』을 포함한 여러 책의 저자입니다.</p>\n</body>\n</html>\n"},"__N_SSG":true}